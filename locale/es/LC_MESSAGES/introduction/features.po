# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-02 06:38+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../introduction/features.rst:5
msgid "Caracteristicas"
msgstr ""

#: ../../introduction/features.rst:10
msgid "especificaciones"
msgstr ""

#: ../../introduction/features.rst:12
msgid "Primer bloque minado a las 11PM EST, el 18 de "
"enero del 2014"
msgstr ""

#: ../../introduction/features.rst:13
msgid "No esta pre minado"
msgstr ""

#: ../../introduction/features.rst:14
msgid "Algoritmo de hashing X11"
msgstr ""

#: ../../introduction/features.rst:15
msgid "Tiempo de generación de bloque de 2,6 minutos"
msgstr ""

#: ../../introduction/features.rst:16
msgid "La recompensa del bloque disminuye en 7.14% por año"
msgstr ""

#: ../../introduction/features.rst:17
msgid "CPU/GPU/ASIC mining"
msgstr ""

#: ../../introduction/features.rst:18
msgid "Algoritmo de ajuste de dificultad Dark Gravity Wave"
msgstr ""

#: ../../introduction/features.rst:19
msgid "Entre 17.74M y 18.92M de suministro total de monedas"
msgstr ""

#: ../../introduction/features.rst:20
msgid "Red de nodo maestro descentralizada"
msgstr ""

#: ../../introduction/features.rst:21
msgid "Anonimato de transacción superior con PrivateSend"
msgstr ""

#: ../../introduction/features.rst:22
msgid "Transacciones instantáneas usando InstantSend"
msgstr ""

#: ../../introduction/features.rst:23
msgid "Red de dos niveles que utiliza masternodes para formar el segundo nivel"
msgstr ""

#: ../../introduction/features.rst:24
msgid ""
"El Gobierno descentralizado por la Cadena de Bloques permite a los dueños "
"del nodo maestro votar acerca las propuestas presupuestarias y las decisiones "
"que afectan a Dash. Las propuestas presupuestarias financian el desarrollo de "
"Dash y provienen directamente de recompensas de los bloques, es decir, el "
"desarrollo de Dash es autofinanciado por su propia cadena de bloques".
msgstr ""

#: ../../introduction/features.rst:33
msgid "Nodos Maestros"
msgstr ""

#: ../../introduction/features.rst:35
#, python-format
msgid ""
"Además de las recompensas tradicionales de Prueba de Trabajo (PoW) "
"por la extracción de Dash, los usuarios también son recompensados por "
"ejecutar y mantener servidores especiales llamados nodos maestros. "
"Gracias a esta innovadora red de dos niveles, Dash puede ofrecer "
"características innovadoras de una manera descentralizada y sin "
"confianza. se utilizan para alimentar los envíos privados, envíos "
"instantáneos, y el sistema de gobierno y tesorería. Los usuarios son "
"recompensados por ejecutar estos nodos maestros; el 45% de la "
"recompensa del bloque se asigna para pagar a la red de nodos "
"maestros."
msgstr ""

#: ../../introduction/features.rst:44
msgid "Los nodos principales habilitan los siguientes servicios: "
msgstr ""

#: ../../introduction/features.rst:46
msgid ""
""**InstantSend** permite transacciones casi instantáneas. Las "
"transacciones de Dash InstantSend se confirman por completo en dos "
"segundos ".
msgstr ""

#: ../../introduction/features.rst:48
msgid ""
"**PrivateSend** brinda privacidad financiera al ocultar la fuente de "
"fondos en blockchain".
msgstr ""

#: ../../introduction/features.rst:50
#, python-format
msgid ""
"**Gobierno y Tesorería** le permite a los portadores de Dash determinar la "
"dirección del proyecto y le dedica un 10% de la recompensa por bloques al "
"desarrollo del proyecto y al ecosistema (como en marzo de 2017, nuestro "
"presupuesto anual es de $6,7 millones)".
msgstr ""

#: ../../introduction/features.rst:54
msgid "**Dash Evolution** hará que usar criptomonedas sea tan fácil como usar PayPal."
msgstr ""

#: ../../introduction/features.rst:57
msgid ""
"Los dueños de nodos maestros deben estar en posesión de 1000 DASH, que "
"prueban al firmar un mensaje y transmitirlo a la red. Estas monedas se pueden "
"mover en cualquier momento, pero esto hará que el nodo maestro se salga de la"
" cola y deje de obtener recompensas. a los usuarios también se les otorgan "
"**derechos de voto** en las propuestas. Cada uno de los nodos tiene un voto y "
"este voto puede usarse en propuestas de presupuesto o decisiones importantes "
"que afecten a Dash ".
msgstr ""

#: ../../introduction/features.rst:65
#, python-format
msgid ""
"Los nodos maestros cuestan dinero y esfuerzo para su hospedarse, por lo "
"que se les paga una parte de la recompensa del bloque como incentivo. "
"Con el numero de nodos maestros actuales y las recompensas, los nodos "
"maestros obtienen aproximadamente un 8% en retorno de los 1000 Dash "
"(lo que significa 6.97 Dash o USD 1360 en julio de 2017) para el año de "
"2017. Esta `herramienta <https://stats.masternode.me/>`_ muestra un "
"cálculo en vivo de las ganancias de los nodos maestros. Estas "
"recompensas disminuyen un 7% cada año, pero el valor en aumento de "
"Dash debería compensar estas reducciones. De hecho, los nodos "
"maestros recibían 140 Dash por mes a principios de 2016, pero en "
"realidad era menos dinero que a dia de hoy: USD600 por mes. También "
"existe la posibilidad de que los nodos maestros ganen dinero con "
"comisiones en el futuro ".
msgstr ""

#: ../../introduction/features.rst:81 ../../introduction/features.rst:494
msgid "PrivateSend"
msgstr ""

#: ../../introduction/features.rst:83
msgid ""
"PrivateSend te brinda una verdadera privacidad financiera al oscurecer los "
"orígenes de tus fondos. Todo el Dash en su billetera se compone de "
"diferentes \"entradas\", que se pueden considerar como monedas separadas"
" y discretas. PrivateSend usas un proceso innovador para mezclar sus "
"entradas con las aportaciones de otras dos personas, sin que sus monedas "
"salgan de su billetera. Usted retiene el control de su dinero en todo momento ".
msgstr ""

#: ../../introduction/features.rst:90
msgid "The PrivateSend process works like this:"
msgstr ""

#: ../../introduction/features.rst:92
msgid ""
"PrivateSend begins by breaking your transaction inputs down into standard"
" denominations. These denominations are 0.01 Dash, 0.1 DASH, 1 DASH and "
"10 DASH -- much like the paper money you use every day."
msgstr ""

#: ../../introduction/features.rst:95
msgid ""
"Your wallet then sends requests to specially configured software nodes on"
" the network, called \"masternodes\". These masternodes are informed then"
" that you are interested in mixing a certain denomination. No "
"identifiable information is sent to the masternodes, so they never know "
"\"who\" you are."
msgstr ""

#: ../../introduction/features.rst:100
msgid ""
"When two other people send similar messages, indicating that they wish to"
" mix the same denomination, a mixing session begins. The masternode mixes"
" up the inputs and instructs all three users' wallets to pay the now-"
"transformed input back to themselves. Your wallet pays that denomination "
"directly to itself, but in a different address (called a change address)."
msgstr ""

#: ../../introduction/features.rst:106
msgid ""
"In order to fully obscure your funds, your wallet must repeat this "
"process a number of times with each denomination. Each time the process "
"is completed, it's called a \"round\". Each round of PrivateSend makes it"
" exponentially more difficult to determine where your funds originated."
msgstr ""

#: ../../introduction/features.rst:111
msgid ""
"This mixing process happens in the background without any intervention on"
" your part. When you wish to make a transaction, your funds will already "
"be anonymized. No additional waiting is required."
msgstr ""

#: ../../introduction/features.rst:115
msgid ""
"**IMPORTANT:** Your wallet only contains 1000 of these \"change "
"addresses\". Every time a mixing event happens, one of your addresses is "
"used up. Once enough of them are used, your wallet must create more "
"addresses. It can only do this, however, if you have automatic backups "
"enabled. Consequently, users who have backups disabled will also have "
"PrivateSend disabled."
msgstr ""

#: ../../introduction/features.rst:126 ../../introduction/features.rst:492
msgid "InstantSend"
msgstr ""

#: ../../introduction/features.rst:128
msgid ""
"Traditional decentralized cryptocurrencies must wait for certain period "
"of time for enough blocks to pass to ensure that a transaction is both "
"irreversible and not an attempt to double-spend money which has already "
"been spent elsewhere. This process is time-consuming, and may take "
"anywhere from 15 minutes to one hour for the widely accepted number of "
"six blocks to accumulate. Other cryptocurrencies achieve faster "
"transaction confirmation time by centralizing authority on the network to"
" various degrees."
msgstr ""

#: ../../introduction/features.rst:137
msgid ""
"Dash suffers from neither of these limitations thanks to its second-layer"
" network of masternodes. Masternodes can be called upon to form voting "
"quorums to check whether or not a submitted transaction is valid. If it "
"is valid, the masternodes \"lock\" the inputs for the transaction and "
"broadcast this information to the network, effectively promising that the"
" transaction will be included in subsequently mined blocks and not "
"allowing any other spending of these inputs during the confirmation time "
"period."
msgstr ""

#: ../../introduction/features.rst:146
msgid ""
"InstantSend technology will allow for cryptocurrencies such as Dash to "
"compete with nearly instantaneous transaction systems such as credit "
"cards for point-of-sale situations while not relying on a centralized "
"authority. Widespread vendor acceptance of Dash and InstantSend could "
"revolutionize cryptocurrency by shortening the delay in confirmation of "
"transactions from as long as an hour (with Bitcoin) to as little as a few"
" seconds."
msgstr ""

#: ../../introduction/features.rst:154
#, python-format
msgid ""
"InstantSend was introduced in a whitepaper called `Transaction Locking "
"and Masternode Consensus: A Mechanism for Mitigating Double Spending "
"Attacks "
"<https://github.com/dashpay/docs/raw/master/pdf/Dash%20Whitepaper%20-%20Transaction%20Locking%20and%20Masternode%20Consensus.pdf>`_."
msgstr ""

#: ../../introduction/features.rst:158
msgid ""
"**How Dash 'InstantSend' Protects Merchants from Double Spends**, Dash "
"Detailed by Amanda B. Johnson, 16 September 2016"
msgstr ""

#: ../../introduction/features.rst:171
msgid "Sporks"
msgstr ""

#: ../../introduction/features.rst:173
msgid ""
"In response to unforeseen issues with the rollout of the major \"RC3\" "
"update in June 2014, the Dash development team created a mechanism by "
"which updated code is released to the network, but not immediately made "
"active (\"enforced\"). This innovation allows for far smoother "
"transitions than in the traditional hard fork paradigm, as well as the "
"collection of test data in the live network environment. This process of "
"multi-phased forking was originally to be called \"soft forking\" but the"
" community affectionately dubbed it \"the spork\" and the name stuck."
msgstr ""

#: ../../introduction/features.rst:181
msgid ""
"New features or versions of Dash undergo extensive testing on testnet "
"before they are released to the main network. When a new feature or "
"version of Dash is released on mainnet, communication is sent out to "
"users informing them of the change and the need for them to update their "
"clients. Those who update their clients run the new code, but it is not "
"activated until a sufficient percentage of network participants (usually "
"80%) reach consensus on running it. In the event of errors occurring with"
" the new code, the client’s blocks are not rejected by the network and "
"unintended forks are avoided. Data about the error can then be collected "
"and forwarded to the development team. Once the development team is "
"satisfied with the new code’s stability in the mainnet environment – and "
"once acceptable network consensus is attained – enforcement of the "
"updated code can be activated remotely by multiple members of the core "
"development team signing a network message together with their respective"
" private keys. Should problems arise, the code can be deactivated in the "
"same manner, without the need for a network-wide rollback or client "
"update. For technical details on individual sporks, see `here "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/128319489/Understanding+Sporks>`_."
msgstr ""

#: ../../introduction/features.rst:205
msgid "X11 Hash Algorithm"
msgstr ""

#: ../../introduction/features.rst:207
msgid ""
"X11 is a widely used hashing algorithm created by Dash core developer "
"Evan Duffield. X11’s chained hashing algorithm utilizes a sequence of "
"eleven scientific hashing algorithms for the proof-of-work. This is so "
"that the processing distribution is fair and coins will be distributed in"
" much the same way Bitcoin’s were originally. X11 was intended to make "
"ASICs much more difficult to create, thus giving the currency plenty of "
"time to develop before mining centralization became a threat. This "
"approach was largely successful; as of early 2016, ASICs for X11 now "
"exist and comprise a significant portion of the network hashrate, but "
"have not resulted in the level of centralization present in Bitcoin. "
"Information on mining with X11 can be found in the `Mining <mining>`_ "
"section of this documentation."
msgstr ""

#: ../../introduction/features.rst:220
msgid ""
"X11 is the name of the chained proof-of-work (**PoW**) algorithm that was"
" introduced in Dash (launched January 2014 as \"Xcoin\"). It was "
"partially inspired by the chained-hashing approach of Quark, adding "
"further \"depth\" and complexity by increasing the number of hashes, yet "
"it differs from Quark in that the rounds of hashes are determined *a "
"priori* instead of having some hashes being randomly picked."
msgstr ""

#: ../../introduction/features.rst:227
msgid ""
"The X11 algorithm uses multiple rounds of 11 different hashes (blake, "
"bmw, groestl, jh, keccak, skein, luffa, cubehash, shavite, simd, echo), "
"thus making it one of the safest and more sophisticated cryptographic "
"hashes in use by modern cryptocurrencies. The name X11 is not related to "
"the open source X11 windowing system common on UNIX-like operating "
"systems."
msgstr ""

#: ../../introduction/features.rst:235
msgid "Advantages of X11"
msgstr ""

#: ../../introduction/features.rst:237
msgid ""
"The increased complexity and sophistication of the chained algorithm "
"provides enhanced levels of security and less uncertainty for a digital "
"currency, compared to single-hash PoW solutions that are not protected "
"against security risks like SPOF (Single Point Of Failure). For example, "
"a possible but not probable computing breakthrough that \"breaks\" the "
"SHA256 hash could jeopardize the entire Bitcoin network until the network"
" shifts through a hard fork to another cryptographic hash."
msgstr ""

#: ../../introduction/features.rst:245
msgid ""
"In the event of a similar computing breakthrough, a digital currency "
"using the X11 PoW would continue to function securely unless all 11 "
"hashes were broken simultaneously. Even if some of the 11 hashes were to "
"prove unreliable, there would be adequate warning for a currency using "
"X11 to take measures and replace the problematic hashes with other more "
"reliable hashing algorithms."
msgstr ""

#: ../../introduction/features.rst:252
msgid ""
"Given the speculative nature of digital currencies and their inherent "
"uncertainties as a new field, the X11 algorithm can provide increased "
"confidence for its users and potential investors that single-hash "
"approaches cannot. Chained hashing solutions, like X11, provide increased"
" safety and longevity for store of wealth purposes, investment "
"diversification and hedging against risks associated with single-hash "
"currencies plagued by SPOF (Single Point Of Failure)."
msgstr ""

#: ../../introduction/features.rst:260
msgid ""
"Evan Duffield, the creator of Dash and X11 chained-hash, has written on "
"several occasions that X11 was integrated into Dash not with the "
"intention to prevent ASIC manufacturers from creating ASICs for X11 in "
"the future, but rather to provide a similar migratory path that Bitcoin "
"had (CPUs, GPUs, ASICs)."
msgstr ""

#: ../../introduction/features.rst:270
msgid "Dark Gravity Wave"
msgstr ""

#: ../../introduction/features.rst:272
msgid ""
"**DGW** or *Dark Gravity Wave* is an open source difficulty-adjusting "
"algorithm for Bitcoin-based cryptocurrencies that was first used in Dash "
"and has since appeared in other digital currencies. DGW was authored by "
"Evan Duffield, the developer and creator of Dash, as a response to a "
"time-warp exploit found in *Kimoto's Gravity Well*. In concept, DGW is "
"similar to the Kimoto Gravity Well, adjusting the difficulty levels every"
" block (instead of every 2016 blocks like Bitcoin) based on statistical "
"data from recently found blocks. This makes it possible to issue blocks "
"with relatively consistent times, even if the hashing power experiences "
"high fluctuations, without suffering from the time-warp exploit."
msgstr ""

#: ../../introduction/features.rst:284
msgid ""
"Version 2.0 of DGW was implemented in Dash from block 45,000 onwards in "
"order to completely alleviate the time-warp exploit."
msgstr ""

#: ../../introduction/features.rst:287
msgid ""
"Version 3.0 was implemented on May 14 of 2014 to further improve "
"difficulty re-targeting with smoother transitions. It also fixes issues "
"with various architectures that had different levels of floating-point "
"accuracy through the use of integers."
msgstr ""

#: ../../introduction/features.rst:296
msgid "Emission Rate"
msgstr ""

#: ../../introduction/features.rst:298
msgid ""
"Cryptocurrencies such as Dash and Bitcoin are created through a "
"cryptographically difficult process known as mining. Mining involves "
"repeatedly solving `hash algorithms <x11-hash-algorithm>`_ until a valid "
"solution for the current `mining difficulty <dark-gravity-wave>`_ is "
"discovered. Once discovered, the miner is permitted to create new units "
"of the currency. This is known as the block reward. To ensure that the "
"currency is not subject to endless inflation, the block reward is reduced"
" at regular intervals. Graphing this data results in a curve showing "
"total coins in circulation, known as the coin emission rate."
msgstr ""

#: ../../introduction/features.rst:308
#, python-format
msgid ""
"While Dash is based on Bitcoin, it significantly modifies the coin "
"emission rate to offer a smoother reduction in coin emission over time. "
"While Bitcoin reduces the coin emission rate by 50% every 4 years, Dash "
"reduces the emission by one-fourteenth (approx. 7.14%) every 210240 "
"blocks (approx. 383.25 days). It can be seen that reducing the block "
"reward by a smaller amount each year offers a smoother transition to a "
"fee-based economy than Bitcoin."
msgstr ""

#: ../../introduction/features.rst:319
msgid "Bitcoin vs. Dash coin emission rate"
msgstr ""

#: ../../introduction/features.rst:323
msgid "Total coin emission"
msgstr ""

#: ../../introduction/features.rst:325
#, python-format
msgid ""
"`Bitcoin's total coin emission "
"<https://docs.google.com/spreadsheets/d/12tR_9WrY0Hj4AQLoJYj9EDBzfA38XIVLQSOOOVePNm0/pubhtml?gid=0&single=true>`_"
" can be calculated as the sum of a geometric series, with the total "
"emission approaching (but never reaching) 21,000,000 BTC. This will "
"continue until 2140, but the mining reward reduces so quickly that 99% of"
" all bitcoin will be in circulation by 2036, and 99.9% by 2048."
msgstr ""

#: ../../introduction/features.rst:331
msgid ""
"`Dash's total coin emission <https://docs.google.com/spreadsheets/d"
"/1JUK4Iy8pjTzQ3Fvc-iV15n2qn19fmiJhnKDDSxebbAA/edit#gid=205877544>`_ is "
"also the sum of a geometric series, but the ultimate total coin emission "
"is uncertain because it cannot be known how much of the 10% block reward "
"reserved for budget proposals will actually be allocated, since this "
"depends on future voting behavior. Dash will continue to emit coins for "
"approximately 192 years before a full year of mining creates less than 1 "
"DASH. After 2209 only 14 more dash will be created. The last dash will "
"take 231 years to be generated, starting in 2246 and ending when emission"
" completely stops in 2477. Based on these numbers, a maximum and minimum "
"possible coin supply in the year 2254 can be calculated to be between:"
msgstr ""

#: ../../introduction/features.rst:345
msgid "17,742,696 DASH"
msgstr ""

#: ../../introduction/features.rst:345
msgid "Assuming zero treasury allocation"
msgstr ""

#: ../../introduction/features.rst:347
msgid "18,921,005 DASH"
msgstr ""

#: ../../introduction/features.rst:347
msgid "Assuming full treasury allocation"
msgstr ""

#: ../../introduction/features.rst:351
msgid "Block reward allocation"
msgstr ""

#: ../../introduction/features.rst:353
#, python-format
msgid ""
"Unlike Bitcoin, which allocates 100% of the block reward to miners, Dash "
"splits the block reward between the `miner "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/1146945/Mining>`_, a"
" deterministically selected `masternode "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/33947684/Understanding+masternodes>`_,"
" and the decentralized `budget system "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/8585246/Governance+and+Budget+System>`_."
" Dash features superblocks, which appear every 16616 blocks (approx. "
"30.29 days) and release 10% of the cumulative budget over that `budget "
"cycle period "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/19169430/Using+Decentralized+Governance%3A+Proposals%2C+Voting%2C+and+Budgets>`_"
" to the winning proposals in the budget system. To pay for superblocks, "
"the block reward for normal blocks over the period is reduced by 10%. "
"Normal block payments are split equally between miners and masternodes "
"according to the `payment logic "
"<https://dashpay.atlassian.net/wiki/spaces/DOC/pages/8880184/Payment+Logic>`_,"
" resulting in an coin reward allocation over a budget cycle as follows:"
msgstr ""

#: ../../introduction/features.rst:369 ../../introduction/features.rst:371
msgid "45%"
msgstr ""

#: ../../introduction/features.rst:369
msgid "Mining Reward"
msgstr ""

#: ../../introduction/features.rst:371
msgid "Masternode Reward for Proof-of-service"
msgstr ""

#: ../../introduction/features.rst:373
msgid "10%"
msgstr ""

#: ../../introduction/features.rst:373
msgid "Decentralized Governance Budget"
msgstr ""

#: ../../introduction/features.rst:376
msgid ""
"This documentaiton is based on calculations and posts by moocowmoo. "
"Please see `this reddit post "
"<https://www.reddit.com/r/dashpay/comments/7fc2on/dash_over_1000_in_a_few_weeks/dqb4pjn/>`_"
" for more details, or run your own `emission calculations using this tool"
" <https://repl.it/@moocowmoo/dash-minmax-coin-generation>`_. See `this "
"site <https://stats.masternode.me>`_ for live data on current network "
"statistics."
msgstr ""

#: ../../introduction/features.rst:386
msgid "Decentralized Governance"
msgstr ""

#: ../../introduction/features.rst:388
msgid ""
"Decentralized Governance by Blockchain, or DGBB, is Dash's attempt to "
"solve two important problems in cryptocurrency: governance and funding. "
"Governance in a decentralized project is difficult, because by definition"
" there are no central authorities to make decisions for the project. In "
"Dash, such decisions are made by the network, that is, by the owners of "
"masternodes. The DGBB system allows each masternode to vote once "
"(yes/no/abstain) for each proposal. If a proposal passes, it can then be "
"implemented (or not) by Dash's developers. A key example is early in "
"2016, when Dash's Core Team submitted a proposal to the network asking "
"whether the blocksize should be increased to 2 MB. Within 24 hours, "
"consensus had been reached to approve this change. Compare this to "
"Bitcoin, where debate on the blocksize has been raging for nearly three "
"years."
msgstr ""

#: ../../introduction/features.rst:402
#, python-format
msgid ""
"DGBB also provides a means for Dash to fund its own development. While "
"other projects have to depend on donations or premined endowments, Dash "
"uses 10% of the block reward to fund its own development. Every time a "
"block is mined, 45% of the reward goes to the miner, 45% goes to a "
"masternode, and the remaining 10% is not created until the end of the "
"month. During the month, anybody can make a budget proposal to the "
"network. If that proposal receives net approval of at least 10% of the "
"masternode network, then at the end of the month a series of "
"\"superblocks\" will be created. At that time, the block rewards that "
"were not paid out (10% of each block) will be used to fund approved "
"proposals. The network thus funds itself by reserving 10% of the block "
"reward for budget projects."
msgstr ""

#: ../../introduction/features.rst:415
msgid ""
"You can read more about Dash governance in the `governance <dgbb>`_ "
"section of this documentation."
msgstr ""

#: ../../introduction/features.rst:422
msgid "Sentinel"
msgstr ""

#: ../../introduction/features.rst:424
msgid ""
"Sentinel is an autonomous agent for persisting, processing and automating"
" Dash 12.1 governance objects and tasks, and for expanded functions in "
"the upcoming Dash V13 release (Evolution). Sentinel is implemented as a "
"Python application that binds to a local version 12.1 dashd instance on "
"each Dash 12.1 masternode."
msgstr ""

#: ../../introduction/features.rst:430
msgid ""
"A Governance Object (or \"govObject\") is a generic structure introduced "
"in Dash Core 12.1 to allow for the creation of Budget Proposals, "
"Triggers, and Watchdogs. Class inheritance has been utilized to extend "
"this generic object into a \"Proposal\" object to supplant the current "
"Dash budget system."
msgstr ""

#: ../../introduction/features.rst:439
msgid ""
"*\"The differences with Sentinel are really architectural and not easy/ "
"interesting to explain to users as they are a bridge from 12.0 towards "
"Evo features (but not fully implementing them), and Sentinel was only a "
"part of 12.1 improvements anyway. Pre-Sentinel, governance functions were"
" 'hard wired' into core code. Sentinel abstracts this process because in "
"Evolution there are many Object types from Users to Accounts to Contacts "
"etc, and if we didn't make this change first, future changes / "
"improvements in Evolution (e.g. adding a new type of Object) would "
"require changing core code. Now Core is agnostic to types of objects and "
"we can take this forward for user experience and not just governance. In "
"terms of documentation, there is no whitepaper specific to Sentinel, but "
"we have various docs for Evo in an on-going RFC process which are used as"
" the basis for Evo development.*"
msgstr ""

#: ../../introduction/features.rst:471
msgid "Andy Freer, Evolution Developer"
msgstr ""

#: ../../introduction/features.rst:460
msgid "Fees"
msgstr ""

#: ../../introduction/features.rst:462
msgid ""
"Transactions on the Dash network are recorded in blocks on the "
"blockchain. The size of each transaction is measured in bytes, but there "
"is not necessarily a correlation between high value transactions and the "
"number of bytes required to process the transaction. Instead, transaction"
" size is affected by how many input and output addresses are involved, "
"since more data must be written in the block to store this information. "
"Each new block is generated by a miner, who is paid for completing the "
"work to generate the block with a block reward. In order to prevent the "
"network from being filled with spam transactions, the size of each block "
"is artificially limited. As transaction volume increases, the space in "
"each block becomes a scarce commodity. Because miners are not obliged to "
"include any transaction in the blocks they produce, once blocks are full,"
" a voluntary transaction fee can be included as an incentive to the miner"
" to process the transaction. Most wallets include a small fee by default,"
" although many miners will process transactions even if no fee is "
"included."
msgstr ""

#: ../../introduction/features.rst:479
msgid ""
"The release of Dash 0.12.2.0 and activation of DIP0001 saw a simultaneous"
" reduction of fees by a factor of 10, while the block size was increased "
"from 1MB to 2MB to promote continued growth of low-cost transactions even"
" as the cost of Dash rises. Dash also supports `InstantSend "
"<instantsend>`_ and `PrivateSend <privatesend>`_ transactions, which "
"operate on a different and mandatory fee schedule. The fee schedule for "
"Dash 12.2.x as of December 2017 is as follows:"
msgstr ""

#: ../../introduction/features.rst:488
msgid "Transaction type"
msgstr ""

#: ../../introduction/features.rst:488
msgid "Recommended fee"
msgstr ""

#: ../../introduction/features.rst:488
msgid "Per unit"
msgstr ""

#: ../../introduction/features.rst:490
msgid "Standard transaction"
msgstr ""

#: ../../introduction/features.rst:490
msgid ".00001 DASH"
msgstr ""

#: ../../introduction/features.rst:490
msgid "Per kB of transaction data"
msgstr ""

#: ../../introduction/features.rst:492
msgid ".0001 DASH"
msgstr ""

#: ../../introduction/features.rst:492
msgid "Per transaction input"
msgstr ""

#: ../../introduction/features.rst:494
msgid ".001 DASH"
msgstr ""

#: ../../introduction/features.rst:494
msgid "Per 10 rounds of mixing (average)"
msgstr ""

#: ../../introduction/features.rst:497
msgid ""
"As an example, a standard and relatively simple transaction on the Dash "
"network with one input, one output and a possible change address "
"typically fits in the range of 200 - 400 bytes. Assuming a price of "
"US$800 per DASH, the fee falls in the range of $0.0015 - $0.0030, or well"
" under half a cent. Processing the transaction using InstantSend at the "
"same price would add $0.08 or eight cents to the transaction. These fees "
"apply regardless of the Dash or dollar value of the transaction itself."
msgstr ""

#: ../../introduction/features.rst:506
msgid ""
"PrivateSend works by creating denominations of 10, 1, 0.1 and 0.01 DASH "
"and then mixing these denominations with other users. Creation of the "
"denominations is charged at the default fee for a standard transaction. "
"Mixing is free, but to prevent spam attacks, an average of one in ten "
"mixing transactions are charged a fee of 0.001 DASH. Spending inputs "
"mixed using PrivateSend incurs the usual standard or InstantSend fees, "
"but to avoid creating a potentially identifiable change address, the fee "
"is always rounded up to the lowest possible denomination. This is "
"typically .01 DASH, so it is important to deduct the fee from the amount "
"being sent if possible to minimise fees. Combining InstantSend and "
"PrivateSend may be expensive due to this requirement and the fact that a "
"PrivateSend transaction may require several inputs, while InstantSend "
"charges a fee of 0.0001 DASH per input. Always check your fees before "
"sending a transaction."
msgstr ""

#: ../../introduction/features.rst:525
msgid "Evolution"
msgstr ""

#: ../../introduction/features.rst:527
msgid ""
"`Dash Evolution <https://www.dash.org/evolution/>`_ is the code name for "
"a decentralized currency platform built on Dash blockchain technology. "
"The goal is to provide simple access to the unique features and benefits "
"of Dash to assist in the creation of decentralized technology. Dash "
"introduces a tiered network design, which allows users to do various jobs"
" for the network, along with decentralized API access and a decentralized"
" file system."
msgstr ""

#: ../../introduction/features.rst:535
msgid ""
"Dash Evolution will be released in stages. Dash Core releases 12.1 "
"through to 12.3 will lay the groundwork for the decentralized features "
"behind the scenes. An alpha version of Evolution is expected in the first"
" half of 2018, including a basic implementation of DashDrive, Primitives,"
" DAPI and a simple T3 wallet. This will be released together with a "
"series of Dash Improvement Proposals (DIPs), followed by a testnet phase "
"with most basic functionality, and a first stable release in summer 2018."
msgstr ""

#: ../../introduction/features.rst:544
msgid ""
"Included below is our current work on Evolution, that adds many "
"components such as:"
msgstr ""

#: ../../introduction/features.rst:547
msgid ""
"**DashDrive:** A decentralized shared file system for user data that "
"lives on the second tier network"
msgstr ""

#: ../../introduction/features.rst:549
msgid ""
"**DAPI:** A decentralized API which allows third tier users to access the"
" network securely"
msgstr ""

#: ../../introduction/features.rst:551
msgid ""
"**DashPay Decentralized Wallets:** These wallets are light clients "
"connected to the network via DAPI and run on various platforms"
msgstr ""

#: ../../introduction/features.rst:553
msgid ""
"**Second Tier:** The masternode network, which provides compensated "
"infrastructure for the project"
msgstr ""

#: ../../introduction/features.rst:555
msgid ""
"**Budgets:** The second tier is given voting power to allocate funds for "
"specific projects on the network via the budget system"
msgstr ""

#: ../../introduction/features.rst:557
msgid ""
"**Governance:** The second tier is given voting power to govern the "
"currency and chart the course the currency takes"
msgstr ""

#: ../../introduction/features.rst:559
msgid ""
"**Quorum Chain:** This feature introduces a permanent stable masternode "
"list, which can be used to calculate past and present quorums"
msgstr ""

#: ../../introduction/features.rst:561
msgid ""
"**Social Wallet:** We introduce a social wallet, which allows friends "
"lists, grouping of users and shared multisig accounts."
msgstr ""

#: ../../introduction/features.rst:565
msgid "Evolution Previews"
msgstr ""

#: ../../introduction/features.rst:567
msgid ""
"The following videos featuring Dash Founder Evan Duffield and Head of "
"UI/UX Development Chuck Williams describe the development process and "
"upcoming features of the Dash Evolution platform."
msgstr ""

#: ../../introduction/features.rst:572
msgid "**Chuck Williams on Evolution**, Dash Conference London, 14 September 2017"
msgstr ""

#: ../../introduction/features.rst:580
msgid "**Evan Duffield on the Evolution Roadmap**, Dash Force News, 28 June 2017"
msgstr ""

