# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Leon White <leon.white@dash.org>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-04 12:28-0400\n"
"PO-Revision-Date: 2022-12-27 18:55+0000\n"
"Last-Translator: Leon White <leon.white@dash.org>, 2022\n"
"Language-Team: Japanese (https://app.transifex.com/dash/teams/37570/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../docs/user/developers/integration.rst-1
msgid "Technical guides for developers integrating Dash."
msgstr ""

#: ../../docs/user/developers/integration.rst-1
msgid ""
"dash, merchants, API, SDK, instantsend, python, .NET, java, javascript, "
"nodejs, php, objective-c"
msgstr ""

#: ../../docs/user/developers/integration.rst:9
msgid "Integration Overview"
msgstr ""

#: ../../docs/user/developers/integration.rst:11
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_IntegrationOverview.pdf>`__."
msgstr ""

#: ../../docs/user/developers/integration.rst:13
msgid ""
"`Dash Core <https://github.com/dashpay/dash/releases>`__ is a fork of "
"`Bitcoin Core <https://github.com/bitcoin/bitcoin>`__ and shares many common"
" functionalities. Key differences are found in existing JSON-RPC commands "
"which have been customized to support unique functionalities such as "
"InstantSend."
msgstr ""

#: ../../docs/user/developers/integration.rst:19
msgid "The Basics"
msgstr ""

#: ../../docs/user/developers/integration.rst:21
msgid ""
"Dash is a Proof of Work network, and similar to Bitcoin, Dash has a mining "
"network but uses a different block hashing algorithm. Dash serves as an "
"improvement of Bitcoin's shortcomings by offering a robust solution for "
"instant transactions, enhancing user privacy, and offering a self-"
"sustainable decentralized governance model."
msgstr ""

#: ../../docs/user/developers/integration.rst:27
msgid "Block time: ~2.6 minutes per block"
msgstr ""

#: ../../docs/user/developers/integration.rst:28
msgid "Github source: https://github.com/dashpay/dash"
msgstr ""

#: ../../docs/user/developers/integration.rst:29
msgid "Latest release: https://github.com/dashpay/dash/releases/latest"
msgstr ""

#: ../../docs/user/developers/integration.rst:32
msgid "JSON-RPC Interface"
msgstr ""

#: ../../docs/user/developers/integration.rst:34
msgid ""
"The majority of commands are unchanged from Bitcoin making integration into "
"existing systems relatively straightforward. For a complete listing of RPC "
"commands please refer to the `​Dash Developer Guide "
"<https://dashcore.readme.io/docs/core-guide-introduction>`_."
msgstr ""

#: ../../docs/user/developers/integration.rst:39
msgid ""
"Note that the following commands have been modified to support InstantSend:"
msgstr ""

#: ../../docs/user/developers/integration.rst:41
#: ../../docs/user/developers/integration.rst:186
msgid ""
"`getrawmempool <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getrawmempool>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:42
#: ../../docs/user/developers/integration.rst:187
msgid ""
"`getmempoolancestors <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempoolancestors>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:43
#: ../../docs/user/developers/integration.rst:188
msgid ""
"`getmempooldescendants <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempooldescendants>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:44
#: ../../docs/user/developers/integration.rst:189
msgid ""
"`getmempoolentry <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempoolentry>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:45
#: ../../docs/user/developers/integration.rst:190
msgid ""
"`getrawtransaction <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-raw-transactions#getrawtransaction>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:46
#: ../../docs/user/developers/integration.rst:191
msgid ""
"`gettransaction <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#gettransaction>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:47
#: ../../docs/user/developers/integration.rst:192
msgid ""
"`listtransactions <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#listtransactions>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:48
#: ../../docs/user/developers/integration.rst:193
msgid ""
"`listsinceblock <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#listsinceblock>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:51
#: ../../docs/user/developers/integration.rst:72
msgid "Special Transactions"
msgstr ""

#: ../../docs/user/developers/integration.rst:53
msgid ""
"Dash Core v0.13.0 introduced the concept of “Special Transactions” as "
"specified in `DIP002 "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__. Special "
"Transactions provide a more native way to implement additional features "
"which do not fit into the original concept of transactions. Please see the "
":ref:`Special Transactions <integration-special-transactions>` section below"
" for more information."
msgstr ""

#: ../../docs/user/developers/integration.rst:61
msgid "Block Hashing Algorithm"
msgstr ""

#: ../../docs/user/developers/integration.rst:63
msgid ""
"Dash uses the X11 algorithm in place of SHA256 used in Bitcoin. It’s "
"important to note, however, that this only affects the hashing of the block "
"itself. All other internals utilize SHA256 hashes (transactions, merkle "
"root, etc.), which allows for most existing libraries to work in the Dash "
"ecosystem."
msgstr ""

#: ../../docs/user/developers/integration.rst:74
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__."
msgstr ""

#: ../../docs/user/developers/integration.rst:76
msgid ""
"Dash 0.13.0 and higher implement `DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__, which form a "
"basis for new transaction types that provide on-chain metadata to assist "
"various consensus mechanisms. The following special transaction types exist:"
msgstr ""

#: ../../docs/user/developers/integration.rst:82
msgid "Version"
msgstr ""

#: ../../docs/user/developers/integration.rst:82
msgid "Type"
msgstr ""

#: ../../docs/user/developers/integration.rst:82
msgid "Payload Size"
msgstr ""

#: ../../docs/user/developers/integration.rst:82
msgid "Transaction Purpose / Example"
msgstr ""

#: ../../docs/user/developers/integration.rst:84
#: ../../docs/user/developers/integration.rst:86
#: ../../docs/user/developers/integration.rst:88
#: ../../docs/user/developers/integration.rst:90
#: ../../docs/user/developers/integration.rst:92
#: ../../docs/user/developers/integration.rst:94
#: ../../docs/user/developers/integration.rst:96
msgid "3"
msgstr ""

#: ../../docs/user/developers/integration.rst:84
msgid "0"
msgstr ""

#: ../../docs/user/developers/integration.rst:84
msgid "n/a"
msgstr ""

#: ../../docs/user/developers/integration.rst:84
msgid "Standard Transaction"
msgstr ""

#: ../../docs/user/developers/integration.rst:86
msgid "1"
msgstr ""

#: ../../docs/user/developers/integration.rst:86
#: ../../docs/user/developers/integration.rst:88
#: ../../docs/user/developers/integration.rst:90
#: ../../docs/user/developers/integration.rst:92
#: ../../docs/user/developers/integration.rst:94
#: ../../docs/user/developers/integration.rst:96
msgid "variable"
msgstr ""

#: ../../docs/user/developers/integration.rst:86
msgid ""
"`Masternode Registration <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-reg-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:88
msgid "2"
msgstr ""

#: ../../docs/user/developers/integration.rst:88
msgid ""
"`Update Masternode Service <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-serv-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:90
msgid ""
"`Update Masternode Operator <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-reg-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:92
msgid "4"
msgstr ""

#: ../../docs/user/developers/integration.rst:92
msgid ""
"`Masternode Revocation <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-rev-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:94
msgid "5"
msgstr ""

#: ../../docs/user/developers/integration.rst:94
msgid ""
"`Masternode List Merkle Proof <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-cb-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:96
msgid "6"
msgstr ""

#: ../../docs/user/developers/integration.rst:96
msgid ""
"`Quorum Commitment <https://dashcore.readme.io/docs/core-ref-transactions-"
"special-transactions#section-qc-tx>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:99
msgid "Integration notes:"
msgstr ""

#: ../../docs/user/developers/integration.rst:101
msgid ""
"`DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ introduced a "
"new Transaction Version and related “Payload” to the network."
msgstr ""

#: ../../docs/user/developers/integration.rst:104
msgid ""
"Integrated Systems must be able to `serialize and deserialize "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#serialization-"
"hashing-and-signing>`__ these new Transaction Types to accurately encode and"
" decode Raw Transaction data."
msgstr ""

#: ../../docs/user/developers/integration.rst:108
msgid ""
"From a `backwards compatibility "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#compatibility>`__ "
"perspective, the 4 byte (32-bit) ``version`` field included in Classical "
"Transactions was split into two fields: ``version`` and ``type`` (each "
"consisting of 2 bytes)."
msgstr ""

#: ../../docs/user/developers/integration.rst:113
msgid ""
"Refer to the `Special Transactions <https://dashcore.readme.io/docs/core-"
"ref-transactions-special-transactions>`__ section of the Dash developer "
"reference for additional detail on these data types, e.g. <variable int>."
msgstr ""

#: ../../docs/user/developers/integration.rst:117
msgid ""
":ref:`InstantSend <integration-instantsend>` status and Payload JSON (e.g. "
"``proRegTx``) is included in the JSON-RPC response, please note that this "
"data is not part of the calculated hash and is provided for convenience."
msgstr ""

#: ../../docs/user/developers/integration.rst:122
msgid ""
"See the `transaction types integration documentation (PDF) "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__ for worked examples of each transaction "
"type."
msgstr ""

#: ../../docs/user/developers/integration.rst:129
msgid "InstantSend"
msgstr "インスタントセンド"

#: ../../docs/user/developers/integration.rst:131
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.14_LLMQ_InstantSend.pdf>`__."
msgstr ""

#: ../../docs/user/developers/integration.rst:133
msgid ""
"InstantSend is a feature provided by the Dash network that allows for zero-"
"confirmation transactions to be safely accepted and re-spent. The network "
"attempts to lock the inputs of every valid transaction when it is broadcast "
"to the network. Every secured transaction is included in a following block "
"in accordance with standard blockchain principles. Transactions are "
"typically locked by InstantSend within 3 seconds of being propagated to the "
"network."
msgstr ""

#: ../../docs/user/developers/integration.rst:141
msgid ""
"InstantSend is enabled by the Masternode Network which comprises several "
"thousand masternode servers. These nodes are differentiated from standard "
"nodes by having proven ownership of 1,000 Dash, making the network `highly "
"resistant to Sybil attacks <https://en.wikipedia.org/wiki/Sybil_attack>`__. "
"Masternodes form `Long-Living Masternode Quorums (LLMQs) "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__, which are "
"responsible for providing near-instant certainty to the transaction "
"participants that the transaction inputs cannot be re-spent, and that the "
"transaction will be included in a following block instead of a conflicting "
"transaction."
msgstr ""

#: ../../docs/user/developers/integration.rst:151
msgid ""
"This concept works as an extension to Nakamoto Consensus to provide "
"additional security. InstantSend enables transacted funds to be immediately "
"and securely re-spent by the recipient, even before the transaction is "
"included in a block."
msgstr ""

#: ../../docs/user/developers/integration.rst:157
msgid "Receiving InstantSend Transactions"
msgstr ""

#: ../../docs/user/developers/integration.rst:161
msgid ""
"An \"InstantSend Transaction\" is simply a standard transaction that has "
"been provided additional assurances by the masternode network. As a result, "
"and from an integration perspective, the only technical difference is the "
"InstantSend status."
msgstr ""

#: ../../docs/user/developers/integration.rst:166
msgid "Receiving an InstantSend Transaction introduces two requirements:"
msgstr ""

#: ../../docs/user/developers/integration.rst:168
msgid ""
"The ability to determine the “InstantSend Status” of a given transaction."
msgstr ""

#: ../../docs/user/developers/integration.rst:171
msgid ""
"The ability to adjust “Confirmation Status” independently of block "
"confirmation."
msgstr ""

#: ../../docs/user/developers/integration.rst:174
msgid ""
"InstantSend Status is typically determined through direct connection with "
"the dash daemon, `ZMQ notification "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__, or "
"through the usage of an external wallet notification script."
msgstr ""

#: ../../docs/user/developers/integration.rst:179
msgid "Direct Connection"
msgstr ""

#: ../../docs/user/developers/integration.rst:181
msgid ""
"InstantSend Status can be identified through direct connection with the Dash"
" daemon using JSON-RPC protocol. The ``instantlock`` attribute of the JSON "
"response reflects the status of the transaction and is included in the "
"following commands:"
msgstr ""

#: ../../docs/user/developers/integration.rst:196
msgid "ZMQ Notification"
msgstr ""

#: ../../docs/user/developers/integration.rst:198
msgid ""
"Whenever a transaction enters the mempool and whenever a transaction is "
"locked in the mempool, ZMQ notifications can be broadcast by the node. A "
"list of possible ZMQ notifications can be found `here "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__."
msgstr ""

#: ../../docs/user/developers/integration.rst:203
msgid ""
"The following notifications are relevant for recognizing transactions and "
"their corresponding instantlocks:"
msgstr ""

#: ../../docs/user/developers/integration.rst:206
msgid "zmqpubhashtx"
msgstr ""

#: ../../docs/user/developers/integration.rst:207
msgid "zmqpubhashtxlock"
msgstr ""

#: ../../docs/user/developers/integration.rst:208
msgid "zmqpubrawtx"
msgstr ""

#: ../../docs/user/developers/integration.rst:209
msgid "zmqpubrawtxlock"
msgstr ""

#: ../../docs/user/developers/integration.rst:212
msgid "Wallet Notification"
msgstr ""

#: ../../docs/user/developers/integration.rst:214
msgid ""
"The Dash Core Daemon can be configured to execute an external script "
"whenever an InstantSend transaction relating to that wallet is observed. "
"This is configured by adding the following line to the dash.conf file::"
msgstr ""

#: ../../docs/user/developers/integration.rst:220
msgid ""
"This is typically used with a wallet that has been populated with `watch-"
"only <https://dashcore.readme.io/docs/core-additional-resources-"
"glossary#section-watch-only-address>`__ addresses."
msgstr ""

#: ../../docs/user/developers/integration.rst:227
msgid "Broadcasting InstantSend Transactions"
msgstr ""

#: ../../docs/user/developers/integration.rst:231
msgid ""
"Because all transactions on the Dash network are automatically InstantSend, "
"no procedural changes are required to broadcast transactions as InstantSend."
msgstr ""

#: ../../docs/user/developers/integration.rst:234
msgid ""
"Since Dash v0.14.0 established LLMQs on the Dash network, quorums will now "
"attempt to lock every valid transaction by default without any additional "
"fee or action by the sending wallet or user. A transaction is eligible for "
"InstantSend when each of its inputs is considered confirmed. This is the "
"case when at least one of the following circumstances is true:"
msgstr ""

#: ../../docs/user/developers/integration.rst:241
msgid ""
"the previous transaction referred to by the input is confirmed with 6 blocks"
msgstr ""

#: ../../docs/user/developers/integration.rst:243
msgid ""
"the previous transaction is confirmed through an older InstantSend lock"
msgstr ""

#: ../../docs/user/developers/integration.rst:245
msgid ""
"the block containing the previous transaction is `ChainLocked "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:247
msgid ""
"When checking the previous transaction for an InstantSend lock, it is "
"important to do this on mempool (non-mined) transactions. This allows "
"chained InstantSend locking."
msgstr ""

#: ../../docs/user/developers/integration.rst:252
msgid "Additional Resources"
msgstr ""

#: ../../docs/user/developers/integration.rst:254
msgid ""
"The following resources provide additional information about InstantSend and"
" are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""

#: ../../docs/user/developers/integration.rst:258
msgid ""
"`InstantSend Technical Information "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:259
msgid ""
"`InstantSend Developer Documentation <https://dashcore.readme.io/docs/core-"
"guide-dash-features-instantsend>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:260
msgid ""
"`DIP0010: LLMQ InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__"
msgstr ""

#: ../../docs/user/developers/integration.rst:261
msgid ""
"`Product Brief: Dash Core v0.14 Release <https://blog.dash.org/product-"
"brief-dash-core-release-v0-14-0-now-on-testnet-8f5f4ad45c96>`__"
msgstr ""
