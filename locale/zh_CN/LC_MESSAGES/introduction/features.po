# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Leon White <leon.white@dash.org>, 2018
# Alex.ys <silvershark.ys@gmail.com>, 2020
# jmp2esp <xsrf@icloud.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-10 09:35-0500\n"
"PO-Revision-Date: 2018-03-02 06:45+0000\n"
"Last-Translator: jmp2esp <xsrf@icloud.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/dash/teams/37570/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../introduction/features.rst:1
msgid ""
"Dash features several unique value propositions including masternodes, "
"CoinJoin, InstantSend and a decentralized governance system"
msgstr ""

#: ../../introduction/features.rst:1
msgid ""
"dash, cryptocurrency, features, masternodes, coinjoin, privatesend, "
"instantsend, sporks, x11, dgw, governance, sentinel, evolution"
msgstr ""

#: ../../introduction/features.rst:9
msgid "Features"
msgstr "特性"

#: ../../introduction/features.rst:14
msgid "Specifications"
msgstr "参数"

#: ../../introduction/features.rst:16
msgid "First block mined at 11PM EST, 18th January 2014"
msgstr "原始块产生于2014年1月18日，东部时间晚11点"

#: ../../introduction/features.rst:17
msgid "No premine"
msgstr "无预挖"

#: ../../introduction/features.rst:18
msgid "X11 hashing algorithm, CPU/GPU/ASIC mining available"
msgstr "X11算法，CPU/GPU/ASIC均可用"

#: ../../introduction/features.rst:19
msgid "2.6 minute block time, 2MB blocks, ~56 transactions per second"
msgstr "区块时间2.6 分钟, 区块大小2MB, ~56 笔交易每秒"

#: ../../introduction/features.rst:20
msgid "Block reward decreases by 7.14% per year"
msgstr "每年区块奖励减产率7.14%"

#: ../../introduction/features.rst:21
msgid "Dark Gravity Wave difficulty adjustment algorithm"
msgstr "暗黑重力波难度调节算法"

#: ../../introduction/features.rst:22
msgid "Between 17.74M and 18.92M total coin supply"
msgstr "总发行量在17.74M到18.92M之间"

#: ../../introduction/features.rst:23
msgid "Decentralized second-tier masternode network"
msgstr "分布式双层主节点网络"

#: ../../introduction/features.rst:24
msgid "Superior privacy using CoinJoin"
msgstr ""

#: ../../introduction/features.rst:25
msgid "Instant transactions using InstantSend"
msgstr "通过即时支付实现瞬时交易"

#: ../../introduction/features.rst:26
msgid ""
"Protection against blockchain reorganization events (commonly called 51% "
"attacks) using ChainLocks"
msgstr ""

#: ../../introduction/features.rst:28
msgid ""
"Decentralized Governance By Blockchain allows masternode owners to vote on "
"budget proposals and decisions that affect Dash"
msgstr "基于区块链的去中心化管理系统使得主节点持有者可以对预案进行投票，成为达世币发展的决策者。"

#: ../../introduction/features.rst:35
msgid "Masternodes"
msgstr "主节点"

#: ../../introduction/features.rst:37
msgid ""
"In addition to traditional Proof of Work (PoW) rewards for mining Dash, "
"users are also rewarded for running and maintaining special servers called "
"masternodes. Thanks to this innovative two tier network, Dash can offer "
"innovative features in a trustless and decentralized way. Masternodes are "
"used to power CoinJoin, InstantSend, and the governance and treasury system."
" Users are rewarded for running masternodes; 45% of the block reward is "
"allocated to pay the masternode network. You can view practical guides on "
"all topics relating to masternodes :ref:`here <masternodes>`."
msgstr ""

#: ../../introduction/features.rst:47
msgid "Masternodes enable the following services:"
msgstr "主节点实现以下服务："

#: ../../introduction/features.rst:49
msgid ""
"**InstantSend** allows for near-instant transactions. Dash InstantSend "
"transactions are fully confirmed within two seconds."
msgstr "**即时支付**\\ 实现几乎瞬间的交易。达世币的即时支付功能可以在两秒内完成所有交易确认。"

#: ../../introduction/features.rst:51
msgid ""
"**CoinJoin** gives financial privacy through a decentralized implementation "
"of CoinJoin."
msgstr ""

#: ../../introduction/features.rst:53
msgid ""
"**ChainLocks**, which protects the blockchain against 51% mining attacks by "
"signing blocks as they are mined."
msgstr ""

#: ../../introduction/features.rst:55
msgid ""
"**Governance and Treasury** allows stakeholders in Dash to determine the "
"direction of the project and devotes 10% of the block reward to development "
"of the project and ecosystem."
msgstr ""

#: ../../introduction/features.rst:58
msgid ""
"**Dash Evolution** will make using cryptocurrency as easy as using PayPal."
msgstr "**达世币进化版**\\ 将会使数字货币变得如PayPal一样简单易用。"

#: ../../introduction/features.rst:61
msgid ""
"Masternode owners must have possession of 1000 DASH, which they prove by "
"signing a message included in a special transaction written to the "
"blockchain. The Dash can be moved or spent at any time, but doing so will "
"cause the masternode to fall out of queue and stop earning rewards. "
"Masternode users are also given **voting rights** on proposals. Each "
"masternode has one vote and this vote can be used on budget proposals or "
"important decisions that affect Dash."
msgstr ""

#: ../../introduction/features.rst:69
msgid ""
"Masternodes cost money and effort to host so they are paid a percentage of "
"the block reward as an incentive. Because only one masternode is paid in "
"each block, the frequency of the payment can vary, as well as the value of "
"the Dash paid out. This `tool <https://stats.masternode.me/>`_ shows a live "
"calculation of masternode earnings. These rewards decrease by 7% each year, "
"together with the block reward. There is also the possibility for "
"masternodes to earn money from fees in the future."
msgstr ""

#: ../../introduction/features.rst:81 ../../introduction/features.rst:594
msgid "CoinJoin"
msgstr ""

#: ../../introduction/features.rst:83
msgid ""
"CoinJoin gives you consumer grade financial privacy by shuffling your Dash "
"with other users. All the Dash in your wallet consists of different inputs, "
"which you can think of as separate, discrete coins. It uses an innovative "
"process to join your inputs with the inputs of at least two other people in "
"a single transaction, so the value in Dash never leaves your wallet. You "
"retain control of your money at all times."
msgstr ""

#: ../../introduction/features.rst:91
msgid ""
"You can view a practical guide to use CoinJoin :ref:`here <dashcore-"
"coinjoin-instantsend>`."
msgstr ""

#: ../../introduction/features.rst:94
msgid "The CoinJoin process works like this:"
msgstr ""

#: ../../introduction/features.rst:96
msgid ""
"CoinJoin begins by breaking your transaction inputs down into standard "
"denominations. These denominations are 0.001, 0.01, 0.1, 1 and 10 Dash -- "
"much like the paper money you use every day."
msgstr ""

#: ../../introduction/features.rst:99
msgid ""
"Your wallet then sends requests to specially configured software nodes on "
"the network called masternodes. These masternodes are informed then that you"
" are interested in creating a certain denomination using CoinJoin. No "
"identifiable information is sent to the masternodes, so they never know who "
"you are."
msgstr ""

#: ../../introduction/features.rst:104
msgid ""
"When two other people send similar messages, indicating that they wish to "
"join coins of the same denomination, a session begins. The masternode "
"instructs all three users’ wallets to pay the now-transformed inputs to "
"themselves. Your wallet pays that denomination directly to itself but in a "
"different address (called a change address)."
msgstr ""

#: ../../introduction/features.rst:110
msgid ""
"Your wallet can repeat this process a number of times with each "
"denomination. Each time the process is completed it’s called a \"round.\" "
"The user may choose between 2-16 rounds of CoinJoin."
msgstr ""

#: ../../introduction/features.rst:113
msgid ""
"Your funds will pass through at least the number of rounds you specify. Dash"
" 0.16 includes an update known as `Random Round CoinJoin "
"<https://github.com/dashpay/dash/pull/3661>`__ which will join a given "
"denomination by up to three extra rounds to further improve privacy."
msgstr ""

#: ../../introduction/features.rst:118
msgid ""
"This process happens in the background without any intervention on your "
"part. When you wish to make a transaction using your denominated funds no "
"additional waiting will be required."
msgstr ""

#: ../../introduction/features.rst:122
msgid ""
"Note that CoinJoin transactions will be rounded up so that all transaction "
"inputs are spent. Any excess Dash will be spent on the transaction fee."
msgstr ""

#: ../../introduction/features.rst:126
msgid ""
"**IMPORTANT:** Your wallet only contains 1000 of these change addresses. "
"Every time a CoinJoin transaction is created, one of your addresses is used "
"up. Once enough of them are used, your wallet must create more addresses. It"
" can only do this, however, if you have automatic backups enabled. "
"Consequently, users who have backups disabled will also have CoinJoin "
"disabled."
msgstr ""

#: ../../introduction/features.rst:137
msgid "InstantSend"
msgstr "即时支付"

#: ../../introduction/features.rst:139
msgid ""
"Traditional decentralized cryptocurrencies must wait for certain period of "
"time for enough blocks to pass to ensure that a transaction is both "
"irreversible and not an attempt to double-spend money which has already been"
" spent elsewhere. This process is time-consuming, and may take anywhere from"
" 15 minutes to one hour for the widely accepted number of six blocks to "
"accumulate. Other cryptocurrencies achieve faster transaction confirmation "
"time by centralizing authority on the network to various degrees."
msgstr ""
"传统的去中心化加密数字货币都要等上一段时间，通过足够多的区块广播来保证交易是不可撤消的，并且验证这些币没有在别的地方已经被花掉而产生双重花费的可能。这个过程很费时，通常被广泛接受的六步确认会花上15分钟到1个小时不等的时间。其它的加密数字货币都是通过网络上不同程度的中心化处理来实现交易确认时间加速。"

#: ../../introduction/features.rst:148
msgid ""
"Dash suffers from neither of these limitations thanks to its second-layer "
"network of masternodes. Masternodes regularly form voting quorums to check "
"whether or not a submitted transaction is valid. If it is valid, the "
"masternodes \"lock\" the inputs for the transaction and broadcast this "
"information to the network, effectively promising that the transaction will "
"be included in subsequently mined blocks and not allowing any other spending"
" of these inputs during the confirmation time period."
msgstr ""

#: ../../introduction/features.rst:157
msgid ""
"InstantSend technology will allow for cryptocurrencies such as Dash to "
"compete with nearly instantaneous transaction systems such as credit cards "
"for point-of-sale situations while not relying on a centralized authority. "
"Widespread vendor acceptance of Dash and InstantSend could revolutionize "
"cryptocurrency by shortening the delay in confirmation of transactions from "
"as long as an hour (with Bitcoin) to as little as a few seconds."
msgstr ""
"即时支付技术使得像达世币这样的数字货币，在销售点的支付环境下，完全可以媲美那些接近瞬时支付的信用卡，而且不依赖任何中央集权机构。通过将交易确认时间长达几个小时（比特币）缩短到仅仅几秒，达世币被商户广泛接受的现状和即时支付技术将给加密数字货币带来一场革命。"

#: ../../introduction/features.rst:165
msgid ""
"You can view a practical guide to use InstantSend :ref:`here <dashcore-"
"coinjoin-instantsend>`. InstantSend was introduced in a whitepaper called "
"`Transaction Locking and Masternode Consensus: A Mechanism for Mitigating "
"Double Spending Attacks "
"<https://github.com/dashpay/docs/blob/master/binary/Dash%20Whitepaper%20-%20Transaction%20Locking%20and%20Masternode%20Consensus.pdf>`_,"
" and further improved through the introduction of `LLMQ-based InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__ in Dash 0.14."
msgstr ""

#: ../../introduction/features.rst:174
msgid ""
"**How Dash 'InstantSend' Protects Merchants from Double Spends**, Dash "
"Detailed by Amanda B. Johnson, 16 September 2016"
msgstr "**达世币如何通过即时支付防止双花**，Amanda B. Johnson向你诠释，2016年9月16"

#: ../../introduction/features.rst:187
msgid "ChainLocks"
msgstr ""

#: ../../introduction/features.rst:189
msgid ""
"ChainLocks are a feature provided by the Dash Network which provides "
"certainty when accepting payments. This technology, particularly when used "
"in parallel with :ref:`InstantSend <instantsend>`, creates an environment in"
" which payments can be accepted immediately and without the risk of "
"“Blockchain Reorganization Events”."
msgstr ""

#: ../../introduction/features.rst:195
msgid ""
"The risk of blockchain reorganization is typically addressed by requiring "
"multiple “confirmations” before a transaction can be safely accepted as "
"payment. This type of indirect security is effective, but at a cost of time "
"and user experience. ChainLocks are a solution for this problem."
msgstr ""

#: ../../introduction/features.rst:202
msgid "ChainLocks Process Overview"
msgstr ""

#: ../../introduction/features.rst:204
msgid ""
"Every twelve hours a new “LLMQ” (Long-Living Masternode Quorum) is formed "
"using a “DKG” (Distributed Key Generation) process. All members of this "
"Quorum are responsible for observing, and subsequently affirming, newly "
"mined blocks:"
msgstr ""

#: ../../introduction/features.rst:209
msgid ""
"Whenever a block is mined, Quorum Members will broadcast a signed message "
"containing the observed block to the rest of the Quorum."
msgstr ""

#: ../../introduction/features.rst:212
msgid ""
"If 60% or more of the Quorum sees the same new block they will collectively "
"form a “CLSIG” (ChainLock Signature) message which will be broadcast to the "
"remainder of the network."
msgstr ""

#: ../../introduction/features.rst:216
msgid ""
"When a valid ChainLock Signature is received by a client on the network, it "
"will reject all blocks at the same height that do not match the block "
"specified in that message."
msgstr ""

#: ../../introduction/features.rst:220
msgid ""
"The result is a quick and unambiguous decision on the “correct” blockchain "
"for integrated clients and wallets. From a security perspective, this also "
"makes reorganizations prior to this block impossible. See `DIP0008 "
"ChainLocks <https://github.com/dashpay/dips/blob/master/dip-0008.md>`__ for "
"a full description of how ChainLocks work."
msgstr ""

#: ../../introduction/features.rst:230
msgid "Sporks"
msgstr "叉勺技术"

#: ../../introduction/features.rst:232
msgid ""
"In response to unforeseen issues with the rollout of the major \"RC3\" "
"update in June 2014, the Dash development team created a mechanism by which "
"updated code is released to the network, but not immediately made active "
"(\"enforced\"). This innovation allows for far smoother transitions than in "
"the traditional hard fork paradigm, as well as the collection of test data "
"in the live network environment. This process of multi-phased forking was "
"originally to be called \"soft forking\" but the community affectionately "
"dubbed it \"the spork\" and the name stuck."
msgstr ""
"为了应对2014年6月更新\"RC3\"时出现意料之外的问题，达世开发团队发明了一种机制，在这种机制下，更新代码会被发布到网络上，但不马上激活（\"实施\"）。这种创新相比于传统的硬分叉模型，能够更平稳的过渡，并且可以收集实时网络环境中的测试信息。这种多阶段分叉过程开始时被称为软分叉，但是社区中亲切地授予它“叉勺”的称呼。"

#: ../../introduction/features.rst:241
msgid ""
"New features or versions of Dash undergo extensive testing on testnet before"
" they are released to the main network. When a new feature or version of "
"Dash is released on mainnet, communication is sent out to users informing "
"them of the change and the need for them to update their clients. Those who "
"update their clients run the new code, but it is not activated until a "
"sufficient percentage of network participants (usually 80%) reach consensus "
"on running it. In the event of errors occurring with the new code, the "
"client’s blocks are not rejected by the network and unintended forks are "
"avoided. Data about the error can then be collected and forwarded to the "
"development team. Once the development team is satisfied with the new code’s"
" stability in the mainnet environment – and once acceptable network "
"consensus is attained – enforcement of the updated code can be activated "
"remotely by multiple members of the core development team signing a network "
"message together with their respective private keys. Should problems arise, "
"the code can be deactivated in the same manner, without the need for a "
"network-wide rollback or client update. For technical details on individual "
"sporks, see :ref:`here <understanding-sporks>`."
msgstr ""
"达世币的新功能或新版本在发布到主网前，都会在测试网上经受大量的测试。当达世币的新功能或新版本在主网发布时，信息会发给用户，将相应的变化和向客户更新的要求通知到他们。那些已经更新了客户端的用户会运行新的代码，但不会激活，直到有足够比例的网络参与者（一般是80%）达成运行共识。如果新的代码有错误，客户端区块不会被网络拒绝，所以意外的分叉可以被避免。有关错误的数据也会被收集起来发送给开发团队。一旦开发团队对新代码在主网环境下的稳定性表示满意，并且达成同意接受的网络共识，通过核心开发团队多数成员使用各自的私人密钥进行数字签名，更新代码的实施便可被远程激活。如果有问题发生，可以用同样的方式让代码失效，而不需要整个网络的回滚或客户端更新。关于单个叉勺的技术细节，详见\\"
" :ref:`这里  <understanding-sporks>`\\ 。"

#: ../../introduction/features.rst:264
msgid "X11 Hash Algorithm"
msgstr "X11算法"

#: ../../introduction/features.rst:266
msgid ""
"X11 is a widely used hashing algorithm created by Dash core developer Evan "
"Duffield. X11’s chained hashing algorithm utilizes a sequence of eleven "
"scientific hashing algorithms for the proof-of-work. This is so that the "
"processing distribution is fair and coins will be distributed in much the "
"same way Bitcoin’s were originally. X11 was intended to make ASICs much more"
" difficult to create, thus giving the currency plenty of time to develop "
"before mining centralization became a threat. This approach was largely "
"successful; as of early 2016, ASICs for X11 now exist and comprise a "
"significant portion of the network hashrate, but have not resulted in the "
"level of centralization present in Bitcoin. Information on mining with X11 "
"can be found in the :ref:`Mining <mining>` section of this documentation."
msgstr ""
"X11算法是由Dash Core创始人Evan "
"Duffield创建并被广泛应用的算法。X11的链式算法利用了11个科学散列算法序列用于工作量证明。这是为了让分配的过程更加公平，使币的分布能像比特币最开始设想的那样。X11的初衷是想使集成电路矿机做起来比较难，这样就可以在挖矿集权成为入驻前，给货币以足够的时间去发展。这个方法在很大程度上是成功的。从2016年初开始，针对于X11算法的ASIC矿机现在已经出现并占据了很大部分的网络算力，但是并没有造成像比特币那种程度的集权。关于针对X11算法挖矿的信息可以在\\"
" :ref:`挖矿 <mining>`\\ 专区中找到。"

#: ../../introduction/features.rst:279
msgid ""
"X11 is the name of the chained proof-of-work (**PoW**) algorithm that was "
"introduced in Dash (launched January 2014 as \"Xcoin\"). It was partially "
"inspired by the chained-hashing approach of Quark, adding further \"depth\" "
"and complexity by increasing the number of hashes, yet it differs from Quark"
" in that the rounds of hashes are determined *a priori* instead of having "
"some hashes being randomly picked."
msgstr ""
"X11是达世币（2014年1月按Xcoin命名发行）引入的工作量证明（ **POW** "
"）的一个算法名称。它一部分受Quark的启发，通过提高散列的数量增加了更多“深度“和复杂性，但是它与Quark的不同是，散列的轮次是确定先验的而不是随机挑选的。"

#: ../../introduction/features.rst:286
msgid ""
"The X11 algorithm uses multiple rounds of 11 different hashes (blake, bmw, "
"groestl, jh, keccak, skein, luffa, cubehash, shavite, simd, echo), thus "
"making it one of the safest and more sophisticated cryptographic hashes in "
"use by modern cryptocurrencies. The name X11 is not related to the open "
"source X11 windowing system common on UNIX-like operating systems."
msgstr ""
"X11算法采用的是11种不同的算法（blake、bmw、groestl、jh、keccak、skein、luffa、cubehash、shavite、simd、echo），这使其成为加密数字货币应用中最安全的更复杂的加密算法。X11的名字与类似近UNIX操作系统的X11开源WINDOWS系统没有任何关系。"

#: ../../introduction/features.rst:294
msgid "Advantages of X11"
msgstr "X11的优势"

#: ../../introduction/features.rst:296
msgid ""
"The increased complexity and sophistication of the chained algorithm "
"provides enhanced levels of security and less uncertainty for a digital "
"currency, compared to single-hash PoW solutions that are not protected "
"against security risks like SPOF (Single Point Of Failure). For example, a "
"possible but not probable computing breakthrough that \"breaks\" the SHA256 "
"hash could jeopardize the entire Bitcoin network until the network shifts "
"through a hard fork to another cryptographic hash."
msgstr ""
"相较于没有安全风险保护的单一算法的工作量证明解决方法，比如SPOF（单点故障），多重算法中提升的复杂性增强了数字货币的安全性，减少了不确定性。例如，如果有新的计算突破，可能但不一定会发生，攻破了SHA256算法，就有可能会危及到整个比特币网络，除非网络通过硬分叉转移到另外一个加密算法中去。"

#: ../../introduction/features.rst:304
msgid ""
"In the event of a similar computing breakthrough, a digital currency using "
"the X11 PoW would continue to function securely unless all 11 hashes were "
"broken simultaneously. Even if some of the 11 hashes were to prove "
"unreliable, there would be adequate warning for a currency using X11 to take"
" measures and replace the problematic hashes with other more reliable "
"hashing algorithms."
msgstr ""
"如果有相似的计算突破发生，使用X11算法验证PoW的数字货币还会继续安全地运行，除非11个算法同时被攻破。即使11个算法中有一些被证实不可靠，但也足够向使用X11算法的货币提出预警，以便采取措施，用其它更可靠的算法替换掉有问题的算法。"

#: ../../introduction/features.rst:311
msgid ""
"Given the speculative nature of digital currencies and their inherent "
"uncertainties as a new field, the X11 algorithm can provide increased "
"confidence for its users and potential investors that single-hash approaches"
" cannot. Chained hashing solutions, like X11, provide increased safety and "
"longevity for store of wealth purposes, investment diversification and "
"hedging against risks associated with single-hash currencies plagued by SPOF"
" (Single Point Of Failure)."
msgstr ""
"鉴于数字货币的投机属性以及作为新领域固有的不确定性，X11算法能给其用户和潜在投资者增加信心，这一点是单一算法所不能做到的。链式算法解决方案，如X11，提升了安全性，延长了以财富为目的的存储寿命，增加了投资多样性，对冲了由于SPOF（单点故障）带来的单一算法货币的风险。"

#: ../../introduction/features.rst:319
msgid ""
"Evan Duffield, the creator of Dash and X11 chained-hash, has written on "
"several occasions that X11 was integrated into Dash not with the intention "
"to prevent ASIC manufacturers from creating ASICs for X11 in the future, but"
" rather to provide a similar migratory path that Bitcoin had (CPUs, GPUs, "
"ASICs)."
msgstr ""
"Evan Duffield, "
"达世币和X11算法的创始人，在很多场合都已经写过，将X11整合在达世币中，目的不是要阻止ASIC制造商来将来制造出针对X11的矿机，更多是提供一个跟比特币相似的发展路径（CPUs,"
" GPUs, ASICs）。"

#: ../../introduction/features.rst:329
msgid "Dark Gravity Wave"
msgstr "暗黑重力波"

#: ../../introduction/features.rst:331
msgid ""
"**DGW** or *Dark Gravity Wave* is an open source difficulty-adjusting "
"algorithm for Bitcoin-based cryptocurrencies that was first used in Dash and"
" has since appeared in other digital currencies. DGW was authored by Evan "
"Duffield, the developer and creator of Dash, as a response to a time-warp "
"exploit found in *Kimoto's Gravity Well*. In concept, DGW is similar to the "
"Kimoto Gravity Well, adjusting the difficulty levels every block (instead of"
" every 2016 blocks like Bitcoin) based on statistical data from recently "
"found blocks. This makes it possible to issue blocks with relatively "
"consistent times, even if the hashing power experiences high fluctuations, "
"without suffering from the time-warp exploit."
msgstr ""
"**DGW**\\ "
"或暗黑重力波是一种开源的难度可调的，为以比特币为基础的加密数字货币提供的算法，最开始时在达世币中使用，自此之后也已经出现在其它数字货币中。DGW由达世币的开发者和创建者Evan"
" Duffield编写，以应对Kimoto’s Gravity Well算法中发现的时间隐藏剥削问题。理念上，DGW与Kimoto Gravity "
"Well相似，基于最近发现的区块中的统计数据，调节每个区块难度级别（而不是像比特币那样每2016个区块调节）。这样，即使算力正面临很大的波动，也可以分配给每个区块相对一致的时间，避免遭受时间隐蔽剥削。"

#: ../../introduction/features.rst:343
msgid ""
"Version 2.0 of DGW was implemented in Dash from block 45,000 onwards in "
"order to completely alleviate the time-warp exploit."
msgstr "达世币在45,000个区块后执行了DGW的2.0版本，为了全面减少时间隐蔽剥削的问题。"

#: ../../introduction/features.rst:346
msgid ""
"Version 3.0 was implemented on May 14 of 2014 to further improve difficulty "
"re-targeting with smoother transitions. It also fixes issues with various "
"architectures that had different levels of floating-point accuracy through "
"the use of integers."
msgstr ""
"3.0版本是在2014年5月14日执行的，通过平稳过渡，进一步提升了难度重新定位。这个版本还解决了很多架构中所出现的，由于整数算法引起的不同程度的浮点精确度问题。"

#: ../../introduction/features.rst:355
msgid "Emission Rate"
msgstr "发行率"

#: ../../introduction/features.rst:357
msgid ""
"Cryptocurrencies such as Dash and Bitcoin are created through a "
"cryptographically difficult process known as mining. Mining involves "
"repeatedly solving :ref:`hash algorithms <x11-hash-algorithm>` until a valid"
" solution for the current :ref:`mining difficulty <dark-gravity-wave>` is "
"discovered. Once discovered, the miner is permitted to create new units of "
"the currency. This is known as the block reward. To ensure that the currency"
" is not subject to endless inflation, the block reward is reduced at regular"
" intervals, as `shown in this calculation "
"<https://docs.google.com/spreadsheets/d/1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-"
"mCQ6wGCh4/edit#gid=523620673>`_. Graphing this data results in a curve "
"showing total coins in circulation, known as the coin emission rate."
msgstr ""
"加密数字货币如达世币和比特币，都是通过一种加密难度处理过程来产生的，称之为挖矿。挖矿需要不停地解决\\ :ref:`哈希算法 <x11-hash-"
"algorithm>`\\ 直到当前\\ :ref:`难题 <dark-gravity-wave>`\\ "
"的有效解决方法被找到。一旦找到，矿工就会被允许生产新的货币单元。这就是大家都了解的区块奖励。为了保证货币不会受到无止境的通胀影响，区块奖励会被减少到一个正常的区间。以下\\"
" `显示的是计算方式 "
"<https://docs.google.com/spreadsheets/d/1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-"
"mCQ6wGCh4/edit#gid=523620673>`_\\ 。将这些数据做成图表就会形成一个显示所有流通货币的曲线，称之为货币的发行速率。"

#: ../../introduction/features.rst:370
msgid ""
"While Dash is based on Bitcoin, it significantly modifies the coin emission "
"rate to offer a smoother reduction in coin emission over time. While Bitcoin"
" reduces the coin emission rate by 50% every 4 years, Dash reduces the "
"emission by one-fourteenth (approx. 7.14%) every 210240 blocks (approx. "
"383.25 days). It can be seen that reducing the block reward by a smaller "
"amount each year offers a smoother transition to a fee-based economy than "
"Bitcoin."
msgstr ""
"虽然达世币的创立是基于比特币，但是它很大程度地修改了货币的发行率，随着时间的推移，更加平缓地降低货币发行速率。比特币每4年将发行速率降低50%，而达世币是每210240区块（大约383.25天）降低1/14（约7.14%）。这样可以看出达世币每年减少的区块奖励幅度较小，从而为将来转向收取手续费的经济模型，提供了比比特币更为平缓的过渡。"

#: ../../introduction/features.rst:381
msgid "Bitcoin vs. Dash coin emission rate"
msgstr "比特币 vs. 达世币的发型速率"

#: ../../introduction/features.rst:385
msgid "Total coin emission"
msgstr "总发行量"

#: ../../introduction/features.rst:387
msgid ""
"`Bitcoin's total coin emission <https://docs.google.com/spreadsheets/d/1 "
"2tR_9WrY0Hj4AQLoJYj9EDBzfA38XIVLQSOOOVePNm0/pubhtml?gid=0&single=true>`_ can"
" be calculated as the sum of a geometric series, with the total emission "
"approaching (but never reaching) 21,000,000 BTC. This will continue until "
"2140, but the mining reward reduces so quickly that 99% of all bitcoin will "
"be in circulation by 2036, and 99.9% by 2048."
msgstr ""
"`比特币的总发行量 "
"<https://docs.google.com/spreadsheets/d/12tR_9WrY0Hj4AQLoJYj9EDBzfA38XIVLQSOOOVePNm0/pubhtml?gid=0&single=true>`_\\"
" "
"是按几何级数计算出来的和，无限接近总发行量（但不达到）21,000,000个比特币。这个发行过程会持续到2140年，即时如此快速地降低挖矿奖励，但到2036年时就会有99%的比特币被挖出，而到2048年时达到总量的99.9%。"

#: ../../introduction/features.rst:394
msgid ""
"`Dash's total coin emission <https://docs.google.com/spreadsheets/d "
"/1JUK4Iy8pjTzQ3Fvc-iV15n2qn19fmiJhnKDDSxebbAA/edit#gid=205877544>`_ is also "
"the sum of a geometric series, but the ultimate total coin emission is "
"uncertain because it cannot be known how much of the 10% block reward "
"reserved for budget proposals will actually be allocated, since this depends"
" on future voting behavior. Dash will continue to emit coins for "
"approximately 192 years before a full year of mining creates less than 1 "
"DASH. After 2209 only 14 more DASH will be created. The last DASH will take "
"231 years to be generated, starting in 2246 and ending when emission "
"completely stops in 2477. Based on these numbers, a maximum and minimum "
"possible coin supply in the year 2254 can be calculated to be between:"
msgstr ""
"`达世币的总发行量 <https://docs.google.com/spreadsheets/d /1JUK4Iy8pjTzQ3Fvc-"
"iV15n2qn19fmiJhnKDDSxebbAA/edit#gid=205877544>`_\\ "
"也是按几何级数计算出来的和，但是最终的数量是不确定的，因为留给预算提案的10%的区块奖励不知道会有多少能被实际花掉，而这部分取决于将来的投票行为。达世币会持续发行约192年，直到每年产出的货币少于1个DASH。2209年后只剩下14个DASH会被产出。最后一个DASH的产出将会耗时231年，从2246年开始，到2477年发行全部结束。基于这些数字，2254年最大和最小的可能发行量在这之间："

#: ../../introduction/features.rst:408
msgid "17,742,696 DASH"
msgstr "17,742,696 DASH"

#: ../../introduction/features.rst:408
msgid "Assuming zero treasury allocation"
msgstr "假设未分配任何预算资金"

#: ../../introduction/features.rst:410
msgid "18,921,005 DASH"
msgstr "18,921,005 DASH"

#: ../../introduction/features.rst:410
msgid "Assuming full treasury allocation"
msgstr "假设全部预算资金都被分配"

#: ../../introduction/features.rst:414
msgid "Block reward allocation"
msgstr "区块奖励分配"

#: ../../introduction/features.rst:416
msgid ""
"Unlike Bitcoin, which allocates 100% of the block reward to miners, Dash "
"holds back 10% of the block reward for use in the decentralized :ref:`budget"
" system <decentralized-governance>`. The remainder of the block, as well as "
"any transaction fees, are split 50/50 between the :ref:`miner <mining>` and "
"a :ref:`masternode <masternodes>`, which is deterministically selected "
"according to the :ref:`payment logic <payment-logic>`. Dash features "
"superblocks, which appear every 16616 blocks (approx. 30.29 days) and can "
"release up to 10% of the cumulative budget held back over that :ref:`budget "
"cycle period <budget-cycles>` to the winning proposals in the budget system."
" Depending on budget utilization, this results in an approximate coin reward"
" allocation over a budget cycle as follows:"
msgstr ""
"比特币是将区块奖励100%分配给矿工，与此不同，达世币保留了10%的区块奖励用于去中心化\\ :ref:`预算管理系统 <decentralized-"
"governance>`\\ 。区块奖励剩下的部分同交易费用，被50/50地分配给了\\ :ref:`矿工 <mining>`\\ 和\\ "
":ref:`主节点 <masternodes>`\\ ，这些都是根据\\ :ref:`支付逻辑 <payment-logic>`\\ "
"被确定选择的。达世币特有的超级块，每16616个区块（差不多30.29天）就出现一个超级块，可以将高达10%的在\\ :ref:`预算周期 "
"<budget-cycles>`\\ 内累积预算分发给预算系统中通过的提案。根据预算的使用情况，一个预算周期内的区块奖励分配如下："

#: ../../introduction/features.rst:430 ../../introduction/features.rst:432
msgid "45%"
msgstr "45%"

#: ../../introduction/features.rst:430
msgid "Mining Reward"
msgstr "挖矿奖励"

#: ../../introduction/features.rst:432
msgid "Masternode Reward for Proof-of-service"
msgstr "提供服务量证明的主节点奖励"

#: ../../introduction/features.rst:434
msgid "10%"
msgstr "10%"

#: ../../introduction/features.rst:434
msgid "Decentralized Governance Budget"
msgstr "去中心化预算管理"

#: ../../introduction/features.rst:437
msgid ""
"On 13 August 2020, the Dash network approved a `proposal "
"<https://www.dashcentral.org/p/decision-proposal-block-reward-reallocat>`__ "
"to modify the block reward allocation from 50/50 between miners and "
"masternodes to 40/60, respectively. The incremental reallocation adjusts the"
" percentage share every three superblock cycles."
msgstr ""

#: ../../introduction/features.rst:443
msgid ""
"The following table shows the incremental reallocation process and indicates"
" the current reallocation date. Reward reallocation changes began at the "
"first superblock following activation and now occur every three superblock "
"cycles (approximately once per quarter) until the reallocation is complete."
msgstr ""

#: ../../introduction/features.rst:449
msgid "Adjustment"
msgstr ""

#: ../../introduction/features.rst:449
msgid "Miner %"
msgstr ""

#: ../../introduction/features.rst:449
msgid "Masternode %"
msgstr ""

#: ../../introduction/features.rst:449
msgid "Change (%)"
msgstr ""

#: ../../introduction/features.rst:449
msgid "Reallocation Dates"
msgstr ""

#: ../../introduction/features.rst:451
msgid "0"
msgstr "0"

#: ../../introduction/features.rst:451 ../../introduction/features.rst:451
msgid "50.0"
msgstr ""

#: ../../introduction/features.rst:451
msgid "0.00%"
msgstr ""

#: ../../introduction/features.rst:451
msgid "---"
msgstr ""

#: ../../introduction/features.rst:453
msgid "1"
msgstr "1"

#: ../../introduction/features.rst:453
msgid "48.7"
msgstr ""

#: ../../introduction/features.rst:453
msgid "51.3"
msgstr ""

#: ../../introduction/features.rst:453 ../../introduction/features.rst:455
msgid "1.30%"
msgstr ""

#: ../../introduction/features.rst:453
msgid "2020-11-28"
msgstr ""

#: ../../introduction/features.rst:455
msgid "2"
msgstr "2"

#: ../../introduction/features.rst:455
msgid "47.4"
msgstr ""

#: ../../introduction/features.rst:455
msgid "52.6"
msgstr ""

#: ../../introduction/features.rst:455
msgid "2021-02-27"
msgstr ""

#: ../../introduction/features.rst:457
msgid "3"
msgstr "3"

#: ../../introduction/features.rst:457
msgid "46.7"
msgstr ""

#: ../../introduction/features.rst:457
msgid "53.3"
msgstr ""

#: ../../introduction/features.rst:457 ../../introduction/features.rst:459
msgid "0.70%"
msgstr ""

#: ../../introduction/features.rst:457
msgid "2021-05-29"
msgstr ""

#: ../../introduction/features.rst:459
msgid "4 (Current)"
msgstr ""

#: ../../introduction/features.rst:459
msgid "46.0"
msgstr ""

#: ../../introduction/features.rst:459
msgid "54.0"
msgstr ""

#: ../../introduction/features.rst:459
msgid "2021-08-28"
msgstr ""

#: ../../introduction/features.rst:461
msgid "5"
msgstr "5"

#: ../../introduction/features.rst:461
msgid "45.4"
msgstr ""

#: ../../introduction/features.rst:461
msgid "54.6"
msgstr ""

#: ../../introduction/features.rst:461 ../../introduction/features.rst:463
msgid "0.60%"
msgstr ""

#: ../../introduction/features.rst:461
msgid "2021-11-27"
msgstr ""

#: ../../introduction/features.rst:463
msgid "6"
msgstr "6"

#: ../../introduction/features.rst:463
msgid "44.8"
msgstr ""

#: ../../introduction/features.rst:463
msgid "55.2"
msgstr ""

#: ../../introduction/features.rst:463
msgid "2022-02-25"
msgstr ""

#: ../../introduction/features.rst:465
msgid "7"
msgstr ""

#: ../../introduction/features.rst:465
msgid "44.3"
msgstr ""

#: ../../introduction/features.rst:465
msgid "55.7"
msgstr ""

#: ../../introduction/features.rst:465 ../../introduction/features.rst:467
#: ../../introduction/features.rst:469 ../../introduction/features.rst:471
#: ../../introduction/features.rst:473 ../../introduction/features.rst:475
msgid "0.50%"
msgstr ""

#: ../../introduction/features.rst:465
msgid "2022-05-27"
msgstr ""

#: ../../introduction/features.rst:467
msgid "8"
msgstr "8"

#: ../../introduction/features.rst:467
msgid "43.8"
msgstr ""

#: ../../introduction/features.rst:467
msgid "56.2"
msgstr ""

#: ../../introduction/features.rst:467
msgid "2022-08-26"
msgstr ""

#: ../../introduction/features.rst:469
msgid "9"
msgstr ""

#: ../../introduction/features.rst:469
msgid "43.3"
msgstr ""

#: ../../introduction/features.rst:469
msgid "56.7"
msgstr ""

#: ../../introduction/features.rst:469
msgid "2022-11-25"
msgstr ""

#: ../../introduction/features.rst:471
msgid "10"
msgstr "10"

#: ../../introduction/features.rst:471
msgid "42.8"
msgstr ""

#: ../../introduction/features.rst:471
msgid "57.2"
msgstr ""

#: ../../introduction/features.rst:471
msgid "2023-02-24"
msgstr ""

#: ../../introduction/features.rst:473
msgid "11"
msgstr ""

#: ../../introduction/features.rst:473
msgid "42.3"
msgstr ""

#: ../../introduction/features.rst:473
msgid "57.7"
msgstr ""

#: ../../introduction/features.rst:473
msgid "2023-05-26"
msgstr ""

#: ../../introduction/features.rst:475
msgid "12"
msgstr "12"

#: ../../introduction/features.rst:475
msgid "41.8"
msgstr ""

#: ../../introduction/features.rst:475
msgid "58.2"
msgstr ""

#: ../../introduction/features.rst:475
msgid "2023-08-25"
msgstr ""

#: ../../introduction/features.rst:477
msgid "13"
msgstr ""

#: ../../introduction/features.rst:477
msgid "41.5"
msgstr ""

#: ../../introduction/features.rst:477
msgid "58.5"
msgstr ""

#: ../../introduction/features.rst:477 ../../introduction/features.rst:479
#: ../../introduction/features.rst:481 ../../introduction/features.rst:483
#: ../../introduction/features.rst:485
msgid "0.30%"
msgstr ""

#: ../../introduction/features.rst:477
msgid "2023-11-24"
msgstr ""

#: ../../introduction/features.rst:479
msgid "14"
msgstr ""

#: ../../introduction/features.rst:479
msgid "41.2"
msgstr ""

#: ../../introduction/features.rst:479
msgid "58.8"
msgstr ""

#: ../../introduction/features.rst:479
msgid "2024-02-23"
msgstr ""

#: ../../introduction/features.rst:481
msgid "15"
msgstr ""

#: ../../introduction/features.rst:481
msgid "40.9"
msgstr ""

#: ../../introduction/features.rst:481
msgid "59.1"
msgstr ""

#: ../../introduction/features.rst:481
msgid "2024-05-24"
msgstr ""

#: ../../introduction/features.rst:483
msgid "16"
msgstr ""

#: ../../introduction/features.rst:483
msgid "40.6"
msgstr ""

#: ../../introduction/features.rst:483
msgid "59.4"
msgstr ""

#: ../../introduction/features.rst:483
msgid "2024-08-22"
msgstr ""

#: ../../introduction/features.rst:485
msgid "17"
msgstr ""

#: ../../introduction/features.rst:485
msgid "40.3"
msgstr ""

#: ../../introduction/features.rst:485
msgid "59.7"
msgstr ""

#: ../../introduction/features.rst:485
msgid "2024-11-21"
msgstr ""

#: ../../introduction/features.rst:487
msgid "18"
msgstr "18"

#: ../../introduction/features.rst:487
msgid "40.1"
msgstr ""

#: ../../introduction/features.rst:487
msgid "59.9"
msgstr ""

#: ../../introduction/features.rst:487
msgid "0.20%"
msgstr ""

#: ../../introduction/features.rst:487
msgid "2025-02-20"
msgstr ""

#: ../../introduction/features.rst:489
msgid "19"
msgstr ""

#: ../../introduction/features.rst:489
msgid "40.0"
msgstr ""

#: ../../introduction/features.rst:489
msgid "60.0"
msgstr ""

#: ../../introduction/features.rst:489
msgid "0.10%"
msgstr ""

#: ../../introduction/features.rst:489
msgid "2025-05-22"
msgstr ""

#: ../../introduction/features.rst:492
msgid ""
"This documentation is based on calculations and posts by moocowmoo. Please "
"see `this reddit post <https://www.reddit.com/r/dashpay/comments/ "
"7fc2on/dash_over_1000_in_a_few_weeks/dqb4pjn/>`_ for more details, or run "
"your own `emission calculations using this tool "
"<https://repl.it/@moocowmoo/dash-minmax-coin-generation>`_. See `this site "
"<https://stats.masternode.me>`_ for live data on current network statistics."
msgstr ""
"这个文档是基于moocowmoo的计算和帖子。详情请见\\ `这个Reddit的帖子 "
"<https://www.reddit.com/r/dashpay/comments/ "
"7fc2on/dash_over_1000_in_a_few_weeks/dqb4pjn/>`_\\ 或者利用\\ `此工具计算货币发行量 "
"<https://repl.it/@moocowmoo/dash-minmax-coin-generation>`_\\ "
"。现行网络统计的实时数据请看\\ `这个站点 <https://stats.masternode.me>`_\\ 。"

#: ../../introduction/features.rst:503
msgid "Decentralized Governance"
msgstr "分布式管理"

#: ../../introduction/features.rst:505
msgid ""
"Decentralized Governance by Blockchain, or DGBB, is Dash's attempt to solve "
"two important problems in cryptocurrency: governance and funding. Governance"
" in a decentralized project is difficult, because by definition there are no"
" central authorities to make decisions for the project. In Dash, such "
"decisions are made by the network, that is, by the owners of masternodes. "
"The DGBB system allows each masternode to vote once (yes/no/abstain) for "
"each proposal. If a proposal passes, it can then be implemented (or not) by "
"Dash's developers. A key example is early in 2016, when Dash's Core Team "
"submitted a proposal to the network asking whether the blocksize should be "
"increased to 2 MB. Within 24 hours, consensus had been reached to approve "
"this change. Compare this to Bitcoin, where debate on the blocksize has been"
" raging for nearly three years."
msgstr ""
"基于区块链的去中心化管理，或称DGBB，是达世币的一个创新尝试，即解决加密数字货币中的两个重要问题：管理和资金。在去中心化的项目中，实现管理很困难，因为从定义上讲没有中央集权去为项目做决定。在达世币中，这种决定通过网络来实现，即由主节点持有者来决定。DGBB系统允许每一个主节点对每一个提案投一次票（同意/不同意/弃权）。如果提案通过，它可以被达世币的开发者执行（或者不执行）。一个重要的例子就是2016年初，当达世币核心团队向网络递交一个提案，询问区块的大小是否应该提高到2MB时，在24小时内批准此变更的共识便已经达成。与之相比，比特币关于区块大小的争论已经激烈进行了将近三年。"

#: ../../introduction/features.rst:519
msgid ""
"DGBB also provides a means for Dash to fund its own development. While other"
" projects have to depend on donations or premined endowments, Dash uses 10% "
"of the block reward to fund its own development. Every time a block is "
"mined, 45% of the reward goes to the miner, 45% goes to a masternode, and "
"the remaining 10% is not created until the end of the month. During the "
"month, anybody can make a budget proposal to the network. If that proposal "
"receives net approval of at least 10% of the masternode network, then at the"
" end of the month a series of \"superblocks\" will be created. At that time,"
" the block rewards that were not paid out (10% of each block) will be used "
"to fund approved proposals. The network thus funds itself by reserving 10% "
"of the block reward for budget projects."
msgstr ""
"为了达世币的发展，DGBB还提供了资金自足的途径。在其它项目还只能依赖于资助和捐款时，达世币已经可以利用10%的区块奖励来资助开发。当每一个区块被挖出来后，45%的区块奖励分配给矿工，45%分配给主节点，剩下的10%在月底前不会被分配。在这一个月中，任何人都可以向网络提出自己的预算提案。如果超过10%的主节点批准了这个预案，那么在月底时，一个“超级块”便被生成。那时，当初没有被花掉的区块奖励（每个区块的10%）就会被用于预案。网络通过预留10%区块奖励的方式为自己的预算项目融资。"

#: ../../introduction/features.rst:532
msgid ""
"You can read more about Dash governance in the :ref:`governance` section of "
"this documentation."
msgstr "你可以在\\ :ref:`governance`\\ 专区浏览更多关于达世币管理的文献资料。"

#: ../../introduction/features.rst:539
msgid "Sentinel"
msgstr "哨兵"

#: ../../introduction/features.rst:541
msgid ""
"Introduced in Dash 0.12.1, Sentinel is an autonomous agent for persisting, "
"processing and automating Dash governance objects and tasks. Sentinel is "
"implemented as a Python application that binds to a local version dashd "
"instance on each Dash masternode."
msgstr ""

#: ../../introduction/features.rst:546
msgid ""
"A Governance Object (or \"govObject\") is a generic structure introduced in "
"Dash 0.12.1 to allow for the creation of Budget Proposals and Triggers. "
"Class inheritance has been utilized to extend this generic object into a "
"\"Proposal\" object to supplant the current Dash budget system."
msgstr ""

#: ../../introduction/features.rst:555
msgid "Diagram highlighting the relationship between Dash Sentinel and Core"
msgstr "图解强调了达世币哨兵和核心之间的关系"

#: ../../introduction/features.rst:561
msgid "Fees"
msgstr "手续费"

#: ../../introduction/features.rst:563
msgid ""
"Transactions on the Dash network are recorded in blocks on the blockchain. "
"The size of each transaction is measured in bytes, but there is not "
"necessarily a correlation between high value transactions and the number of "
"bytes required to process the transaction. Instead, transaction size is "
"affected by how many input and output addresses are involved, since more "
"data must be written in the block to store this information. Each new block "
"is generated by a miner, who is paid for completing the work to generate the"
" block with a block reward. In order to prevent the network from being "
"filled with spam transactions, the size of each block is artificially "
"limited. As transaction volume increases, the space in each block becomes a "
"scarce commodity. Because miners are not obliged to include any transaction "
"in the blocks they produce, once blocks are full, a voluntary transaction "
"fee can be included as an incentive to the miner to process the transaction."
" Most wallets include a small fee by default, although some miners will "
"process transactions even if no fee is included."
msgstr ""
"Dash "
"网络上的交易被记录在区块链上。交易的大小以字节为单位，但高价值交易与其交易字节数大小无必要相关性。交易大小则是由有多少输入与输出决定，因为有更多的数据被保存在区块中。每个区块都"
" "
"是由一个矿工生成，他将因为生成区块做的工作被奖励。为了防止区块链被垃圾交易塞满，每个块的大小被人为限制。随着交易数量增长，每个区块的空间变得十分珍贵。因为矿工没有义务在他们产生的区块中包含任意交易，一旦区块被填满，一笔自愿的交易费用被用来激励矿工从而包含该交易，大多数钱包默认包含一笔小交易费，尽管一些矿工即使没有交易费照样处理交易。"

#: ../../introduction/features.rst:580
msgid ""
"The release of Dash 0.12.2.0 and activation of DIP0001 saw a simultaneous "
"reduction of fees by a factor of 10, while the block size was increased from"
" 1MB to 2MB to promote continued growth of low-cost transactions even as the"
" cost of Dash rises. Dash 0.13.0.0 introduced InstantSend autolocks, which "
"caused masternodes to automatically attempt to lock any transaction with 4 "
"or fewer inputs — which are referred to as “simple” transactions — and "
"removed the additional fee for InstantSend. 0.14.0.0 then removed the "
"limitation on 4 inputs, so the network will attempt to lock all "
"transactions. The current fee schedule for Dash is as follows:"
msgstr ""

#: ../../introduction/features.rst:592
msgid "Transaction type"
msgstr "交易类型"

#: ../../introduction/features.rst:592
msgid "Recommended fee"
msgstr "推荐手续费"

#: ../../introduction/features.rst:592
msgid "Per unit"
msgstr "每单位"

#: ../../introduction/features.rst:594
msgid "0.001 DASH"
msgstr ""

#: ../../introduction/features.rst:594
msgid "Per 10 rounds of CoinJoin (average)"
msgstr ""

#: ../../introduction/features.rst:596
msgid "All other transactions"
msgstr ""

#: ../../introduction/features.rst:596
msgid "0.00001 DASH"
msgstr ""

#: ../../introduction/features.rst:596
msgid "Per kB of transaction data"
msgstr "每 kB 交易数据"

#: ../../introduction/features.rst:599
msgid ""
"As an example, a standard and relatively simple transaction on the Dash "
"network with one input, one output and a possible change address typically "
"fits in the range of 200 - 400 bytes. Assuming a price of US$100 per DASH, "
"the fee falls in the range of $0.0002 - $0.0004, or 1/50th of a cent. "
"InstantSend locking will be attempted on all transactions without any extra "
"charge."
msgstr ""

#: ../../introduction/features.rst:606
msgid ""
":ref:`CoinJoin` works by creating denominations of 10, 1, 0.1, 0.01 and "
"0.001 DASH and then creating CoinJoin transactions with other users using "
"these denominations. Creation of the denominations is charged at the default"
" fee for a standard transaction. Using CoinJoin is free, but to prevent spam"
" attacks, an average of one in ten CoinJoin transactions are charged a fee "
"of 0.0001 DASH. Spending denominated inputs using CoinJoin incurs the usual "
"standard fees, but to avoid creating a potentially identifiable change "
"address, the fee is always rounded up to the lowest possible denomination. "
"This is typically 0.001 DASH, so it is important to deduct the fee from the "
"amount being sent if possible to minimise fees. Combining InstantSend and "
"CoinJoin may be expensive due to this requirement and the fact that a "
"CoinJoin transaction may require several inputs, while InstantSend charges a"
" fee of 0.0001 DASH per input. Always check your fees before sending a "
"transaction."
msgstr ""

#: ../../introduction/features.rst:625
msgid "Evolution"
msgstr "进化版"

#: ../../introduction/features.rst:627
msgid ""
"`Dash Evolution <https://www.dash.org/roadmap/>`_ is the code name for a "
"decentralized platform built on Dash blockchain technology. The goal is to "
"provide simple access to the unique features and benefits of Dash to assist "
"in the creation of decentralized technology. Dash introduces a tiered "
"network design, which allows users to do various jobs for the network, along"
" with decentralized API access and a decentralized file system."
msgstr ""

#: ../../introduction/features.rst:635
msgid ""
"Dash Evolution will be released in stages. Dash Core releases 0.12.1 through"
" to 0.12.3 lay the groundwork for the decentralized features behind the "
"scenes. Version 0.13 introduces the foundation of Evolution, specifically "
"`DIP2 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ and `DIP3 "
"Deterministic Masternode Lists "
"<https://github.com/dashpay/dips/blob/master/dip-0003.md>`__. Version 0.14 "
"establishes `DIP6 Long Living Masternode Quorums "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__. Expected in "
"late 2019, Dash Core 1.0 will introduce key Evolution features such as "
"username-based payments, the world's first decentralized API (DAPI) and a "
"decentralized data storage system (Drive) based on IPFS."
msgstr ""

#: ../../introduction/features.rst:646
msgid ""
"Included below is our current work on Evolution, that adds many components "
"such as:"
msgstr "以下便是我们目前在Evolution上所做的工作，增加了许多单元如："

#: ../../introduction/features.rst:649
msgid ""
"**Drive:** A decentralized shared file system for user data that lives on "
"the second tier network"
msgstr ""

#: ../../introduction/features.rst:651
msgid ""
"**DAPI:** A decentralized API which allows third tier users to access the "
"network securely"
msgstr "**DAPI：**\\ 分布式应用程序接口，允许第三层用户安全接入网络"

#: ../../introduction/features.rst:653
msgid ""
"**DashPay Decentralized Wallets:** These wallets are light clients connected"
" to the network via DAPI and run on various platforms"
msgstr "**分布式DashPay钱包：**\\ 用户可通过DAPI在不同操作平台接入这些轻钱包"

#: ../../introduction/features.rst:655
msgid ""
"**Second Tier:** The masternode network, which provides compensated "
"infrastructure for the project"
msgstr "**第二层网络：**\\ 主节点网络 - 可为项目提供有偿的基础设施建设"

#: ../../introduction/features.rst:657
msgid ""
"**Budgets:** The second tier is given voting power to allocate funds for "
"specific projects on the network via the budget system"
msgstr "**预算：**\\ 主节点网络被赋予了投票的权力，从而可以通过预算系统为网络上具体的项目提供资金"

#: ../../introduction/features.rst:659
msgid ""
"**Governance:** The second tier is given voting power to govern the currency"
" and chart the course the currency takes"
msgstr "**管理：**\\ 主节点网络被赋予了投票的权力从而管理达世币项目及发展方向"

#: ../../introduction/features.rst:661
msgid ""
"**Deterministic Masternode Lists:** This feature introduces an on-chain "
"masternode list, which can be used to calculate past and present quorums"
msgstr "**可识别主节点列表** 该功能引入一个链上主节点列表，它将被用来计算过去和现在的裁判团"

#: ../../introduction/features.rst:664
msgid ""
"**Social Wallet:** We introduce a social wallet, which allows friends lists,"
" grouping of users and shared multisig accounts"
msgstr "**社交钱包** 我们引入一个社交钱包，它将允许好友列表，用户分组和共享多签名账户"

#: ../../introduction/features.rst:668
msgid "Evolution Previews"
msgstr "进化版预览"

#: ../../introduction/features.rst:670
msgid ""
"**Dash Dapps - Demoing Community Development on environment**, 17 August "
"2020"
msgstr ""

#: ../../introduction/features.rst:679
msgid ""
"**Let's Talk Dash Dapps feat. Sample Dapps & Wallet API (Ep 2)**, 6 August "
"2020"
msgstr ""

#: ../../introduction/features.rst:688
msgid "**Let's Talk Dash Dapps feat. Chrome Wallet (Ep 1)**, 28 July 2020"
msgstr ""

#: ../../introduction/features.rst:696
msgid ""
"The following videos featuring Dash Founder Evan Duffield and Head of UI/UX "
"Development Chuck Williams describe the development process and upcoming "
"features of the Dash Evolution platform."
msgstr ""
"以下的视频是达世币创始人Evan Duffield和用户体验/用户界面设计开发部门负责人Chuck Williams对Dash "
"Evolution平台开发流程和即将呈现的功能所做的描述。"

#: ../../introduction/features.rst:700
msgid "**Evolution Demo #1 - The First Dash DAP**, 16 March 2018"
msgstr "**Evolution Demo #1 - The First Dash DAP** , 2018年3月16日"

#: ../../introduction/features.rst:708
msgid "**Evolution Demo #2 - Mobile Evolution**, 25 April 2018"
msgstr "**Evolution Demo #2 - Mobile Evolution**, 2018年4月25日"

#: ../../introduction/features.rst:716
msgid "**Evolution Demo #3 - Dashpay User Experience**, 15 May 2018"
msgstr "**Evolution Demo #3 - Dashpay User Experience**, 2018年5月15日"

#: ../../introduction/features.rst:724
msgid ""
"**Chuck Williams on Evolution**, Dash Conference London, 14 September 2017"
msgstr "**Chuck Williams on Evolution**, Dash Conference London, 2017年9月14日"

#: ../../introduction/features.rst:732
msgid ""
"**Evan Duffield on the Evolution Roadmap**, Dash Force News, 28 June 2017"
msgstr ""
"**Evan Duffield on the Evolution Roadmap**, Dash Force News, 2017年6月28日"
