# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tikhon Skudarnov <semargsemarg@gmail.com>, 2022
# Dima, 2022
# VONCAN, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-29 09:56-0500\n"
"PO-Revision-Date: 2022-12-27 18:55+0000\n"
"Last-Translator: VONCAN, 2024\n"
"Language-Team: Russian (https://app.transifex.com/dash/teams/37570/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../docs/user/developers/compiling.rst-1
msgid ""
"Compile Dash Core for Linux, macOS, Windows and Guix deterministic builds"
msgstr ""
"Компиляция Dash Core на Linux, macOS, Windows и на детерминированных сборках"
" Guix"

#: ../../docs/user/developers/compiling.rst-1
msgid "dash, build, compile, linux, macOS, windows, binary, guix, developers"
msgstr ""
"dash, сборка, компиляция, linux, macOS, windows, binary, guix, разработчики"

#: ../../docs/user/developers/compiling.rst:9
msgid "Compiling Dash Core"
msgstr "Компилирование клиента Dash Core"

#: ../../docs/user/developers/compiling.rst:11
msgid ""
"While Dash offers stable binary builds on the `website "
"<https://www.dash.org/downloads/>`_ and on `GitHub "
"<https://github.com/dashpay/dash/releases>`__, and development builds using "
"`GitLab CI <https://gitlab.com/dashpay/dash/pipelines>`_,  many users will "
"also be interested in building Dash binaries for themselves. Users who do "
"not required deterministic builds can typically follow the `generic build "
"notes <https://github.com/dashpay/dash/tree/develop/doc#building>`__ "
"available on GitHub to compile or cross-compile Dash for any platform."
msgstr ""
"Хотя Dash предлагает стабильные бинарные сборки на `сайте "
"<https://www.dash.org/downloads/>`_ и на `GitHub "
"<https://github.com/dashpay/dash/releases>`__, а также сборки для разработки"
" с помощью `GitLab CI <https://gitlab.com/dashpay/dash/pipelines>`_, многие "
"пользователи также будут заинтересованы в самостоятельной сборке бинарных "
"файлов Dash. Пользователи, которым не нужны детерминированные сборки, обычно"
" могут следовать `основным указаниям по сборке "
"<https://github.com/dashpay/dash/tree/develop/doc#building>`__, доступным на"
" GitHub, чтобы скомпилировать или кросс-компилировать Dash для любой "
"платформы."

#: ../../docs/user/developers/compiling.rst:24
msgid "Guix"
msgstr "Guix"

#: ../../docs/user/developers/compiling.rst:26
msgid ""
"`Guix <https://guix.gnu.org/>`__ is the deterministic build process that is "
"used to build the Dash Core executables. It provides a way to be reasonably "
"sure that the executables are really built from the source on GitHub. It "
"also makes sure that the same, tested dependencies are used and statically "
"built into the executable. Multiple developers build the source code by "
"following a specific descriptor (\"recipe\"), cryptographically sign the "
"result, and upload the resulting signature. These results are compared and "
"only if they match, the build is accepted and uploaded to dash.org."
msgstr ""
"`Guix <https://guix.gnu.org/>`__ - это процесс детерминированной компиляции,"
" который используется для получения исполнительных файлов Dash Core. Он "
"обеспечивает уверенность, что исполнительные файлы были получены из "
"источника на GitHub, а также что при компиляции в конечный исполнительный "
"файл были статично встроены стабильные проверенные зависимости. Многие "
"разработчики пишут исходный код с использованием особых дескрипторов "
"(\"рецептов\"), криптографически подписывают результат и выгружают "
"соответствующую подпись. Эти результаты сравниваются и только при полном "
"совпадении версия принимается и выкладывается на dash.org."

#: ../../docs/user/developers/compiling.rst:35
msgid ""
"The instructions to build Dash Core 19.0 or older versions using gitian are "
"available in a `previous version of this page "
"<https://docs.dash.org/en/19.0.0/docs/user/developers/compiling.html#gitian>`__."
msgstr ""
"Инструкции по сборке Dash Core 19.0 или более старых версий с помощью gitian"
" доступны в `предыдущей версии этой страницы "
"<https://docs.dash.org/en/19.0.0/docs/user/developers/compiling.html#gitian>`__."

#: ../../docs/user/developers/compiling.rst:40
msgid "Setup environment"
msgstr "Настройка окружения"

#: ../../docs/user/developers/compiling.rst:43
msgid ""
"This setup has been tested using a clean install of Ubuntu 22.04. For "
"maximum compatibility, please use that version."
msgstr ""
"Данная установка была протестирована на чистой версии Ubuntu 22.04. Для "
"обеспечения максимальной совместимости используйте эту версию."

#: ../../docs/user/developers/compiling.rst:46
msgid ""
"Start by logging in as the \"root\" user. Create a new user with the "
"following command, replacing ``<username>`` with a username of your choice::"
msgstr ""
"Начните с входа в систему под именем пользователя \"root\". Создайте нового "
"пользователя с помощью следующей команды, заменив ``<username>`` на "
"выбранное вами имя пользователя::"

#: ../../docs/user/developers/compiling.rst:51
msgid ""
"You will be prompted for a password. Enter and confirm using a new password "
"(different to your root password) and store it in a safe place. You will "
"also see prompts for user information, but this can be left blank. "
"Alternatively, an existing user can be used on systems that are already in "
"use (e.g. your existing development system)."
msgstr ""
"Вам будет предложено задать пароль. Введите и подтвердите новый пароль "
"(отличный от пароля root) и сохраните его в надежном месте. Также появится "
"запрос на ввод информации о пользователе, но его можно оставить пустым. В "
"качестве альтернативы можно использовать существующего пользователя в уже "
"используемых системах (например, в существующей системе разработки)."

#: ../../docs/user/developers/compiling.rst:57
msgid ""
"Add the user to the sudo and docker groups so they can perform commands as "
"root and run docker commands::"
msgstr ""
"Добавьте пользователя в группы sudo и docker, чтобы он мог выполнять команды"
" от имени root и запускать команды docker::"

#: ../../docs/user/developers/compiling.rst:63
msgid "Install prerequisites"
msgstr "Установить предварительные требования"

#: ../../docs/user/developers/compiling.rst:65
msgid ""
"While still logged in as root, update the system from the Ubuntu package "
"repository::"
msgstr ""
"Не выходя из системы с правами root, обновите систему из репозитория пакетов"
" Ubuntu::"

#: ../../docs/user/developers/compiling.rst:71
msgid "Install the required build tools::"
msgstr "Установите необходимые инструменты для сборки::"

#: ../../docs/user/developers/compiling.rst:76
msgid "Prepare guix"
msgstr "Подготовить guix"

#: ../../docs/user/developers/compiling.rst:78
msgid ""
"It is only necessary to run this step during the initial setup of your "
"machine. Run the guix install routine to prepare your environment and answer"
" \"Y\" for all prompts::"
msgstr ""
"Этот шаг необходимо выполнить только при начальной настройке машины. "
"Запустите программу установки guix для подготовки среды и ответьте \"Y\" на "
"все запросы::"

#: ../../docs/user/developers/compiling.rst:88
msgid "Clone repositories"
msgstr "Клонируйте репозитории"

#: ../../docs/user/developers/compiling.rst:90
msgid ""
"After installing the prerequisites and preparing guix, reboot the system, "
"login as ``<username>``, and clone required repositories::"
msgstr ""
"После установки необходимых условий и подготовки guix перезагрузите систему,"
" войдите под именем ``<username>`` и клонируйте необходимые репозитории::"

#: ../../docs/user/developers/compiling.rst:97
msgid "Download the macOS SDK which is required to create macOS builds::"
msgstr "Загрузите macOS SDK, который необходим для создания сборок macOS::"

#: ../../docs/user/developers/compiling.rst:104
msgid "Build Dash Core"
msgstr "Собрать Dash Core"

#: ../../docs/user/developers/compiling.rst:106
msgid ""
"Checkout the tag associated with the Dash Core version you plan to build::"
msgstr ""
"Проверьте тег, связанный с версией Dash Core, которую вы планируете "
"собрать::"

#: ../../docs/user/developers/compiling.rst:113
msgid "Run ``guix-build`` to create binaries for Linux, Mac, and Windows::"
msgstr ""
"Запустите ``guix-build``, чтобы создать двоичные файлы для Linux, Mac и "
"Windows::"

#: ../../docs/user/developers/compiling.rst:118
msgid ""
"When the build completes, it will put the binaries in the ``guix-"
"build-<version>/output/`` directory."
msgstr ""
"Когда сборка завершится, она поместит бинарные файлы в каталог ``guix-"
"build-<version>/output/``."

#: ../../docs/user/developers/compiling.rst:122
msgid "Create signatures for binaries"
msgstr "Создание подписей для бинарных файлов"

#: ../../docs/user/developers/compiling.rst:124
msgid ""
"Mac and Windows binaries are signed by Dash Core Group using the relevant "
"Apple and Microsoft processes. In this step, that information will be "
"validated and signed by your machine."
msgstr ""
"Бинарные файлы для Mac и Windows подписываются Dash Core Group с "
"использованием соответствующих процессов Apple и Microsoft. На этом этапе "
"эта информация будет проверена и подписана вашей машиной."

#: ../../docs/user/developers/compiling.rst:128
msgid ""
"Prepare the `detached sigs repository <https://github.com/dashpay/dash-"
"detached-sigs>`__::"
msgstr ""
"Подготовьте `хранилище отсоединенных сигов <https://github.com/dashpay/dash-"
"detached-sigs>`__::"

#: ../../docs/user/developers/compiling.rst:137
msgid ""
"Prepare the `guix.sigs repository <https://github.com/dashpay/guix.sigs>`__ "
"by pulling the latest changes::"
msgstr ""
"Подготовьте репозиторий `guix.sigs "
"<https://github.com/dashpay/guix.sigs>`__, извлекая последние изменения::"

#: ../../docs/user/developers/compiling.rst:144
msgid "Create a new branch for the version that was built::"
msgstr "Создайте новую ветку для версии, которая была собрана::"

#: ../../docs/user/developers/compiling.rst:152
msgid "Unsigned binaries"
msgstr "Неподписанные бинарники"

#: ../../docs/user/developers/compiling.rst:154
msgid "To create signatures for the unsigned binaries, run ``guix-attest``::"
msgstr ""
"Чтобы создать подписи для неподписанных бинарных файлов, запустите ``guix-"
"attest``::"

#: ../../docs/user/developers/compiling.rst:162
msgid ""
"The ``signer`` parameter should be set to the value provided for \"Real "
"name\" when generating a key with GPG. See the `GnuPrivacyGuard Howto "
"<https://help.ubuntu.com/community/GnuPrivacyGuardHowto#Generating_an_OpenPGP_Key>`_"
" for details on how to generate a key if you don't already have one."
msgstr ""
"При генерации ключа с помощью GPG параметр ``signer` должен иметь значение, "
"указанное для параметра \"Real name\". Подробнее о том, как сгенерировать "
"ключ, если у вас его еще нет, см. в статье `GnuPrivacyGuard Howto "
"<https://help.ubuntu.com/community/GnuPrivacyGuardHowto#Generating_an_OpenPGP_Key>`_."

#: ../../docs/user/developers/compiling.rst:168
msgid "Signed binaries"
msgstr "Подписанные бинарники"

#: ../../docs/user/developers/compiling.rst:170
msgid ""
"To create signatures for the signed binaries, run ``guix-codesign`` followed"
" by guix-attest::"
msgstr ""
"Чтобы создать подписи для подписанных двоичных файлов, запустите ``guix-"
"codesign``, а затем guix-attest::"

#: ../../docs/user/developers/compiling.rst:182
msgid "Upload signatures"
msgstr "Загрузка подписей"

#: ../../docs/user/developers/compiling.rst:184
msgid ""
"After successfully building the binaries, signing them, and verifying the "
"signatures, you can optionally contribute them to the `guix.sigs repository "
"<https://github.com/dashpay/guix.sigs/>`_ via a pull request on GitHub."
msgstr ""
"После успешной сборки бинарных файлов, их подписания и проверки подписей вы "
"можете внести их в репозиторий `guix.sigs "
"<https://github.com/dashpay/guix.sigs/>`_ с помощью pull request на GitHub."

#: ../../docs/user/developers/compiling.rst:189
msgid "Initial setup"
msgstr "Первоначальная настройка"

#: ../../docs/user/developers/compiling.rst:191
msgid ""
"Since the official guix.sigs repository has restricted write access, create "
"a fork of it via GitHub and add your fork as a remote repository::"
msgstr ""
"Поскольку официальный репозиторий guix.sigs имеет ограниченный доступ на "
"запись, создайте форк этого репозитория через GitHub и добавьте свой форк в "
"качестве удаленного репозитория::"

#: ../../docs/user/developers/compiling.rst:197
msgid ""
"The first time you contribute signatures, also put a copy of your public key"
" in the ``builder-keys`` folder of the repository so others can easily "
"verify your signature. Your public key can be exported to a file using the "
"following command::"
msgstr ""
"При первом внесении подписей также поместите копию своего открытого ключа в "
"папку ``builder-keys`` репозитория, чтобы другие пользователи могли легко "
"проверить вашу подпись. Открытый ключ можно экспортировать в файл с помощью "
"следующей команды::"

#: ../../docs/user/developers/compiling.rst:207
msgid "Adding your signatures"
msgstr "Добавление ваших подписей"

#: ../../docs/user/developers/compiling.rst:209
msgid ""
"Add and commit the ``*.SHA256SUMS`` and ``*.SHA256SUMS.asc`` files created "
"by the build process::"
msgstr ""
"Добавьте и зафиксируйте файлы ``*.SHA256SUMS`` и ``*.SHA256SUMS.asc``, "
"созданные в процессе сборки::"

#: ../../docs/user/developers/compiling.rst:220
msgid "Push to your fork of the guix.sigs repository on GitHub::"
msgstr "Поместите в свой форк репозитория guix.sigs на GitHub::"

#: ../../docs/user/developers/compiling.rst:225
msgid ""
"Go to `GitHub <https://github.com/dashpay/gitian.sigs/pulls>`__ and open a "
"pull request to the ``master`` branch of the upstream repository. The pull "
"request will be reviewed by Dash Core developers and merged if everything "
"checks out. Thanks for contributing!"
msgstr ""
"Перейдите на `GitHub <https://github.com/dashpay/gitian.sigs/pulls>`__ и "
"откройте pull request к ветке ``master`` репозитория upstream. Запрос будет "
"рассмотрен разработчиками Dash Core и интегрирован, если все будет "
"проверено. Спасибо за участие!"

#: ../../docs/user/developers/compiling.rst:231
msgid "Verify signatures"
msgstr "Проверка подписей"

#: ../../docs/user/developers/compiling.rst:233
msgid ""
"The `guix.sigs repository <https://github.com/dashpay/guix.sigs/>`_ contains"
" deterministic build results signed by multiple Core developers for each "
"release. The repository also contains public keys used for signature "
"verification. Import the public keys::"
msgstr ""
"Репозиторий `guix.sigs <https://github.com/dashpay/guix.sigs/>`_ содержит "
"детерминированные результаты сборки, подписанные несколькими разработчиками "
"Core для каждого выпуска. Репозиторий также содержит открытые ключи, "
"используемые для проверки подписи. Импортируйте публичные ключи::"

#: ../../docs/user/developers/compiling.rst:242
msgid ""
"Run the following commands to verify that your build matches the official "
"release::"
msgstr ""
"Выполните следующие команды, чтобы убедиться, что ваша сборка соответствует "
"официальному релизу::"

#: ../../docs/user/developers/compiling.rst:252
msgid ""
"You should get a result similar to the following for Linux, Windows, MacOS, "
"Signed Windows, and Signed MacOS. Assuming the previous steps completed "
"successfully, you will also see your own signatures with an ``OK`` status "
"also."
msgstr ""
"Вы должны получить результат, аналогичный приведенному ниже для Linux, "
"Windows, MacOS, Signed Windows и Signed MacOS. При условии успешного "
"выполнения предыдущих шагов вы также увидите свои собственные подписи со "
"статусом ``OK``."

#: ../../docs/user/developers/compiling.rst:341
msgid "Gitian"
msgstr "Gitian"

#: ../../docs/user/developers/compiling.rst:344
msgid ""
"Gitian builds were deprecated in favor of Guix builds with the release of "
"Dash Core v20.0. Instructions on building Dash Core 19.0 or older versions "
"using gitian are available in a `previous version of this page "
"<https://docs.dash.org/en/19.0.0/docs/user/developers/compiling.html#gitian>`__."
msgstr ""
"Сборки на Gitian были отменены в пользу сборок на Guix с выходом Dash Core "
"v20.0. Инструкции по сборке Dash Core 19.0 или более ранних версий с помощью"
" gitian доступны в `предыдущей версии этой страницы "
"<https://docs.dash.org/en/19.0.0/docs/user/developers/compiling.html#gitian>`__."
