# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Dima, 2022
# Tikhon Skudarnov <semargsemarg@gmail.com>, 2022
# Julia Ogonkova <livingflcl@gmail.com>, 2022
# Андрей Дегтяр <diusha1711@gmail.com>, 2022
# Max Aronych <taofgoar@protonmail.com>, 2022
# VONCAN, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-29 09:56-0500\n"
"PO-Revision-Date: 2022-12-27 18:55+0000\n"
"Last-Translator: VONCAN, 2024\n"
"Language-Team: Russian (https://app.transifex.com/dash/teams/37570/ru/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n%100>=11 && n%100<=14)? 2 : 3);\n"

#: ../../docs/user/developers/integration.rst-1
msgid "Technical guides for developers integrating Dash."
msgstr "Технические руководства для разработчиков, интегрирующих Dash."

#: ../../docs/user/developers/integration.rst-1
msgid ""
"dash, merchants, API, SDK, instantsend, python, .NET, java, javascript, "
"nodejs, php, objective-c"
msgstr ""
"dash, мерчанты, API, SDK, instantsend, python, .NET, java, javascript, "
"nodejs, php, objective-c"

#: ../../docs/user/developers/integration.rst:9
msgid "Integration Overview"
msgstr "Обзор по интеграции"

#: ../../docs/user/developers/integration.rst:11
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_IntegrationOverview.pdf>`__."
msgstr ""
"Данная документация также доступна в формате `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_IntegrationOverview.pdf>`__."

#: ../../docs/user/developers/integration.rst:13
msgid ""
"`Dash Core <https://github.com/dashpay/dash/releases>`__ is a fork of "
"`Bitcoin Core <https://github.com/bitcoin/bitcoin>`__ and shares many common"
" functionalities. Key differences are found in existing JSON-RPC commands "
"which have been customized to support unique functionalities such as "
"InstantSend."
msgstr ""
" `Dash Core <https://github.com/dashpay/dash/releases>`__ является “форком” "
"Биткойна и имеет с ним много общих функций. Ключевые отличия находятся в "
"существующих JSON-RPC командах, которые были изменены таким образом, чтобы "
"можно было поддерживать такие уникальные функции, как InstantSend."

#: ../../docs/user/developers/integration.rst:19
msgid "The Basics"
msgstr "Основы"

#: ../../docs/user/developers/integration.rst:21
msgid ""
"Dash is a Proof of Work network, and similar to Bitcoin, Dash has a mining "
"network but uses a different block hashing algorithm. Dash serves as an "
"improvement of Bitcoin's shortcomings by offering a robust solution for "
"instant transactions, enhancing user privacy, and offering a self-"
"sustainable decentralized governance model."
msgstr ""
"Dash - это сеть Proof of Work, в которой, как и в Bitcoin, есть сеть "
"майнинга, но используется другой алгоритм хеширования блоков. Dash служит "
"улучшением недостатков Bitcoin, предлагая надежное решение для мгновенных "
"транзакций, повышая конфиденциальность пользователей и предлагая "
"самодостаточную децентрализованную модель управления."

#: ../../docs/user/developers/integration.rst:27
msgid ""
"Notably, Dash InstantSend provides a mechanism for zero-confirmation "
"transactions to be safely accepted and re-spent. InstantSend also provides "
"enhanced security compared to the conventional practice of waiting for "
"multiple block confirmations. Therefore, :ref:`implementing InstantSend "
"<integration-instantsend>` is the recommended best practice for all Dash "
"integrations."
msgstr ""
"В частности, Dash InstantSend обеспечивает механизм безопасного принятия и "
"повторного проведения транзакций с нулевым подтверждением. Кроме того, "
"InstantSend обеспечивает повышенную безопасность по сравнению с традиционной"
" практикой ожидания подтверждения от нескольких блоков. Поэтому "
":ref:`внедрение InstantSend <integration-instantsend>` является "
"рекомендуемой лучшей практикой для всех интеграций Dash."

#: ../../docs/user/developers/integration.rst:34
msgid "Block time: ~2.6 minutes per block"
msgstr "Время нахождения блока: ~2,6 минуты"

#: ../../docs/user/developers/integration.rst:35
msgid "Github source: https://github.com/dashpay/dash"
msgstr "Github source: https://github.com/dashpay/dash"

#: ../../docs/user/developers/integration.rst:36
msgid "Latest release: https://github.com/dashpay/dash/releases/latest"
msgstr "Последний релиз: https://github.com/dashpay/dash/releases/latest"

#: ../../docs/user/developers/integration.rst:39
msgid "JSON-RPC Interface"
msgstr "Интерфейс JSON-RPC"

#: ../../docs/user/developers/integration.rst:41
msgid ""
"The majority of commands are unchanged from Bitcoin making integration into "
"existing systems relatively straightforward. For a complete listing of RPC "
"commands please refer to the :ref:`​Dash Developer Guide <core:guide-"
"index>`."
msgstr ""
"Большинство команд остались неизменными по сравнению с Bitcoin, что делает "
"интеграцию в существующие системы относительно простой. Полный список RPC-"
"команд приведен в :ref:`Руководство разработчика Dash <core:guide-index>`."

#: ../../docs/user/developers/integration.rst:46
msgid ""
"Note that the following commands have been modified to support InstantSend:"
msgstr ""
"Обратите внимание, что следующие команды были изменены для поддержки "
"InstantSend:"

#: ../../docs/user/developers/integration.rst:48
#: ../../docs/user/developers/integration.rst:194
msgid ":ref:`getrawmempool <core:api-rpc-blockchain-getrawmempool>`"
msgstr ":ref:`getrawmempool <core:api-rpc-blockchain-getrawmempool>`"

#: ../../docs/user/developers/integration.rst:49
#: ../../docs/user/developers/integration.rst:195
msgid ""
":ref:`getmempoolancestors <core:api-rpc-blockchain-getmempoolancestors>`"
msgstr ""
":ref:`getmempoolancestors <core:api-rpc-blockchain-getmempoolancestors>`"

#: ../../docs/user/developers/integration.rst:50
#: ../../docs/user/developers/integration.rst:196
msgid ""
":ref:`getmempooldescendants <core:api-rpc-blockchain-getmempooldescendants>`"
msgstr ""
":ref:`getmempooldescendants <core:api-rpc-blockchain-getmempooldescendants>`"

#: ../../docs/user/developers/integration.rst:51
#: ../../docs/user/developers/integration.rst:197
msgid ":ref:`getmempoolentry <core:api-rpc-blockchain-getmempoolentry>`"
msgstr ":ref:`getmempoolentry <core:api-rpc-blockchain-getmempoolentry>`"

#: ../../docs/user/developers/integration.rst:52
#: ../../docs/user/developers/integration.rst:198
#: ../../docs/user/developers/integration.rst:320
msgid ""
":ref:`getrawtransaction <core:api-rpc-raw-transactions-getrawtransaction>`"
msgstr ""
":ref:`getrawtransaction <core:api-rpc-raw-transactions-getrawtransaction>`"

#: ../../docs/user/developers/integration.rst:53
#: ../../docs/user/developers/integration.rst:199
#: ../../docs/user/developers/integration.rst:321
msgid ":ref:`gettransaction <core:api-rpc-wallet-gettransaction>`"
msgstr ":ref:`gettransaction <core:api-rpc-wallet-gettransaction>`"

#: ../../docs/user/developers/integration.rst:54
#: ../../docs/user/developers/integration.rst:200
#: ../../docs/user/developers/integration.rst:322
msgid ":ref:`listtransactions <core:api-rpc-wallet-listtransactions>`"
msgstr ":ref:`listtransactions <core:api-rpc-wallet-listtransactions>`"

#: ../../docs/user/developers/integration.rst:55
#: ../../docs/user/developers/integration.rst:201
#: ../../docs/user/developers/integration.rst:323
msgid ":ref:`listsinceblock <core:api-rpc-wallet-listsinceblock>`"
msgstr ":ref:`listsinceblock <core:api-rpc-wallet-listsinceblock>`"

#: ../../docs/user/developers/integration.rst:58
#: ../../docs/user/developers/integration.rst:79
msgid "Special Transactions"
msgstr "Специальные транзакции"

#: ../../docs/user/developers/integration.rst:60
msgid ""
"Dash Core v0.13.0 introduced the concept of “Special Transactions” as "
"specified in `DIP002 "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__. Special "
"Transactions provide a more native way to implement additional features "
"which do not fit into the original concept of transactions. Please see the "
":ref:`Special Transactions <integration-special-transactions>` section below"
" for more information."
msgstr ""
"В Dash Core v0.13.0 введена концепция \"специальных транзакций\", как "
"указано в `DIP002 "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__. Специальные "
"транзакции позволяют реализовать дополнительные возможности, которые не "
"вписываются в первоначальную концепцию транзакций. Более подробная "
"информация приведена ниже в разделе :ref:`Специальные транзакции "
"<integration-special-transactions>`."

#: ../../docs/user/developers/integration.rst:68
msgid "Block Hashing Algorithm"
msgstr "Алгоритм хэширующий блоки"

#: ../../docs/user/developers/integration.rst:70
msgid ""
"Dash uses the X11 algorithm in place of SHA256 used in Bitcoin. It’s "
"important to note, however, that this only affects the hashing of the block "
"itself. All other internals utilize SHA256 hashes (transactions, merkle "
"root, etc.), which allows for most existing libraries to work in the Dash "
"ecosystem."
msgstr ""
"Dash использует алгоритм X11, вместо SHA256, который используется в "
"Биткойне. Однако стоит отметить, что это относится только к хешированию "
"Блока. Все прочие внутренние функции работают с хешами SHA256 (транзакции, "
"корни merkle, и т.д.), благодаря чему большинство существующих библиотек "
"совместимы с экосистемой Dash."

#: ../../docs/user/developers/integration.rst:81
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__."
msgstr ""
"Эта документация также доступна в формате `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__."

#: ../../docs/user/developers/integration.rst:83
msgid ""
"Dash 0.13.0 and higher implement `DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__, which form a "
"basis for new transaction types that provide on-chain metadata to assist "
"various consensus mechanisms. The following special transaction types exist:"
msgstr ""
"В Dash 0.13.0 и в последующих релизах, реализованы `Специальные Транзакции "
"DIP002 <https://github.com/dashpay/dips/blob/master/dip-0002.md>`__, которые"
" формируют основу для новых типов транзакций, снабжающих блокчейн "
"метаданными, которые оказывают помощь в работе различных механизмов "
"консенсуса. Существуют следующие типы специальных транзакций:"

#: ../../docs/user/developers/integration.rst:89
msgid "Version"
msgstr "Версия"

#: ../../docs/user/developers/integration.rst:89
msgid "Type"
msgstr "Тип"

#: ../../docs/user/developers/integration.rst:89
msgid "Payload Size"
msgstr "Размер нагрузки"

#: ../../docs/user/developers/integration.rst:89
msgid "Transaction Purpose / Example"
msgstr "Назначение транзакции / Пример"

#: ../../docs/user/developers/integration.rst:91
#: ../../docs/user/developers/integration.rst:93
#: ../../docs/user/developers/integration.rst:95
#: ../../docs/user/developers/integration.rst:97
#: ../../docs/user/developers/integration.rst:99
#: ../../docs/user/developers/integration.rst:101
#: ../../docs/user/developers/integration.rst:103
msgid "3"
msgstr "3"

#: ../../docs/user/developers/integration.rst:91
msgid "0"
msgstr "0"

#: ../../docs/user/developers/integration.rst:91
msgid "n/a"
msgstr "n/a"

#: ../../docs/user/developers/integration.rst:91
msgid "Standard Transaction"
msgstr "Стандартная транзакция"

#: ../../docs/user/developers/integration.rst:93
msgid "1"
msgstr "1"

#: ../../docs/user/developers/integration.rst:93
#: ../../docs/user/developers/integration.rst:95
#: ../../docs/user/developers/integration.rst:97
#: ../../docs/user/developers/integration.rst:99
#: ../../docs/user/developers/integration.rst:101
#: ../../docs/user/developers/integration.rst:103
msgid "variable"
msgstr "переменная"

#: ../../docs/user/developers/integration.rst:93
msgid ":ref:`Masternode Registration <core:ref-txs-proregtx>`"
msgstr ":ref:`Регистрация мастерноды <core:ref-txs-proregtx>`"

#: ../../docs/user/developers/integration.rst:95
msgid "2"
msgstr "2"

#: ../../docs/user/developers/integration.rst:95
msgid ":ref:`Update Masternode Service <core:ref-txs-proupservtx>`"
msgstr ":ref:`Обновления сервиса мастерноды <core:ref-txs-proupservtx>`"

#: ../../docs/user/developers/integration.rst:97
msgid ":ref:`Update Masternode Operator <core:ref-txs-proupregtx>`"
msgstr ":ref:`Обновление оператора мастерноды <core:ref-txs-proupregtx>`"

#: ../../docs/user/developers/integration.rst:99
msgid "4"
msgstr "4"

#: ../../docs/user/developers/integration.rst:99
msgid ":ref:`Masternode Revocation <core:ref-txs-prouprevtx>`"
msgstr ":ref:`Отзыв мастерноды <core:ref-txs-prouprevtx>`"

#: ../../docs/user/developers/integration.rst:101
msgid "5"
msgstr "5"

#: ../../docs/user/developers/integration.rst:101
msgid ":ref:`Masternode List Merkle Proof <core:ref-txs-cbtx>`"
msgstr ":ref:`Доказательство Меркла списка мастернод <core:ref-txs-cbtx>`"

#: ../../docs/user/developers/integration.rst:103
msgid "6"
msgstr "6"

#: ../../docs/user/developers/integration.rst:103
msgid ":ref:`Quorum Commitment <core:ref-txs-qctx>`"
msgstr ":ref:`Обязательство по кворуму <core:ref-txs-qctx>`"

#: ../../docs/user/developers/integration.rst:106
msgid "Integration notes:"
msgstr "Примечания по интеграции:"

#: ../../docs/user/developers/integration.rst:108
msgid ""
"`DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ introduced a "
"new Transaction Version and related “Payload” to the network."
msgstr ""
"`DIP002 Специальный транзакции "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ представил в "
"сети новую версию транзакции и связанную с ней \"полезную нагрузку\"."

#: ../../docs/user/developers/integration.rst:111
msgid ""
"Integrated Systems must be able to `serialize and deserialize "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#serialization-"
"hashing-and-signing>`__ these new Transaction Types to accurately encode and"
" decode Raw Transaction data."
msgstr ""
"Интегрированные системы должны быть способны к `сериализации и "
"десериализации "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#serialization-"
"hashing-and-signing>`__ этих новых Типов Транзакций, чтобы шифрование и "
"дешифровка данных Исходных Транзакций происходила успешно."

#: ../../docs/user/developers/integration.rst:115
msgid ""
"From a `backwards compatibility "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#compatibility>`__ "
"perspective, the 4 byte (32-bit) ``version`` field included in Classical "
"Transactions was split into two fields: ``version`` and ``type`` (each "
"consisting of 2 bytes)."
msgstr ""
"С точки зрения обратной совместимости "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#compatibility>`__, "
"4-байтовое (32-битное) поле ``версия``, включенное в классические "
"транзакции, было разделено на два поля: ``версия`` и ``тип`` (каждое из "
"которых состоит из 2 байт)."

#: ../../docs/user/developers/integration.rst:120
msgid ""
"Refer to the :ref:`Special Transactions <core:ref-txs-special-txs>` section "
"of the Dash developer reference for additional detail on these data types, "
"e.g. <variable int>."
msgstr ""
"Дополнительную информацию об этих типах данных см. в разделе "
":ref:`Специальные транзакции <core:ref-txs-special-txs>` справочника "
"разработчика Dash, например, <variable int>."

#: ../../docs/user/developers/integration.rst:124
msgid ""
":ref:`InstantSend <integration-instantsend>` status and Payload JSON (e.g. "
"``proRegTx``) is included in the JSON-RPC response, please note that this "
"data is not part of the calculated hash and is provided for convenience."
msgstr ""
"Статус `InstantSend <integration-instantsend>`__ и JSON нагрузка (например "
"``proRegTx``) включёна в ответ JSON-RPC, пожалуйста, обратите внимание, что "
"эти данные не являются частью рассчитываемого хеша и предоставлены для "
"удобства."

#: ../../docs/user/developers/integration.rst:129
msgid ""
"See the `transaction types integration documentation (PDF) "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__ for worked examples of each transaction "
"type."
msgstr ""
"Отработанные примеры каждого типа транзакций см. в документации по "
"интеграции типов транзакций (PDF) "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Transaction-Types.pdf>`__."

#: ../../docs/user/developers/integration.rst:136
msgid "InstantSend"
msgstr "InstantSend"

#: ../../docs/user/developers/integration.rst:138
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.14_LLMQ_InstantSend.pdf>`__."
msgstr ""
"Эта документация также доступна в формате `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.14_LLMQ_InstantSend.pdf>`__."

#: ../../docs/user/developers/integration.rst:140
msgid ""
"InstantSend is a feature provided by the Dash network that allows for zero-"
"confirmation transactions to be safely accepted and re-spent. The network "
"attempts to lock the inputs of every valid transaction when it is broadcast "
"to the network. Every secured transaction is included in a following block "
"in accordance with standard blockchain principles. Transactions are "
"typically locked by InstantSend within 3 seconds of being propagated to the "
"network."
msgstr ""
"InstantSend - это функция, предоставляемая сетью Dash, которая позволяет "
"безопасно принимать и повторно проводить транзакции с нулевым "
"подтверждением. Сеть пытается заблокировать входы каждой действительной "
"транзакции, когда она транслируется в сеть. Каждая защищенная транзакция "
"включается в следующий блок в соответствии со стандартными принципами "
"блокчейна. Транзакции обычно блокируются InstantSend в течение 3 секунд "
"после их распространения в сети."

#: ../../docs/user/developers/integration.rst:148
msgid ""
"InstantSend is enabled by the Masternode Network which comprises several "
"thousand masternode servers. These nodes are differentiated from standard "
"nodes by having proven ownership of 1,000 Dash, making the network `highly "
"resistant to Sybil attacks <https://en.wikipedia.org/wiki/Sybil_attack>`__. "
"Masternodes form `Long-Living Masternode Quorums (LLMQs) "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__, which are "
"responsible for providing near-instant certainty to the transaction "
"participants that the transaction inputs cannot be re-spent, and that the "
"transaction will be included in a following block instead of a conflicting "
"transaction."
msgstr ""
"InstantSend обеспечивается сетью мастернод, состоящей из нескольких тысяч "
"серверов мастернод. Эти узлы отличаются от обычных узлов тем, что имеют "
"подтвержденное право собственности на 1000 Dash, что делает сеть "
"`высокоустойчивой к атакам Sybil` "
"<https://en.wikipedia.org/wiki/Sybil_attack>`__. Мастерноды формируют "
"\"долгоживущие кворумы мастернод\" (LLMQ) "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__, которые "
"отвечают за практически мгновенную уверенность участников транзакций в том, "
"что средства, вложенные в транзакцию, не могут быть потрачены повторно, и "
"что транзакция будет включена в следующий блок вместо конфликтующей "
"транзакции."

#: ../../docs/user/developers/integration.rst:158
msgid ""
"This concept works as an extension to Nakamoto Consensus to provide "
"additional security. InstantSend enables transacted funds to be immediately "
"and securely re-spent by the recipient, even before the transaction is "
"included in a block."
msgstr ""
"Эта концепция работает как расширение консенсуса Накамото, обеспечивая "
"дополнительную безопасность. InstantSend позволяет получателю немедленно и "
"безопасно повторно расходовать транзакции, даже до того, как транзакция "
"будет включена в блокчейн."

#: ../../docs/user/developers/integration.rst:164
msgid "Receiving InstantSend Transactions"
msgstr "Получение транзакций InstantSend"

#: ../../docs/user/developers/integration.rst:168
msgid ""
"An \"InstantSend Transaction\" is simply a standard transaction that has "
"been provided additional assurances by the masternode network. As a result, "
"and from an integration perspective, the only technical difference is the "
"InstantSend status."
msgstr ""
"Транзакция InstantSend - это просто стандартная транзакция, получившая "
"дополнительные гарантии от сети мастернодов. В результате, с точки зрения "
"интеграции, единственным техническим отличием является статус InstantSend."

#: ../../docs/user/developers/integration.rst:173
msgid "Receiving an InstantSend Transaction introduces two requirements:"
msgstr "Вводится два требования для получения транзакций InstantSend:"

#: ../../docs/user/developers/integration.rst:175
msgid ""
"The ability to determine the “InstantSend Status” of a given transaction."
msgstr "Возможность определить \"статус InstantSend\" в заданной транзакции."

#: ../../docs/user/developers/integration.rst:178
#: ../../docs/user/developers/integration.rst:302
msgid ""
"The ability to adjust “Confirmation Status” independently of block "
"confirmation."
msgstr ""
"Возможность настройки \"статуса подтверждения\" независимо от подтверждения "
"блока."

#: ../../docs/user/developers/integration.rst:181
msgid ""
"InstantSend Status is provided by the dash daemon, typically through a "
"direct connection (e.g. RPC), :ref:`ZMQ notification <core:examples-"
"receiving-zmq-notifications>`, or through the usage of an external wallet "
"notification script."
msgstr ""
"Статус InstantSend предоставляется демоном dash, обычно через прямое "
"соединение (например, RPC), :ref:`ZMQ уведомление<core:examples-receiving-"
"zmq-notifications>`, или через использование внешнего скрипта уведомления "
"кошелька."

#: ../../docs/user/developers/integration.rst:187
#: ../../docs/user/developers/integration.rst:310
msgid "Direct Connection"
msgstr "Прямое соединение"

#: ../../docs/user/developers/integration.rst:189
msgid ""
"InstantSend Status can be identified through direct connection with the Dash"
" daemon using JSON-RPC protocol. The ``instantlock`` attribute of the JSON "
"response reflects the status of the transaction and is included in the "
"following commands:"
msgstr ""
"Статус InstantSend может быть определен путем прямого соединения с демоном "
"Dash по протоколу JSON-RPC. Атрибут ``instantlock`` JSON-ответа отражает "
"статус транзакции и включается в следующие команды:"

#: ../../docs/user/developers/integration.rst:204
#: ../../docs/user/developers/integration.rst:326
msgid "ZMQ Notification"
msgstr "Уведомление ZMQ"

#: ../../docs/user/developers/integration.rst:206
msgid ""
"Whenever a transaction enters the mempool and whenever a transaction is "
"locked in the mempool, ZMQ notifications can be broadcast by the node. Refer"
" to `the list of possible ZMQ notifications "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__ for more "
"details."
msgstr ""
"Всякий раз, когда транзакция попадает в mempool и когда транзакция "
"блокируется в mempool, узел может транслировать уведомления ZMQ. Более "
"подробная информация приведена в `списке возможных ZMQ-уведомлений "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__."

#: ../../docs/user/developers/integration.rst:212
msgid ""
"The following notifications are relevant for recognizing transactions and "
"their corresponding instantlocks:"
msgstr ""
"Для распознавания транзакций и соответствующих им мгновенных блокировок "
"актуальны следующие уведомления:"

#: ../../docs/user/developers/integration.rst:215
msgid "zmqpubhashtx"
msgstr "zmqpubhashtx"

#: ../../docs/user/developers/integration.rst:216
msgid "zmqpubhashtxlock"
msgstr "zmqpubhashtxlock"

#: ../../docs/user/developers/integration.rst:217
msgid "zmqpubrawtx"
msgstr "zmqpubrawtx"

#: ../../docs/user/developers/integration.rst:218
msgid "zmqpubrawtxlock"
msgstr "zmqpubrawtxlock"

#: ../../docs/user/developers/integration.rst:221
#: ../../docs/user/developers/integration.rst:369
msgid "Wallet Notification"
msgstr "Уведомление кошелька"

#: ../../docs/user/developers/integration.rst:223
msgid ""
"The Dash Core Daemon can be configured to execute an external script "
"whenever an InstantSend transaction relating to that wallet is observed. "
"This is configured by adding the following line to the dash.conf file::"
msgstr ""
"Dash Core Daemon может быть настроен на выполнение внешнего скрипта каждый "
"раз, когда наблюдается транзакция InstantSend, относящаяся к данному "
"кошельку. Это настраивается путем добавления следующей строки в файл "
"dash.conf::"

#: ../../docs/user/developers/integration.rst:229
msgid ""
"This is typically used with a wallet that has been populated with `watch-"
"only "
"<https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#watch-"
"only-address>`__ addresses."
msgstr ""
"Обычно это используется с кошельком, в который добавлены адреса `только для "
"просмотра "
"<https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#watch-"
"only-address>`__."

#: ../../docs/user/developers/integration.rst:236
msgid "Broadcasting InstantSend Transactions"
msgstr "Распространение транзакций InstantSend"

#: ../../docs/user/developers/integration.rst:240
msgid ""
"Because all transactions on the Dash network are automatically InstantSend, "
"no procedural changes are required to broadcast transactions as InstantSend."
msgstr ""
"Поскольку все транзакции в сети Dash автоматически являются InstantSend, "
"никаких процедурных изменений для трансляции транзакций как InstantSend не "
"требуется."

#: ../../docs/user/developers/integration.rst:243
msgid ""
"Since Dash v0.14.0 established LLMQs on the Dash network, quorums will now "
"attempt to lock every valid transaction by default without any additional "
"fee or action by the sending wallet or user. A transaction is eligible for "
"InstantSend when each of its inputs is considered confirmed. This is the "
"case when at least one of the following circumstances is true:"
msgstr ""
"С момента появления в сети Dash версии 0.14.0 LLMQ, кворумы теперь будут "
"пытаться заблокировать каждую действительную транзакцию по умолчанию без "
"какой-либо дополнительной комиссии или действий со стороны отправляющего "
"кошелька или пользователя. Транзакция имеет право на InstantSend, когда все "
"ее входы считаются подтвержденными. Это происходит, если верно хотя бы одно "
"из следующих обстоятельств:"

#: ../../docs/user/developers/integration.rst:250
msgid ""
"the previous transaction referred to by the input is confirmed with 6 blocks"
msgstr ""
"предыдущая транзакция, на которую ссылается вход, подтверждена 6 блоками"

#: ../../docs/user/developers/integration.rst:252
msgid ""
"the previous transaction is confirmed through an older InstantSend lock"
msgstr ""
"предыдущая транзакция подтверждается через более старую блокировку "
"InstantSend"

#: ../../docs/user/developers/integration.rst:254
msgid ""
"the block containing the previous transaction is `ChainLocked "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"
msgstr ""
"блок, содержащий предыдущую транзакцию, является `ChainLocked "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__."

#: ../../docs/user/developers/integration.rst:256
msgid ""
"When checking the previous transaction for an InstantSend lock, it is "
"important to do this on mempool (non-mined) transactions. This allows "
"chained InstantSend locking."
msgstr ""
"При проверке предыдущей транзакции на наличие блокировки InstantSend важно "
"выполнять эту проверку для транзакций mempool (не майнинговых). Это "
"позволяет использовать блочную блокировку InstantSend."

#: ../../docs/user/developers/integration.rst:261
#: ../../docs/user/developers/integration.rst:378
msgid "Additional Resources"
msgstr "Дополнительные ресурсы"

#: ../../docs/user/developers/integration.rst:263
#: ../../docs/user/developers/integration.rst:380
msgid ""
"The following resources provide additional information about InstantSend and"
" are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""
"Следующие ресурсы предоставляют дополнительную информацию о функции "
"InstantSend и предназначены для обеспечения более полного понимания базовых "
"технологий."

#: ../../docs/user/developers/integration.rst:267
msgid ""
"`InstantSend Technical Information "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__"
msgstr ""
"`Техническая информация по InstantSend "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__"

#: ../../docs/user/developers/integration.rst:268
msgid ""
":ref:`InstantSend Developer Documentation <core:guide-features-instantsend>`"
msgstr ""
":ref:`Документация InstantSend для разработчиков <core:guide-features-"
"instantsend>`"

#: ../../docs/user/developers/integration.rst:269
#: ../../docs/user/developers/integration.rst:385
msgid ""
":ref:`Receiving ZMQ notifications <core:examples-receiving-zmq-"
"notifications>`"
msgstr ""
":ref:`Получение ZMQ-уведомлений <core:examples-receiving-zmq-notifications>`"

#: ../../docs/user/developers/integration.rst:270
msgid ""
"`DIP0010: LLMQ InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__"
msgstr ""
"`DIP0010: LLMQ InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__"

#: ../../docs/user/developers/integration.rst:271
#: ../../docs/user/developers/integration.rst:387
msgid ""
"`Product Brief: Dash Core v0.14 Release <https://blog.dash.org/product-"
"brief-dash-core-release-v0-14-0-now-on-testnet-8f5f4ad45c96>`__"
msgstr ""
"`Кратко о продукте: Релиз Dash Core v0.14 <https://blog.dash.org/product-"
"brief-dash-core-release-v0-13-0-5d7fddffb7ef>`__"

#: ../../docs/user/developers/integration.rst:276
msgid "ChainLocks"
msgstr "ChainLocks"

#: ../../docs/user/developers/integration.rst:278
msgid ""
"ChainLocks are a feature provided by the Dash Network which provides "
"certainty when accepting payments. This technology, particularly when used "
"in parallel with :ref:`InstantSend <instantsend>`, creates an environment in"
" which payments can be accepted immediately and without the risk of "
"“Blockchain Reorganization Events”."
msgstr ""
"ChainLocks - это функция, предоставляемая сетью Dash, которая обеспечивает "
"определенность при приеме платежей. Эта технология, особенно при "
"использовании параллельно с :ref:`InstantSend <instantsend>`, создает "
"условия, в которых платежи могут быть приняты немедленно и без риска "
"\"событий реорганизации блокчейна\"."

#: ../../docs/user/developers/integration.rst:284
msgid ""
"The risk of blockchain reorganization is typically addressed by requiring "
"multiple :term:`confirmations` before a transaction can be safely accepted "
"as payment. This type of indirect security is effective, but at a cost of "
"time and user experience. ChainLocks are a solution for this problem."
msgstr ""
"Риск реорганизации блокчейна обычно устраняется путем требования "
"многократного :term:`подтверждения`, прежде чем транзакция может быть "
"безопасно принята к оплате. Такой тип косвенной защиты эффективен, но "
"требует больших затрат времени и пользовательского опыта. ChainLocks - это "
"решение данной проблемы."

#: ../../docs/user/developers/integration.rst:290
msgid "Receiving ChainLocks"
msgstr "Получение ChainLocks"

#: ../../docs/user/developers/integration.rst:294
msgid ""
"Once a ChainLock is observed for a block, each transaction in that block and"
" all previous blocks can be considered irreversibly and fully confirmed."
msgstr ""
"Как только для блока наблюдается ChainLock, каждая транзакция в этом блоке и"
" во всех предыдущих блоках может считаться необратимой и полностью "
"подтвержденной."

#: ../../docs/user/developers/integration.rst:297
msgid "Receiving a ChainLock introduces two requirements:"
msgstr "Получение ChainLock влечет за собой два требования:"

#: ../../docs/user/developers/integration.rst:299
msgid ""
"The ability to determine the “ChainLock Status” of a given block or "
"transaction."
msgstr ""
"Возможность определения \"ChainLock Status\" данного блока или транзакции."

#: ../../docs/user/developers/integration.rst:305
msgid ""
"ChainLock status is provided by the dash daemon, typically through a direct "
"connection (e.g. RPC) or by a :ref:`ZMQ notification <core:examples-"
"receiving-zmq-notifications>`."
msgstr ""
"Статус ChainLock предоставляется демоном dash, обычно через прямое "
"соединение (например, RPC) или через :ref:`уведомление ZMQ <core:examples-"
"receiving-zmq-notifications>`."

#: ../../docs/user/developers/integration.rst:312
msgid ""
"ChainLock status can be identified through direct connection with the Dash "
"daemon using JSON-RPC protocol. The boolean ``chainlock`` attribute of the "
"JSON response reflects the ChainLock status of the block or transaction and "
"is included in the following commands:"
msgstr ""
"Статус ChainLock может быть определен через прямое соединение с демоном Dash"
" по протоколу JSON-RPC. Атрибут boolean ``chainlock`` в JSON-ответе отражает"
" статус ChainLock блока или транзакции и включается в следующие команды:"

#: ../../docs/user/developers/integration.rst:317
msgid ":ref:`getblock <core:api-rpc-blockchain-getblock>`"
msgstr ":ref:`getblock <core:api-rpc-blockchain-getblock>`"

#: ../../docs/user/developers/integration.rst:318
msgid ":ref:`getblockheader <core:api-rpc-blockchain-getblockheader>`"
msgstr ":ref:`getblockheader <core:api-rpc-blockchain-getblockheader>`"

#: ../../docs/user/developers/integration.rst:319
msgid ":ref:`getblockheaders <core:api-rpc-blockchain-getblockheaders>`"
msgstr ":ref:`getblockheaders <core:api-rpc-blockchain-getblockheaders>`"

#: ../../docs/user/developers/integration.rst:328
msgid ""
"ChainLock signatures are created shortly after the related block has been "
"mined. As a result it is recommended that integrated clients use :ref:`ZMQ "
"(ZeroMQ) notifications <core:examples-receiving-zmq-notifications>` in order"
" to ensure that this information is received as promptly as possible. Refer "
"to `the list of possible ZMQ notifications "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__ for more "
"details."
msgstr ""
"Подписи ChainLock создаются вскоре после майнинга соответствующего блока. В "
"связи с этим рекомендуется, чтобы интегрированные клиенты использовали "
":ref:`ZMQ (ZeroMQ) notifications 1` для обеспечения максимально оперативного"
" получения этой информации. Более подробная информация приведена в `списке "
"возможных ZMQ-уведомлений "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__."

#: ../../docs/user/developers/integration.rst:336
msgid ""
"The following notifications are relevant for recognizing blocks and their "
"corresponding ChainLocks:"
msgstr ""
"Следующие уведомления относятся к распознаванию блоков и соответствующих им "
"ChainLocks:"

#: ../../docs/user/developers/integration.rst:339
msgid "zmqpubhashblock"
msgstr "zmqpubhashblock"

#: ../../docs/user/developers/integration.rst:340
msgid "zmqpubhashchainlock"
msgstr "zmqpubhashchainlock"

#: ../../docs/user/developers/integration.rst:341
msgid "zmqpubrawblock"
msgstr "zmqpubrawblock"

#: ../../docs/user/developers/integration.rst:342
msgid "zmqpubrawchainlock"
msgstr "zmqpubrawchainlock"

#: ../../docs/user/developers/integration.rst:343
msgid "zmqpubrawchainlocksig"
msgstr "zmqpubrawchainlocksig"

#: ../../docs/user/developers/integration.rst:345
msgid ""
"This sample code uses the `js-dashd-zmq library "
"<https://github.com/dashpay/js-dashd-zmq>`__ to listen for ChainLock ZMQ "
"notifications and return the hash of blocks that receive a ChainLock."
msgstr ""
"Данный пример использует библиотеку `js-dashd-zmq "
"<https://github.com/dashpay/js-dashd-zmq>`__ для прослушивания ZMQ-"
"уведомлений ChainLock и возврата хэша блоков, получивших ChainLock."

#: ../../docs/user/developers/integration.rst:349
msgid "Subscribe to ChainLock hash ZMQ notifications"
msgstr "Следить за ZMQ-уведомлениям ChainLock hash"

#: ../../docs/user/developers/integration.rst:371
msgid ""
"The Dash Core daemon can be configured to execute an external script "
"whenever a ChainLock is received. This is configured by adding the following"
" line to the dash.conf file::"
msgstr ""
"Демон Dash Core может быть настроен на выполнение внешнего скрипта при "
"получении ChainLock. Это настраивается путем добавления следующей строки в "
"файл dash.conf::"

#: ../../docs/user/developers/integration.rst:384
msgid ""
":ref:`ChainLock Developer Documentation <core:guide-features-chainlocks>`"
msgstr ""
":ref:`Документация ChainLocks для разработчиков <core:guide-features-"
"chainlocks>`"

#: ../../docs/user/developers/integration.rst:386
msgid ""
"`DIP0008: ChainLocks "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"
msgstr ""
"`DIP0008: ChainLocks "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"
