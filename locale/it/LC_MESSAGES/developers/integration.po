# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# AL <mediterraneo9000@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-22 09:30-0400\n"
"PO-Revision-Date: 2019-04-08 11:33+0000\n"
"Last-Translator: AL <mediterraneo9000@gmail.com>, 2020\n"
"Language-Team: Italian (https://www.transifex.com/dash/teams/37570/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../developers/integration.rst:1
msgid "Technical guides for merchants using Dash. API and SDK resources."
msgstr ""
"Guide tecniche per i commercianti che utilizzano Dash. Risorse API e SDK."

#: ../../developers/integration.rst:1
msgid ""
"dash, merchants, payment processor, API, SDK, insight, blockcypher, "
"instantsend, python, .NET, java, javascript, nodejs, php, objective-c, "
"vending machines"
msgstr ""

#: ../../developers/integration.rst:9
msgid "Integration Overview"
msgstr "Panoramica di integrazione"

#: ../../developers/integration.rst:11
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.13_IntegrationOverview.pdf>`__."
msgstr ""
"Questa documentazione è disponibile anche come file `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.13_IntegrationOverview.pdf>`__."

#: ../../developers/integration.rst:13
msgid ""
"`Dash Core <https://github.com/dashpay/dash/releases>`__ is a fork of "
"`Bitcoin Core <https://github.com/bitcoin/bitcoin>`__ and shares many common"
" functionalities. Key differences are found in existing JSON-RPC commands "
"which have been customized to support unique functionalities such as "
"InstantSend."
msgstr ""

#: ../../developers/integration.rst:19
msgid "The Basics"
msgstr ""

#: ../../developers/integration.rst:21
msgid ""
"Dash is a Proof of Work network, and similar to Bitcoin, Dash has a mining "
"network but uses a different block hashing algorithm. Dash serves as an "
"improvement of Bitcoin's shortcomings by offering a robust solution for "
"instant transactions, enhancing user privacy, and offering a self-"
"sustainable decentralized governance model."
msgstr ""

#: ../../developers/integration.rst:27
msgid "Block time: ~2.6 minutes per block"
msgstr ""

#: ../../developers/integration.rst:28
msgid "Github source: https://github.com/dashpay/dash"
msgstr ""

#: ../../developers/integration.rst:29
msgid "Latest release: https://github.com/dashpay/dash/releases"
msgstr ""

#: ../../developers/integration.rst:32
msgid "JSON-RPC Interface"
msgstr ""

#: ../../developers/integration.rst:34
msgid ""
"The majority of commands are unchanged from Bitcoin making integration into "
"existing systems relatively straightforward. Note that the following "
"commands have been modified to support InstantSend:"
msgstr ""

#: ../../developers/integration.rst:38 ../../developers/integration.rst:169
msgid ""
"`getrawmempool <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getrawmempool>`__"
msgstr ""

#: ../../developers/integration.rst:39 ../../developers/integration.rst:170
msgid ""
"`getmempoolancestors <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempoolancestors>`__"
msgstr ""

#: ../../developers/integration.rst:40 ../../developers/integration.rst:171
msgid ""
"`getmempooldescendants <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempooldescendants>`__"
msgstr ""

#: ../../developers/integration.rst:41 ../../developers/integration.rst:172
msgid ""
"`getmempoolentry <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-blockchain#getmempoolentry>`__"
msgstr ""

#: ../../developers/integration.rst:42 ../../developers/integration.rst:173
msgid ""
"`getrawtransaction <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-raw-transactions#getrawtransaction>`__"
msgstr ""

#: ../../developers/integration.rst:43 ../../developers/integration.rst:174
msgid ""
"`gettransaction <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#gettransaction>`__"
msgstr ""

#: ../../developers/integration.rst:44 ../../developers/integration.rst:175
msgid ""
"`listtransactions <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#listtransactions>`__"
msgstr ""

#: ../../developers/integration.rst:45 ../../developers/integration.rst:176
msgid ""
"`listsinceblock <https://dashcore.readme.io/docs/core-api-ref-remote-"
"procedure-calls-wallet#listsinceblock>`__"
msgstr ""

#: ../../developers/integration.rst:48
msgid "Block Hashing Algorithm"
msgstr ""

#: ../../developers/integration.rst:50
msgid ""
"Dash uses the X11 algorithm in place of SHA256 used in Bitcoin. It’s "
"important to note, however, that this only affects the hashing of the block "
"itself. All other internals utilize SHA256 hashes (transactions, merkle "
"root, etc.), which allows for most existing libraries to work in the Dash "
"ecosystem."
msgstr ""

#: ../../developers/integration.rst:56 ../../developers/integration.rst:66
msgid "Special Transactions"
msgstr "Transazioni Speciali"

#: ../../developers/integration.rst:58
msgid ""
"Dash Core v0.13.x introduced the concept of “Special Transactions”. Please "
"see the `Transaction Type Integration Guide "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Dash-v0.13.0-Transaction-Types.pdf>`__ for more information."
msgstr ""

#: ../../developers/integration.rst:68
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Dash-v0.13.0-Transaction-Types.pdf>`__."
msgstr ""
"Questa documentazione è disponibile anche come file `PDF  "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Dash-v0.13.0-Transaction-Types.pdf>`__."

#: ../../developers/integration.rst:70
msgid ""
"Dash 0.13.0 and higher implement `DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__, which form a "
"basis for new transaction types that provide on-chain metadata to assist "
"various consensus mechanisms. The following special transaction types exist:"
msgstr ""
"Dash 0.13.0 e versioni successive implementano `DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>` __, che "
"costituiscono una base per i nuovi tipi di transazione che forniscono on-"
"chain metadati per assistere vari meccanismi di consenso. Esistono i "
"seguenti tipi di transazioni speciali:"

#: ../../developers/integration.rst:76
msgid "Release"
msgstr "Rilascio"

#: ../../developers/integration.rst:76
msgid "Version"
msgstr "Versione"

#: ../../developers/integration.rst:76
msgid "Type"
msgstr "Modello"

#: ../../developers/integration.rst:76
msgid "Payload Size"
msgstr "Payload Size"

#: ../../developers/integration.rst:76
msgid "Payload"
msgstr "Payload"

#: ../../developers/integration.rst:76
msgid "Payload JSON"
msgstr "Payload JSON"

#: ../../developers/integration.rst:76
msgid "Transaction Purpose"
msgstr "Proposito della Transazione"

#: ../../developers/integration.rst:78 ../../developers/integration.rst:80
#: ../../developers/integration.rst:82 ../../developers/integration.rst:84
#: ../../developers/integration.rst:86 ../../developers/integration.rst:88
#: ../../developers/integration.rst:90
msgid "v0.13.0"
msgstr "v0.13.0"

#: ../../developers/integration.rst:78 ../../developers/integration.rst:80
#: ../../developers/integration.rst:82 ../../developers/integration.rst:84
#: ../../developers/integration.rst:84 ../../developers/integration.rst:86
#: ../../developers/integration.rst:88 ../../developers/integration.rst:90
msgid "3"
msgstr "3"

#: ../../developers/integration.rst:78
msgid "0"
msgstr "0"

#: ../../developers/integration.rst:78 ../../developers/integration.rst:78
#: ../../developers/integration.rst:78
msgid "n/a"
msgstr "n/a"

#: ../../developers/integration.rst:78
msgid "Standard Transaction"
msgstr "Transazione standard"

#: ../../developers/integration.rst:80
msgid "1"
msgstr "1"

#: ../../developers/integration.rst:80 ../../developers/integration.rst:82
#: ../../developers/integration.rst:84 ../../developers/integration.rst:86
#: ../../developers/integration.rst:88 ../../developers/integration.rst:90
msgid "<variable int>"
msgstr "<variable int>"

#: ../../developers/integration.rst:80 ../../developers/integration.rst:82
#: ../../developers/integration.rst:84 ../../developers/integration.rst:86
#: ../../developers/integration.rst:88 ../../developers/integration.rst:90
msgid "<hex>"
msgstr "<hex>"

#: ../../developers/integration.rst:80
msgid "proRegTx"
msgstr "proRegTx"

#: ../../developers/integration.rst:80
msgid ""
"`Masternode Registration <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-reg-tx>`__"
msgstr ""
"`Registrazione Masternode <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-reg-tx>`__"

#: ../../developers/integration.rst:82
msgid "2"
msgstr "2"

#: ../../developers/integration.rst:82
msgid "proUpServTx"
msgstr "proUpServTx"

#: ../../developers/integration.rst:82
msgid ""
"`Update Masternode Service <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-serv-tx>`__"
msgstr ""
"`Aggiornamento Servizio Masternode <https://dashcore.readme.io/docs/core-"
"ref-transactions-special-transactions#section-pro-up-serv-tx>`__"

#: ../../developers/integration.rst:84
msgid "proUpRegTx"
msgstr "proUpRegTx"

#: ../../developers/integration.rst:84
msgid ""
"`Update Masternode Operator <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-reg-tx>`__"
msgstr ""
"`Aggiornamento Operatore Masternode <https://dashcore.readme.io/docs/core-"
"ref-transactions-special-transactions#section-pro-up-reg-tx>`__"

#: ../../developers/integration.rst:86
msgid "4"
msgstr "4"

#: ../../developers/integration.rst:86
msgid "proUpRevTx"
msgstr "proUpRevTx"

#: ../../developers/integration.rst:86
msgid ""
"`Masternode Revocation <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-pro-up-rev-tx>`__"
msgstr ""
"`Revoca Masternode  <https://dashcore.readme.io/docs/core-ref-transactions-"
"special-transactions#section-pro-up-rev-tx>`__"

#: ../../developers/integration.rst:88
msgid "5"
msgstr "5"

#: ../../developers/integration.rst:88
msgid "cbTx"
msgstr "cbTx"

#: ../../developers/integration.rst:88
msgid ""
"`Masternode List Merkle Proof <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-cb-tx>`__"
msgstr ""
"`Elenco Masternode Merkle Proof <https://dashcore.readme.io/docs/core-ref-"
"transactions-special-transactions#section-cb-tx>`__"

#: ../../developers/integration.rst:90
msgid "6"
msgstr "6"

#: ../../developers/integration.rst:90
msgid "qcTx"
msgstr "qcTx"

#: ../../developers/integration.rst:90
msgid ""
"`Quorum Commitment <https://dashcore.readme.io/docs/core-ref-transactions-"
"special-transactions#section-qc-tx>`__"
msgstr ""
"`Impegno del Quorum <https://dashcore.readme.io/docs/core-ref-transactions-"
"special-transactions#section-qc-tx>`__"

#: ../../developers/integration.rst:93
msgid "Integration notes:"
msgstr "Note di integrazione:"

#: ../../developers/integration.rst:95
msgid ""
"`DIP002 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ are a "
"foundational component of Dash Core v0.13.0 and introduce a new Transaction "
"Version and related “Payload” to the network."
msgstr ""
"`DIP002 Transazioni Speciali "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ sono una "
"componente fondamentale di Dash Core v0.13.0 e introducono una nuova "
"versione di transazione e relativo \"Payload\" alla rete."

#: ../../developers/integration.rst:99
msgid ""
"Integrated Systems must be able to `serialize and deserialize "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#serialization-"
"hashing-and-signing>`__ these new Transaction Types to accurately encode and"
" decode Raw Transaction data."
msgstr ""

#: ../../developers/integration.rst:103
msgid ""
"From a `backwards compatibility "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#compatibility>`__ "
"perspective, the 4 byte (32-bit) ``version`` field included in Legacy "
"Transactions has been split into two fields: ``version`` and ``type`` (each "
"consisting of 2 bytes)."
msgstr ""
"Dal punto di vista della `compatibilità con le versioni precedenti, "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md#compatibility>`__ "
"il campo` `versione '' di 4 byte (32 bit) incluso nelle transazioni legacy è"
" stato suddiviso in due campi:` `versione`` e` `tipo '' (ciascuno composto "
"da 2 byte)"

#: ../../developers/integration.rst:108
msgid ""
"Refer to the `Special Transactions <https://dashcore.readme.io/docs/core-"
"ref-transactions-special-transactions>`__ section of the dash developer "
"reference for additional detail on these data types, e.g. <variable int>."
msgstr ""
"Fare riferimento alla sezione `Transazioni speciali "
"<https://dashcore.readme.io/docs/core-ref-transactions-special-"
"transactions>`__ degli sviluppatori dash per ulteriori dettagli su questo "
"tipo di dati, ad es. <variable int>."

#: ../../developers/integration.rst:112
msgid ""
":ref:`InstantSend <integration-instantsend>` status and Payload JSON (e.g. "
"``proRegTx``) is included in the JSON-RPC response, please note that this "
"data is not part of the calculated hash and is provided for convenience."
msgstr ""

#: ../../developers/integration.rst:117
msgid ""
"See the `v0.13.0 transaction types integration documentation (PDF) "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Dash-v0.13.0-Transaction-Types.pdf>`__ for worked examples of each"
" transaction type."
msgstr ""
"Vedere la documentazione sull'integrazione dei tipi di transazione `v0.13.0 "
"(PDF) "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Integration-"
"Resources-Dash-v0.13.0-Transaction-Types.pdf>`__ per esempi funzionanti di "
"ogni tipo di transazione."

#: ../../developers/integration.rst:124
msgid "InstantSend"
msgstr "InstantSend"

#: ../../developers/integration.rst:126
msgid ""
"This documentation is also available as a `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.14_LLMQ_InstantSend.pdf>`__."
msgstr ""
"Questa documentazione è disponibile anche come file `PDF "
"<https://github.com/dashpay/docs/raw/master/binary/integration/Dash_v0.14_LLMQ_InstantSend.pdf>`__."

#: ../../developers/integration.rst:128
msgid ""
"InstantSend is a feature provided by the Dash network that allows for zero-"
"confirmation transactions to be safely accepted and re-spent. The network "
"attempts to lock the inputs of every valid transaction when it is broadcast "
"to the network. Every secured transaction is included in a following block "
"in accordance with standard blockchain principles."
msgstr ""
"InstantSend è una funzionalità fornita dalla rete Dash che consente di "
"accettare e riutilizzare in modo sicuro le transazioni a zero conferme. La "
"rete lavora per bloccare gli input di ogni transazione valida quando viene "
"trasmessa alla rete. Ogni transazione protetta è inclusa in un blocco "
"successivo in conformità con i principi standard della blockchain."

#: ../../developers/integration.rst:134
msgid ""
"InstantSend is enabled by the Masternode Network which comprises "
"approximately 5,000 masternode servers. These nodes are differentiated from "
"standard nodes by having proven ownership of 1,000 Dash, making the network "
"`highly resistant to Sybil attacks "
"<https://en.wikipedia.org/wiki/Sybil_attack>`__. Masternodes form `Long-"
"Living Masternode Quorums (LLMQs) "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__, which are "
"responsible for providing near-instant certainty to the transaction "
"participants that the transaction inputs cannot be respent, and that the "
"transaction will be included in a following block instead of a conflicting "
"transaction."
msgstr ""

#: ../../developers/integration.rst:144
msgid ""
"This concept works as an extension to Nakamoto Consensus. InstantSend "
"enables transacted funds to be immediately and securely respent by the "
"recipient, even before the transaction is included in a block."
msgstr ""
"Questo concetto funziona come un'estensione del Nakamoto Consensus. "
"InstantSend consente al destinatario di spendere immediatamente e in modo "
"sicuro i fondi negoziati, anche prima che la transazione venga inclusa in un"
" blocco."

#: ../../developers/integration.rst:150
msgid "Receiving InstantSend Transactions"
msgstr "Ricezione di transazioni InstantSend"

#: ../../developers/integration.rst:152
msgid "Receiving an InstantSend Transaction introduces two requirements:"
msgstr ""
"La ricezione di una transazione InstantSend introduce a due requisiti:"

#: ../../developers/integration.rst:154
msgid ""
"The ability to determine the “InstantSend Status” of a given transaction."
msgstr ""
"La capacità di determinare lo \"Status di InstantSend\" di una data "
"transazione."

#: ../../developers/integration.rst:157
msgid ""
"The ability to adjust “Confirmation Status” independently of block "
"confirmation."
msgstr ""
"Possibilità di regolare lo \"Status di conferma\" indipendentemente dalla "
"conferma del blocco."

#: ../../developers/integration.rst:160
msgid ""
"InstantSend Status is typically determined through direct connection with "
"the dash daemon, `ZMQ notification "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__, or "
"through the usage of an external wallet notification script."
msgstr ""
"Lo status di InstantSend viene in genere determinato tramite la connessione "
"diretta con il demone dash, `notifica ZMQ "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__, o "
"tramite l'uso di uno script di notifica del portafoglio esterno."

#: ../../developers/integration.rst:164
msgid ""
"**Direct Connection:** InstantSend Status can be identified through direct "
"connection with the Dash daemon using JSON-RPC protocol. The “instantlock” "
"attribute of the JSON response reflects the status of the transaction and is"
" included in the following commands:"
msgstr ""
"** Connessione diretta: ** Lo stato di InstantSend può essere identificato "
"tramite connessione diretta con il demone Dash utilizzando il protocollo "
"JSON-RPC. L'attributo \"instantlock\" della risposta JSON riflette lo stato "
"della transazione ed è incluso nei seguenti comandi:"

#: ../../developers/integration.rst:178
msgid ""
"**ZMQ Notification:** Whenever a transaction enters the mempool and whenever"
" a transaction is locked in the mempool, ZMQ notifications can be broadcast "
"by the node. A list of possible ZMQ notifications can be found `here "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__."
msgstr ""
"** Notifica ZMQ: ** Ogni volta che una transazione entra in mempool e ogni "
"volta che una transazione è bloccata in mempool, le notifiche ZMQ possono "
"essere trasmesse dal nodo. Un elenco di possibili notifiche ZMQ può essere "
"trovato `qui "
"<https://github.com/dashpay/dash/blob/master/doc/zmq.md#usage>`__."

#: ../../developers/integration.rst:183
msgid ""
"The following notifications are relevant for recognizing transactions and "
"their corresponding instantlocks:"
msgstr ""
"Le seguenti notifiche sono rilevanti per il riconoscimento delle transazioni"
" e dei relativi blocchi istantanei:"

#: ../../developers/integration.rst:186
msgid "zmqpubhashtx"
msgstr "zmqpubhashtx"

#: ../../developers/integration.rst:187
msgid "zmqpubhashtxlock"
msgstr "zmqpubhashtxlock"

#: ../../developers/integration.rst:188
msgid "zmqpubrawtx"
msgstr "zmqpubrawtx"

#: ../../developers/integration.rst:189
msgid "zmqpubrawtxlock"
msgstr "zmqpubrawtxlock"

#: ../../developers/integration.rst:191
msgid ""
"**Wallet Notification:** The Dash Core Daemon can be configured to execute "
"an external script whenever an InstantSend transaction relating to that "
"wallet is observed. This is configured by adding the following line to the "
"dash.conf file::"
msgstr ""
"** Notifica portafoglio: ** Dash Core Daemon può essere configurato per "
"eseguire uno script esterno ogni volta che viene osservata una transazione "
"InstantSend relativa a quel portafoglio. Questo viene configurato "
"aggiungendo la seguente riga al file dash.conf::"

#: ../../developers/integration.rst:198
msgid ""
"This is typically used with a wallet that has been populated with `watch-"
"only <https://dashcore.readme.io/docs/core-additional-resources-"
"glossary#section-watch-only-address>`__ addresses."
msgstr ""
"Questo è tipicamente usato con un portafoglio che è stato popolato con "
"indirizzi `watch-only <https://dashcore.readme.io/docs/core-additional-"
"resources-glossary#section-watch-only-address>` __."

#: ../../developers/integration.rst:205
msgid "Broadcasting InstantSend Transactions"
msgstr "Trasmissione di transazioni InstantSend"

#: ../../developers/integration.rst:207
msgid ""
"Since Dash v0.14.0 established LLMQs on the Dash network, quorums will now "
"attempt to lock every valid transaction by default without any additional "
"fee or action by the sending wallet or user. A transaction is eligible for "
"InstantSend when each of its inputs is considered confirmed. This is the "
"case when at least one of the following circumstances is true:"
msgstr ""
"Poiché Dash v0.14.0 ha stabilito LLMQs sulla rete Dash, i quorum tenteranno "
"ora di bloccare ogni transazione valida per impostazione predefinita senza "
"alcuna commissione o azione aggiuntiva da parte del portafoglio o "
"dell'utente che invia. Una transazione è idonea per InstantSend quando "
"ciascuno dei suoi input è confermato. Questo è il caso in cui si verifica "
"almeno una delle seguenti circostanze:"

#: ../../developers/integration.rst:214
msgid ""
"the previous transaction referred to by the input is confirmed with 6 blocks"
msgstr ""
"la transazione precedente a cui fa riferimento l'entrata viene confermata "
"con 6 blocchi"

#: ../../developers/integration.rst:216
msgid ""
"the previous transaction is confirmed through an older InstantSend lock"
msgstr ""
"la transazione precedente viene confermata tramite un blocco InstantSend più"
" vecchio"

#: ../../developers/integration.rst:218
msgid ""
"the block containing the previous transaction is `ChainLocked "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"
msgstr ""
"il blocco contenente la transazione precedente è `ChainLocked "
"<https://github.com/dashpay/dips/blob/master/dip-0008.md>`__"

#: ../../developers/integration.rst:220
msgid ""
"When checking the previous transaction for an InstantSend lock, it is "
"important to do this on mempool (non-mined) transactions. This allows "
"chained InstantSend locking."
msgstr ""

#: ../../developers/integration.rst:225
msgid "Additional Resources"
msgstr "Risorse addizionali"

#: ../../developers/integration.rst:227
msgid ""
"The following resources provide additional information about InstantSend and"
" are intended to help provide a more complete understanding of the "
"underlying technologies."
msgstr ""
"Le seguenti risorse forniscono ulteriori informazioni su InstantSend e hanno"
" lo scopo di fornire una comprensione più completa delle tecnologie "
"sottostanti."

#: ../../developers/integration.rst:231
msgid ""
"`InstantSend Technical Information "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__"
msgstr ""
"`InstantSend informazioni tecniche "
"<https://github.com/dashpay/dash/blob/master/doc/instantsend.md#zmq>`__"

#: ../../developers/integration.rst:232
msgid ""
"`InstantSend Developer Documentation <https://dashcore.readme.io/docs/core-"
"guide-dash-features-instantsend>`__"
msgstr ""
"`Documentazione per sviluppatori InstantSend "
"<https://dashcore.readme.io/docs/core-guide-dash-features-instantsend>`__"

#: ../../developers/integration.rst:233
msgid ""
"`DIP0010: LLMQ InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__"
msgstr ""
"`DIP0010: LLMQ InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__"

#: ../../developers/integration.rst:234
msgid ""
"`Product Brief: Dash Core v0.14 Release <https://blog.dash.org/product-"
"brief-dash-core-release-v0-14-0-now-on-testnet-8f5f4ad45c96>`__"
msgstr ""
"`Descrizione del prodotto: versione Dash Core v0.14 "
"<https://blog.dash.org/product-brief-dash-core-release-v0-14-0-now-on-"
"testnet-8f5f4ad45c96>`__"

#: ../../developers/integration.rst:240
msgid "API Services"
msgstr "Servizi API"

#: ../../developers/integration.rst:242
msgid ""
"Several API services exist to facilitate quick and easy integration with the"
" Dash network for services including:"
msgstr ""
"Esistono diversi servizi API per facilitare l'integrazione rapida e semplice"
" con la rete Dash per servizi tra cui:"

#: ../../developers/integration.rst:245
msgid "Transaction broadcasting"
msgstr "Trasmissione di transazioni"

#: ../../developers/integration.rst:246
msgid "Exchange rates"
msgstr "Tassi di cambio"

#: ../../developers/integration.rst:247
msgid "Currency conversion"
msgstr "Conversione di valuta"

#: ../../developers/integration.rst:248
msgid "Invoice generation"
msgstr "Generazione di fatture"

#: ../../developers/integration.rst:250
msgid ""
"API Services are typically leveraged to eliminate that requirement of "
"running your own infrastructure to support blockchain interactions. This "
"includes mechanisms such as:"
msgstr ""
"I servizi API vengono in genere sfruttati per eliminare il requisito di "
"eseguire la propria infrastruttura per supportare le interazioni blockchain."
" Ciò include meccanismi come:"

#: ../../developers/integration.rst:254
msgid "Forming and Broadcasting a Transaction to the network."
msgstr "Formazione e trasmissione di una transazione alla rete."

#: ../../developers/integration.rst:255
msgid "Address generation using HD Wallets."
msgstr "Generazione di indirizzi tramite portafogli HD."

#: ../../developers/integration.rst:256
msgid "Payment Processing using WebHooks."
msgstr "Elaborazione dei pagamenti tramite WebHook."

#: ../../developers/integration.rst:258
msgid ""
"There are a variety of options for supporting these methods, with the key "
"differentiator being the pricing model included and supported features. The "
"following list of API Providers attempts to outline these key "
"features/differentiators and also includes a link to related documentation."
msgstr ""
"Ci sono una varietà di opzioni per supportare questi metodi, con il fattore "
"chiave di differenziazione che è il modello di prezzo incluso e le "
"funzionalità supportate. Il seguente elenco di provider API tenta di "
"delineare queste caratteristiche / differenziatori chiave e include anche un"
" collegamento alla documentazione correlata."

#: ../../developers/integration.rst:266
msgid "Insight"
msgstr "Insight"

#: ../../developers/integration.rst:273
msgid "https://github.com/dashevo/insight-api"
msgstr "https://github.com/dashevo/insight-api"

#: ../../developers/integration.rst:275
msgid ""
"The open-source Insight REST API provides you with a convenient, powerful "
"and simple way to read data from the Dash network and build your own "
"services with it. A practical guide to getting started with the Insight API "
"and Insight UI block explorer is available :ref:`here <insight-api>`."
msgstr ""
"L'API REST Insight open source fornisce un modo comodo, potente e semplice "
"per leggere i dati dalla rete Dash e creare i propri servizi con essa. È "
"disponibile una guida pratica per iniziare con l'API Insight e il block "
"explorer dell'interfaccia utente di Insight: ref: `qui <insight-api>`."

#: ../../developers/integration.rst:281
msgid "Features: Transaction Broadcast, WebSocket Notifications."
msgstr "Caratteristiche: Transaction Broadcast, WebSocket Notifications."

#: ../../developers/integration.rst:282
msgid "Pricing Model: Free / Open Source"
msgstr "Modello di prezzo: gratuito / open source"

#: ../../developers/integration.rst:283
msgid "Documentation: https://github.com/dashevo/insight-api"
msgstr "Documentazione: https://github.com/dashevo/insight-api"

#: ../../developers/integration.rst:287 ../../developers/integration.rst:561
msgid "BlockCypher"
msgstr "BlockCypher"

#: ../../developers/integration.rst:294 ../../developers/integration.rst:568
msgid "https://www.blockcypher.com"
msgstr "https://www.blockcypher.com"

#: ../../developers/integration.rst:296
msgid ""
"BlockCypher is a simple, mostly RESTful JSON API for interacting with "
"blockchains, accessed over HTTP or HTTPS from the api.blockcypher.com "
"domain."
msgstr ""
"BlockCypher è un'API JSON semplice, principalmente RESTful per l'interazione"
" con blockchain, accessibile tramite HTTP o HTTPS dal dominio "
"api.blockcypher.com"

#: ../../developers/integration.rst:300
msgid ""
"Features: Transaction Broadcast, HD Wallet / Address Generation, WebSocket "
"and WebHook Callbacks as well as Payment Forwarding. BlockCypher does not "
"handle Private Keys."
msgstr ""
"Caratteristiche: trasmissione di transazioni, portafogli HD/ generazione di "
"indirizzi, callback WebSocket e WebHook e inoltro di pagamenti. BlockCypher "
"non gestisce le chiavi private."

#: ../../developers/integration.rst:303
msgid ""
"Pricing Model: Per API Call, 5000 Requests -> $85.00 per month "
"(https://accounts.blockcypher.com)"
msgstr ""

#: ../../developers/integration.rst:305
msgid "Documentation: https://www.blockcypher.com/dev/dash/"
msgstr "Documentazione: https://www.blockcypher.com/dev/dash/"

#: ../../developers/integration.rst:309
msgid "BitGo"
msgstr "BitGo"

#: ../../developers/integration.rst:316
msgid "https://www.bitgo.com"
msgstr "https://www.bitgo.com"

#: ../../developers/integration.rst:318
msgid ""
"BitGo provides a simple and robust RESTful API and client SDK to integrate "
"digital currency wallets with your application. Support for Dash InstantSend"
" is available."
msgstr ""
"BitGo fornisce un'API RESTful semplice e robusta e un SDK client per "
"integrare i portafogli di valuta digitale con la tua applicazione. È "
"disponibile il supporto per Dash InstantSend."

#: ../../developers/integration.rst:322
msgid ""
"Features: Multi-Signature HD Wallets, Wallet Operations, WebSocket and "
"WebHook Notifications, Custody Solutions"
msgstr ""
"Caratteristiche: portafogli HD multi-firma, operazioni di portafoglio, "
"notifiche WebSocket e WebHook, soluzioni di custodia"

#: ../../developers/integration.rst:324
msgid "Pricing Model: Per API Call"
msgstr "Modello di prezzo: per API Call"

#: ../../developers/integration.rst:325
msgid "Documentation: https://app.bitgo.com/docs/"
msgstr ""

#: ../../developers/integration.rst:328
msgid "ChainRider"
msgstr "ChainRider"

#: ../../developers/integration.rst:335
msgid "https://www.chainrider.io"
msgstr "https://www.chainrider.io"

#: ../../developers/integration.rst:337
msgid ""
"ChainRider is a cloud service providing a set of REST APIs for digital "
"currency management and exploration."
msgstr ""
"ChainRider è un servizio cloud che fornisce una serie di API REST per la "
"gestione e l'esplorazione della valuta digitale."

#: ../../developers/integration.rst:340
msgid ""
"Features: Blockchain queries, Event Notifications, Transaction Broadcast, "
"Payment Processing, etc."
msgstr ""
"Caratteristiche: query Blockchain, notifiche di eventi, trasmissione di "
"transazioni, elaborazione dei pagamenti, ecc."

#: ../../developers/integration.rst:342
msgid "Pricing Model: Free trial, pay per API call"
msgstr "Modello di prezzo: prova gratuita, pagamento API call"

#: ../../developers/integration.rst:343
msgid "Documentation: https://www.chainrider.io/docs/dash/"
msgstr ""

#: ../../developers/integration.rst:347
msgid "Blockmove"
msgstr "Blockmove"

#: ../../developers/integration.rst:354
msgid "https://blockmove.io"
msgstr "https://blockmove.io"

#: ../../developers/integration.rst:356
msgid ""
"Сryptocurrency wallet, merchant & API provider. Blockmove is a simple and "
"easy way to start accepting payments in cryptocurrency."
msgstr ""
"Portafoglio criptovaluta, commerciante e provider API. Blockmove è un modo "
"semplice e facile per iniziare ad accettare pagamenti in criptovaluta."

#: ../../developers/integration.rst:359
msgid ""
"Features: Non-custodial wallet, HD Wallet, High anonymity, Low fees. Private"
" keys are not stored and are available only to the user."
msgstr ""
"Caratteristiche: portafoglio non custodito, portafoglio HD, elevato "
"anonimato, commissioni basse. Le chiavi private non vengono memorizzate e "
"sono disponibili solo per l'utente."

#: ../../developers/integration.rst:361
msgid ""
"Pricing Model: API - 0.3% for withdrawal transactions. Merchant - 1 year "
"free, then $49/month"
msgstr ""
"Modello di prezzo: API - 0,3% per le transazioni di prelievo. Commerciante -"
" 1 anno gratuito, poi $ 49 / mese"

#: ../../developers/integration.rst:363
msgid "Documentation: https://docs.blockmove.io"
msgstr "Documentazione: https://docs.blockmove.io"

#: ../../developers/integration.rst:367
msgid "NOWNodes"
msgstr "NOWNodes"

#: ../../developers/integration.rst:374
msgid "https://nownodes.io/"
msgstr "https://nownodes.io/"

#: ../../developers/integration.rst:376
msgid ""
"NOWNodes provides simple, fast, and secure RPC access to Dash-based full "
"nodes. The low latency and high performance is of great use to researchers "
"and businesses such as crypto miners or hardware wallet providers."
msgstr ""

#: ../../developers/integration.rst:381
msgid "Features: All Dash RPC commands"
msgstr "Caratteristiche: tutti i comandi Dash RPC"

#: ../../developers/integration.rst:382
msgid "Pricing Model: Free up to 20k requests, Pricing tiers"
msgstr ""

#: ../../developers/integration.rst:383
msgid "Documentation: https://nownodes.io/documentation"
msgstr "Documentazione: https://nownodes.io/documentation"

#: ../../developers/integration.rst:387
msgid "CoinPayments"
msgstr "CoinPayments"

#: ../../developers/integration.rst:394
msgid "https://www.coinpayments.net"
msgstr "https://www.coinpayments.net"

#: ../../developers/integration.rst:396
msgid ""
"CoinPayments is an integrated payment gateway for cryptocurrencies such as "
"Dash. Shopping cart plugins are available for all popular webcarts used "
"today. CoinPayments can help you set up a new checkout or integrate with "
"your pre-existing checkout."
msgstr ""

#: ../../developers/integration.rst:401
msgid ""
"Features: Invoicing, Exchange Rates, WebHook Callbacks. CoinPayments holds "
"Private Keys on their server allowing merchants to withdraw funds in "
"Cryptocurrency or convert to fiat."
msgstr ""

#: ../../developers/integration.rst:404
msgid ""
"Integrations: aMember Pro, Arastta, Blesta, BoxBilling, Drupal, Ecwid, "
"Hikashop, Magento, OpenCart, OSCommerce, PrestaShop, Tomato Cart, "
"WooCommerce, Ubercart, XCart, ZenCart"
msgstr ""
"Integrazioni: aMember Pro, Arastta, Blesta, BoxBilling, Drupal, Ecwid, "
"Hikashop, Magento, OpenCart, OSCommerce, PrestaShop, Tomato Cart, "
"WooCommerce, Ubercart, XCart, ZenCart"

#: ../../developers/integration.rst:407
msgid ""
"Pricing Model: 0.5% Processing Fee (https://www.coinpayments.net/help-fees)"
msgstr ""
"Modello di prezzo: 0.5% tassa di elaborazione "
"(https://www.coinpayments.net/help-fees)"

#: ../../developers/integration.rst:409
msgid "Documentation: https://www.coinpayments.net/apidoc"
msgstr "Documentazione: https://www.coinpayments.net/apidoc"

#: ../../developers/integration.rst:415
msgid "SDK Resources"
msgstr "Risorse SDK"

#: ../../developers/integration.rst:417
msgid ""
"SDKs (Software Development Kits) are used to accelerate the design and "
"development of a product for the Dash Network. These resources can either be"
" used to interface with an API provider or for the creation of standalone "
"applications by forming transactions and/or performing various wallet "
"functions."
msgstr ""

#: ../../developers/integration.rst:425
msgid "Dash Developer Guide"
msgstr "Guida per sviluppatori Dash"

#: ../../developers/integration.rst:432
msgid "https://dashcore.readme.io/"
msgstr "https://dashcore.readme.io/"

#: ../../developers/integration.rst:434
msgid ""
"The Dash Developer Portal aims to provide the information you need to "
"understand Dash and start building Dash-based applications. To make the best"
" use of this documentation, you may want to install the current version of "
"Dash Core and Dash Platform, either from source, from a pre-compiled "
"executable or from Docker Hub."
msgstr ""

#: ../../developers/integration.rst:440
msgid "Dash Core: https://dashcore.readme.io/"
msgstr "Dash Core: https://dashcore.readme.io/"

#: ../../developers/integration.rst:441
msgid "Dash Platform: https://dashplatform.readme.io/"
msgstr "Dash Platform: https://dashplatform.readme.io/"

#: ../../developers/integration.rst:444
msgid "NodeJS/JavaScript: Dashcore"
msgstr "NodeJS/JavaScript: Dashcore"

#: ../../developers/integration.rst:451
msgid "https://bitcore.io"
msgstr "https://bitcore.io"

#: ../../developers/integration.rst:453
msgid ""
"Dashcore is a fork of Bitcore and operates as a full Dash node — your apps "
"run directly on the peer-to-peer network. For wallet application "
"development, additional indexes have been added into Dash for querying "
"address balances, transaction history, and unspent outputs."
msgstr ""

#: ../../developers/integration.rst:458 ../../developers/integration.rst:471
msgid "Platform: NodeJS / Javascript"
msgstr ""

#: ../../developers/integration.rst:459
msgid ""
"Documentation: https://github.com/dashevo/dashcore-"
"lib/blob/master/README.md#documentation"
msgstr ""

#: ../../developers/integration.rst:460
msgid "Repository lib: https://github.com/dashevo/dashcore-lib"
msgstr ""

#: ../../developers/integration.rst:461
msgid "Repository node: https://github.com/dashevo/dashcore-node"
msgstr ""

#: ../../developers/integration.rst:462
msgid "See also: `Insight API <https://github.com/dashevo/insight-api>`__"
msgstr ""

#: ../../developers/integration.rst:465
msgid "NodeJS/JavaScript: DashJS"
msgstr ""

#: ../../developers/integration.rst:467
msgid ""
"DashJS allows you to transact on L1 or fetch/register documents on L2 within"
" a single library, including management and signing of your documents."
msgstr ""

#: ../../developers/integration.rst:472
msgid "Documentation: https://dashevo.github.io/js-dash-sdk/"
msgstr ""

#: ../../developers/integration.rst:473
msgid "Repository: https://github.com/dashevo/js-dash-sdk"
msgstr ""

#: ../../developers/integration.rst:476
msgid "PHP: Bitcoin-PHP"
msgstr ""

#: ../../developers/integration.rst:478
msgid "https://github.com/Bit-Wasp/bitcoin-php"
msgstr ""

#: ../../developers/integration.rst:480
msgid ""
"Bitcoin-PHP is an implementation of Bitcoin with support for Dash using "
"mostly pure PHP."
msgstr ""

#: ../../developers/integration.rst:483
msgid "Platform: PHP"
msgstr ""

#: ../../developers/integration.rst:484
msgid ""
"Documentation: https://github.com/Bit-Wasp/bitcoin-"
"php/blob/1.0/doc/documentation/Introduction.md"
msgstr ""

#: ../../developers/integration.rst:485
msgid "Repository: https://github.com/snogcel/bitcoin-php"
msgstr ""

#: ../../developers/integration.rst:488
msgid "Python: PyCoin"
msgstr ""

#: ../../developers/integration.rst:490
msgid "https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../developers/integration.rst:492
msgid ""
"PyCoin is an implementation of a bunch of utility routines that may be "
"useful when dealing with Bitcoin and Dash. It has been tested with Python "
"2.7, 3.6 and 3.7."
msgstr ""

#: ../../developers/integration.rst:496
msgid "Platform: Python"
msgstr ""

#: ../../developers/integration.rst:497
msgid "Documentation: https://pycoin.readthedocs.io/en/latest/"
msgstr ""

#: ../../developers/integration.rst:498
msgid "Repository: https://github.com/richardkiss/pycoin"
msgstr ""

#: ../../developers/integration.rst:499
msgid ""
"See also: `JSON-RPC Utilities <https://github.com/DeltaEngine/python-"
"dashrpc>`__"
msgstr ""

#: ../../developers/integration.rst:502
msgid "Java: DashJ"
msgstr ""

#: ../../developers/integration.rst:509
msgid "https://github.com/dashevo/dashj"
msgstr ""

#: ../../developers/integration.rst:511
msgid ""
"DashJ is a library for working with the Dash protocol. It can maintain a "
"wallet, send/receive transactions (including InstantSend) without needing a "
"local copy of Dash Core, and has many other advanced features. It's "
"implemented in Java but can be used from any JVM compatible language: "
"examples in Python and JavaScript are included."
msgstr ""

#: ../../developers/integration.rst:517
msgid "Platform: Java"
msgstr ""

#: ../../developers/integration.rst:518
msgid "Documentation: https://bitcoinj.org/getting-started"
msgstr ""

#: ../../developers/integration.rst:519
msgid "Repository: https://github.com/dashevo/dashj"
msgstr ""

#: ../../developers/integration.rst:520
msgid "Example application: https://github.com/tomasz-ludek/pocket-of-dash"
msgstr ""

#: ../../developers/integration.rst:523
msgid "Objective-C: Dash-Sync"
msgstr ""

#: ../../developers/integration.rst:530
msgid "https://github.com/dashevo/dashsync-iOS"
msgstr ""

#: ../../developers/integration.rst:532
msgid ""
"Dash-Sync is an Objective-C Dash blockchain framework for iOS. It implements"
" all most relevant Bitcoin Improvement Proposals (BIPs) and Dash Improvement"
" Proposals (DIPs)."
msgstr ""

#: ../../developers/integration.rst:536
msgid "Platform: iOS"
msgstr ""

#: ../../developers/integration.rst:537
msgid "Repository: https://github.com/dashevo/dashsync-iOS"
msgstr ""

#: ../../developers/integration.rst:540
msgid ".NET: NBitcoin"
msgstr ""

#: ../../developers/integration.rst:547
msgid "https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../developers/integration.rst:549
msgid ""
"NBitcoin is the most complete Bitcoin library for the .NET platform and has "
"been patched to include support for Dash. It implements all most relevant "
"Bitcoin Improvement Proposals (BIPs) and Dash Improvement Proposals (DIPs). "
"It also provides low level access to Dash primitives so you can easily build"
" your application on top of it."
msgstr ""

#: ../../developers/integration.rst:555
msgid "Platform: .NET"
msgstr ""

#: ../../developers/integration.rst:556
msgid ""
"Documentation: "
"https://programmingblockchain.gitbook.io/programmingblockchain/"
msgstr ""

#: ../../developers/integration.rst:557
msgid "Repository: https://github.com/MetacoSA/NBitcoin"
msgstr ""

#: ../../developers/integration.rst:558
msgid ""
"See also: `JSON-RPC Utilities <https://github.com/cryptean/bitcoinlib>`__"
msgstr ""

#: ../../developers/integration.rst:570
msgid "BlockCypher also offers client SDKs."
msgstr ""

#: ../../developers/integration.rst:572
msgid "Platform: Ruby, Python, Java, PHP, Go, NodeJS"
msgstr ""

#: ../../developers/integration.rst:573
msgid ""
"Repositories: https://www.blockcypher.com/dev/dash/#blockcypher-supported-"
"language-sdks"
msgstr ""

#: ../../developers/integration.rst:577
msgid "Vending Machines"
msgstr ""

#: ../../developers/integration.rst:579
msgid ""
"Community member moocowmoo has released code to help merchants build their "
"own vending machine and set it up to receive Dash InstantSend payments. The "
"Dashvend software can also be used to create any sort of payment system, "
"including point-of-sale systems that can accept InstantSend payments."
msgstr ""

#: ../../developers/integration.rst:585
msgid "`Open Source Code <https://github.com/moocowmoo/dashvend>`_"
msgstr ""

#: ../../developers/integration.rst:586
msgid "`Demonstration video <https://www.youtube.com/watch?v=SX-3kwbam0o>`_"
msgstr ""

#: ../../developers/integration.rst:590
msgid "Price Tickers"
msgstr ""

#: ../../developers/integration.rst:592
msgid ""
"You can add a simple price ticker widget to your website using the simple "
"`code snippet generator from CoinGecko "
"<https://www.coingecko.com/en/widgets/coin_ticker_widget>`_."
msgstr ""

#: ../../developers/integration.rst:602
msgid ""
"Similar widgets with different designs are available from `CoinLib "
"<https://coinlib.io/widgets>`_, `WorldCoinIndex "
"<https://www.worldcoinindex.com/Widget>`_ and `Cryptonator "
"<https://www.cryptonator.com/widget>`_, while an API providing similar "
"information is available from `DashCentral "
"<https://www.dashcentral.org/about/api>`_."
msgstr ""

#: ../../developers/integration.rst:610
msgid "QR Codes"
msgstr ""

#: ../../developers/integration.rst:612
msgid ""
"Many wallets can generate QR codes that are scannable to simplify entry of "
"the Dash address. Printing these codes or posting the on your website makes "
"it easy to receive payment and tips in Dash, both online and offline."
msgstr ""

#: ../../developers/integration.rst:617
msgid ""
"In Dash Core, go to the **Receive** tab, generate an address if necessary, "
"and double-click it to display a QR code. Right-click on the QR code and "
"select **Save Image** to save a PNG file."
msgstr ""

#: ../../developers/integration.rst:620
msgid ""
"In Dash for Android, tap **Request Coins** and then tap the QR code to "
"display a larger image. You can screenshot this to save an image."
msgstr ""

#: ../../developers/integration.rst:622
msgid ""
"In Dash for iOS, swipe to the left to display the **Receive Dash** screen. A"
" QR code and address will appear. You can screenshot this to save an image."
msgstr ""

#: ../../developers/integration.rst:625
msgid ""
"To generate a QR code from any Dash address, visit `CWA QR Code Generator "
"<https://cwaqrgen.com/dash>`_ and simply paste your Dash address to generate"
" an image."
msgstr ""
