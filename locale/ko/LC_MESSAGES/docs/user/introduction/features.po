# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Dash Core Group, Inc
# This file is distributed under the same license as the Dash package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Leon White <leon.white@dash.org>, 2022
# Yujin Joe <chichimakko@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dash latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-29 09:56-0500\n"
"PO-Revision-Date: 2022-12-27 18:55+0000\n"
"Last-Translator: Yujin Joe <chichimakko@gmail.com>, 2024\n"
"Language-Team: Korean (https://app.transifex.com/dash/teams/37570/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../docs/user/introduction/features.rst-1
msgid ""
"Dash features several unique value propositions including masternodes, "
"CoinJoin, InstantSend and a decentralized governance system"
msgstr ""

#: ../../docs/user/introduction/features.rst-1
msgid ""
"dash, cryptocurrency, features, masternodes, coinjoin, privatesend, "
"instantsend, sporks, x11, dgw, governance, sentinel, evolution"
msgstr ""

#: ../../docs/user/introduction/features.rst:9
msgid "Features"
msgstr "기능"

#: ../../docs/user/introduction/features.rst:14
msgid "Specifications"
msgstr "사양"

#: ../../docs/user/introduction/features.rst:16
msgid "First block mined at 11PM EST, 18th January 2014"
msgstr "2014년 1월 18일 오후 11시(EST)에 첫 블록이 채굴됨"

#: ../../docs/user/introduction/features.rst:17
msgid "No premine"
msgstr "사전 채굴 해당 없음"

#: ../../docs/user/introduction/features.rst:18
msgid "X11 hashing algorithm, CPU/GPU/ASIC mining available"
msgstr "X11 해싱 알고리즘, CPU/GPU/ASIC 채굴 가능"

#: ../../docs/user/introduction/features.rst:19
msgid "2.6 minute block time, 2MB blocks, ~56 transactions per second"
msgstr "블록 간격 2.6분, 블록 크기 2MB, 초당 ~56회 거래 처리"

#: ../../docs/user/introduction/features.rst:20
msgid "Block subsidy decreases by 7.14% per year"
msgstr ""

#: ../../docs/user/introduction/features.rst:21
msgid "Dark Gravity Wave difficulty adjustment algorithm"
msgstr "Dark Difficulty Wave 난이도 조정 알고리즘"

#: ../../docs/user/introduction/features.rst:22
msgid "Between 17.74M and 18.92M total coin supply"
msgstr "총 코인 공급량 1,774만~1,892만개 사이"

#: ../../docs/user/introduction/features.rst:23
msgid "Decentralized second-tier masternode network"
msgstr "분산화된 2계층 마스터노드 네트워크"

#: ../../docs/user/introduction/features.rst:24
msgid "Superior privacy using CoinJoin"
msgstr ""

#: ../../docs/user/introduction/features.rst:25
msgid "Instant transactions using InstantSend"
msgstr "인스턴트샌드를 이용한 즉각적인 거래"

#: ../../docs/user/introduction/features.rst:26
msgid ""
"Protection against blockchain reorganization events (commonly called 51% "
"attacks) using ChainLocks"
msgstr ""

#: ../../docs/user/introduction/features.rst:28
msgid ""
"Decentralized Governance By Blockchain allows masternode owners to vote on "
"budget proposals and decisions that affect Dash"
msgstr "블록체인에 의한 분산화된 거버넌스를 통해 마스터노드 소유자가 예산 제안서와 대시에 영향을 미치는 결정에 투표를 진행"

#: ../../docs/user/introduction/features.rst:35
msgid "Masternodes"
msgstr "마스터노드(Masternodes)"

#: ../../docs/user/introduction/features.rst:37
msgid ""
"In addition to traditional Proof of Work (PoW) rewards for mining Dash, "
"users are also rewarded for running and maintaining special servers called "
"masternodes. Thanks to this innovative two tier network, Dash can offer "
"innovative features in a trustless and decentralized way. Masternodes are "
"used to power CoinJoin, InstantSend, and the governance and treasury system."
" Users are rewarded for running masternodes; a percentage of the block "
"reward is allocated to pay the masternode network. The current percentage "
"can be found in :ref:`this table <block-reward-reallocation>`. You can view "
"practical guides on all topics relating to masternodes :ref:`here "
"<masternodes>`."
msgstr ""

#: ../../docs/user/introduction/features.rst:48
msgid "Masternodes enable the following services:"
msgstr "마스터노드는 다음의 서비스에 활용됩니다."

#: ../../docs/user/introduction/features.rst:50
msgid ""
"**InstantSend** allows for near-instant transactions. Dash InstantSend "
"transactions are fully confirmed within two seconds."
msgstr "**인스턴트샌드** 를 통해 즉각적인 거래가 가능합니다. 대시 인스턴트샌드 거래는 2초 내에 완전한 확인이 가능합니다."

#: ../../docs/user/introduction/features.rst:52
msgid ""
"**CoinJoin** gives financial privacy through a decentralized implementation "
"of CoinJoin."
msgstr ""

#: ../../docs/user/introduction/features.rst:54
msgid ""
"**ChainLocks**, which protects the blockchain against 51% mining attacks by "
"signing blocks as they are mined."
msgstr ""

#: ../../docs/user/introduction/features.rst:56
msgid ""
"**Governance and Treasury** allows stakeholders in Dash to determine the "
"direction of the project and devotes 20% of the block subsidy to development"
" of the project and ecosystem."
msgstr ""

#: ../../docs/user/introduction/features.rst:59
msgid ""
"**Dash Evolution** will make using cryptocurrency as easy as using PayPal."
msgstr ""

#: ../../docs/user/introduction/features.rst:62
msgid ""
"Masternode owners must have possession of 1000 DASH, which they prove by "
"signing a message included in a special transaction written to the "
"blockchain. The Dash can be moved or spent at any time, but doing so will "
"cause the masternode to fall out of queue and stop earning rewards. "
"Masternode users are also given **voting rights** on proposals. Each "
"masternode has one vote and this vote can be used on budget proposals or "
"important decisions that affect Dash."
msgstr ""

#: ../../docs/user/introduction/features.rst:70
msgid ""
"Masternodes cost money and effort to host so they are paid a percentage of "
"the block reward as an incentive. Because only one masternode is paid in "
"each block, the frequency of the payment can vary, as well as the value of "
"the Dash paid out. This `tool <https://stats.masternode.me/>`_ shows a live "
"calculation of masternode earnings. These rewards decrease by 7% each year, "
"together with the block subsidy. There is also the possibility for "
"masternodes to earn money from fees in the future."
msgstr ""

#: ../../docs/user/introduction/features.rst:79
msgid "Evolution Masternodes (evonodes)"
msgstr ""

#: ../../docs/user/introduction/features.rst:81
msgid ""
"Evolution Masternodes (evonodes) are a subset of Masternodes that have been "
"created to host the Dash Platform. An evonode is a lot like Masternodes with"
" these differences:"
msgstr ""

#: ../../docs/user/introduction/features.rst:86
msgid "Masternode"
msgstr ""

#: ../../docs/user/introduction/features.rst:86
msgid "Evolution Masternode"
msgstr ""

#: ../../docs/user/introduction/features.rst:88
msgid "Collateral"
msgstr ""

#: ../../docs/user/introduction/features.rst:88
msgid "1000 DASH"
msgstr ""

#: ../../docs/user/introduction/features.rst:88
msgid "4000 DASH (4X the collateral for normal masternodes)"
msgstr ""

#: ../../docs/user/introduction/features.rst:90
msgid "Specs"
msgstr ""

#: ../../docs/user/introduction/features.rst:90
msgid "Lesser than evonodes"
msgstr ""

#: ../../docs/user/introduction/features.rst:90
msgid "Higher than normal masternodes"
msgstr ""

#: ../../docs/user/introduction/features.rst:92
msgid "Service"
msgstr ""

#: ../../docs/user/introduction/features.rst:92
msgid "Only Dash Core"
msgstr ""

#: ../../docs/user/introduction/features.rst:92
msgid "Both Dash Core and Platform"
msgstr ""

#: ../../docs/user/introduction/features.rst:94
msgid "Voting Weight"
msgstr ""

#: ../../docs/user/introduction/features.rst:94
msgid "1 node gets 1 vote"
msgstr ""

#: ../../docs/user/introduction/features.rst:94
msgid "Has 4 times the voting power of a normal masternode"
msgstr ""

#: ../../docs/user/introduction/features.rst:101
#: ../../docs/user/introduction/features.rst:654
msgid "CoinJoin"
msgstr ""

#: ../../docs/user/introduction/features.rst:103
msgid ""
"CoinJoin gives you consumer grade financial privacy by shuffling your Dash "
"with other users. All the Dash in your wallet consists of different inputs, "
"which you can think of as separate, discrete coins. It uses an innovative "
"process to join your inputs with the inputs of at least two other people in "
"a single transaction, so the value in Dash never leaves your wallet. You "
"retain control of your money at all times."
msgstr ""

#: ../../docs/user/introduction/features.rst:111
msgid ""
"You can view a practical guide to use CoinJoin :ref:`here <dashcore-"
"coinjoin-instantsend>`."
msgstr ""

#: ../../docs/user/introduction/features.rst:114
msgid "The CoinJoin process works like this:"
msgstr ""

#: ../../docs/user/introduction/features.rst:116
msgid ""
"CoinJoin begins by breaking your transaction inputs down into standard "
"denominations. These denominations are 0.001, 0.01, 0.1, 1 and 10 Dash -- "
"much like the paper money you use every day."
msgstr ""

#: ../../docs/user/introduction/features.rst:119
msgid ""
"Your wallet then sends requests to specially configured software nodes on "
"the network called masternodes. These masternodes are informed then that you"
" are interested in creating a certain denomination using CoinJoin. No "
"identifiable information is sent to the masternodes, so they never know who "
"you are."
msgstr ""

#: ../../docs/user/introduction/features.rst:124
msgid ""
"When two other people send similar messages, indicating that they wish to "
"join coins of the same denomination, a session begins. The masternode "
"instructs all three users’ wallets to pay the now-transformed inputs to "
"themselves. Your wallet pays that denomination directly to itself but in a "
"different address (called a change address)."
msgstr ""

#: ../../docs/user/introduction/features.rst:130
msgid ""
"Your wallet can repeat this process a number of times with each "
"denomination. Each time the process is completed it’s called a \"round.\" "
"The user may choose between 2-16 rounds of CoinJoin."
msgstr ""

#: ../../docs/user/introduction/features.rst:133
msgid ""
"Your funds will pass through at least the number of rounds you specify. Dash"
" 0.16 includes an update known as `Random Round CoinJoin "
"<https://github.com/dashpay/dash/pull/3661>`__ which will join a given "
"denomination by up to three extra rounds to further improve privacy."
msgstr ""

#: ../../docs/user/introduction/features.rst:138
msgid ""
"This process happens in the background without any intervention on your "
"part. When you wish to make a transaction using your denominated funds no "
"additional waiting will be required."
msgstr ""

#: ../../docs/user/introduction/features.rst:142
msgid ""
"Note that CoinJoin transactions will be rounded up so that all transaction "
"inputs are spent. Any excess Dash will be spent on the transaction fee."
msgstr ""

#: ../../docs/user/introduction/features.rst:146
msgid ""
"**IMPORTANT:** Your wallet only contains 1000 of these change addresses. "
"Every time a CoinJoin transaction is created, one of your addresses is used "
"up. Once enough of them are used, your wallet must create more addresses. It"
" can only do this, however, if you have automatic backups enabled. "
"Consequently, users who have backups disabled will also have CoinJoin "
"disabled."
msgstr ""

#: ../../docs/user/introduction/features.rst:157
msgid "InstantSend"
msgstr "인스턴트샌드(InstantSend)"

#: ../../docs/user/introduction/features.rst:159
msgid ""
"Traditional decentralized cryptocurrencies must wait for certain period of "
"time for enough blocks to pass to ensure that a transaction is both "
"irreversible and not an attempt to double-spend money which has already been"
" spent elsewhere. This process is time-consuming, and may take anywhere from"
" 15 minutes to one hour for the widely accepted number of six blocks to "
"accumulate. Other cryptocurrencies achieve faster transaction confirmation "
"time by centralizing authority on the network to various degrees."
msgstr ""
"전통적으로 분산화된 암호화폐는 충분한 양의 블록이 통과하도록 일정 시간을 기다려야 합니다. 이로써 거래를 되돌릴 수 없으며, 다른 곳에서"
" 지출된 금액을 이중 지출 하지 않도록 확실히 할 수 있습니다. 이러한 과정에서 일반적으로 약 6개의 블록이 누적되며 시간은 15분에서 "
"1시간이 소요됩니다. 다른 암호화폐의 경우 이러한 거래 속도를 향상시키기 위해 네트워크 상에서 다양한 수준으로 중앙화된 권한을 "
"사용합니다."

#: ../../docs/user/introduction/features.rst:168
msgid ""
"Dash suffers from neither of these limitations thanks to its second-layer "
"network of masternodes. Masternodes regularly form voting quorums to check "
"whether or not a submitted transaction is valid. If it is valid, the "
"masternodes \"lock\" the inputs for the transaction and broadcast this "
"information to the network, effectively promising that the transaction will "
"be included in subsequently mined blocks and not allowing any other spending"
" of these inputs during the confirmation time period."
msgstr ""

#: ../../docs/user/introduction/features.rst:177
msgid ""
"InstantSend technology will allow for cryptocurrencies such as Dash to "
"compete with nearly instantaneous transaction systems such as credit cards "
"for point-of-sale situations while not relying on a centralized authority. "
"Widespread vendor acceptance of Dash and InstantSend could revolutionize "
"cryptocurrency by shortening the delay in confirmation of transactions from "
"as long as an hour (with Bitcoin) to as little as a few seconds."
msgstr ""
"인스턴트샌드 기술은 대시와 같은 암호화폐가 중앙화된 권력에 의지하지 않고도 POS(Point-on-Sale)가 필요한 환경에서 사용되도록"
" 신용카드와 같이 거의 즉각적인 거래 시스템을 구축할 수 있도록 도와줍니다. 대시와 인스턴트샌드를 수락하는 다양한 판매자들은 "
"(비트코인처럼) 한 시간 가까이 지속될 수 있는 거래 확인 시간을 수 초로 줄임으로써 암호화폐를 혁명적으로 사용할 수 있습니다."

#: ../../docs/user/introduction/features.rst:185
msgid ""
"You can view a practical guide to use InstantSend :ref:`here <dashcore-"
"coinjoin-instantsend>`. InstantSend was introduced in a whitepaper called "
"`Transaction Locking and Masternode Consensus: A Mechanism for Mitigating "
"Double Spending Attacks "
"<https://github.com/dashpay/docs/blob/master/binary/Dash%20Whitepaper%20-%20Transaction%20Locking%20and%20Masternode%20Consensus.pdf>`_,"
" and further improved through the introduction of `LLMQ-based InstantSend "
"<https://github.com/dashpay/dips/blob/master/dip-0010.md>`__ in Dash 0.14."
msgstr ""

#: ../../docs/user/introduction/features.rst:194
msgid ""
"**How Dash 'InstantSend' Protects Merchants from Double Spends**, Dash "
"Detailed by Amanda B. Johnson, 16 September 2016"
msgstr ""
"**대시 '인스턴트샌드'가 어떻게 이중 지출로부터 판매자들을 보호하는가**, 대시 디테일드 by 아만다 B. 존슨, 2016년 9월 "
"16일"

#: ../../docs/user/introduction/features.rst:207
msgid "ChainLocks"
msgstr ""

#: ../../docs/user/introduction/features.rst:209
msgid ""
"ChainLocks are a feature provided by the Dash Network which provides "
"certainty when accepting payments. This technology, particularly when used "
"in parallel with :ref:`InstantSend <instantsend>`, creates an environment in"
" which payments can be accepted immediately and without the risk of "
"“Blockchain Reorganization Events”."
msgstr ""

#: ../../docs/user/introduction/features.rst:215
msgid ""
"The risk of blockchain reorganization is typically addressed by requiring "
"multiple “confirmations” before a transaction can be safely accepted as "
"payment. This type of indirect security is effective, but at a cost of time "
"and user experience. ChainLocks are a solution for this problem."
msgstr ""

#: ../../docs/user/introduction/features.rst:222
msgid "ChainLocks Process Overview"
msgstr ""

#: ../../docs/user/introduction/features.rst:224
msgid ""
"Every twelve hours a new “LLMQ” (Long-Living Masternode Quorum) is formed "
"using a “DKG” (Distributed Key Generation) process. All members of this "
"Quorum are responsible for observing, and subsequently affirming, newly "
"mined blocks:"
msgstr ""

#: ../../docs/user/introduction/features.rst:229
msgid ""
"Whenever a block is mined, Quorum Members will broadcast a signed message "
"containing the observed block to the rest of the Quorum."
msgstr ""

#: ../../docs/user/introduction/features.rst:232
msgid ""
"If 60% or more of the Quorum sees the same new block they will collectively "
"form a “CLSIG” (ChainLock Signature) message which will be broadcast to the "
"remainder of the network."
msgstr ""

#: ../../docs/user/introduction/features.rst:236
msgid ""
"When a valid ChainLock Signature is received by a client on the network, it "
"will reject all blocks at the same height that do not match the block "
"specified in that message."
msgstr ""

#: ../../docs/user/introduction/features.rst:240
msgid ""
"The result is a quick and unambiguous decision on the “correct” blockchain "
"for integrated clients and wallets. From a security perspective, this also "
"makes reorganizations prior to this block impossible. See `DIP0008 "
"ChainLocks <https://github.com/dashpay/dips/blob/master/dip-0008.md>`__ for "
"a full description of how ChainLocks work."
msgstr ""

#: ../../docs/user/introduction/features.rst:250
msgid "Sporks"
msgstr "스포크(Sporks)"

#: ../../docs/user/introduction/features.rst:252
msgid ""
"In response to unforeseen issues with the rollout of the major \"RC3\" "
"update in June 2014, the Dash development team created a mechanism by which "
"updated code is released to the network, but not immediately made active "
"(\"enforced\"). This innovation allows for far smoother transitions than in "
"the traditional hard fork paradigm, as well as the collection of test data "
"in the live network environment. This process of multi-phased forking was "
"originally to be called \"soft forking\" but the community affectionately "
"dubbed it \"the spork\" and the name stuck."
msgstr ""

#: ../../docs/user/introduction/features.rst:261
msgid ""
"New features or versions of Dash undergo extensive testing on testnet before"
" they are released to the main network. When a new feature or version of "
"Dash is released on mainnet, communication is sent out to users informing "
"them of the change and the need for them to update their clients. Those who "
"update their clients run the new code, but it is not activated until a "
"sufficient percentage of network participants (usually 80%) reach consensus "
"on running it. In the event of errors occurring with the new code, the "
"client’s blocks are not rejected by the network and unintended forks are "
"avoided. Data about the error can then be collected and forwarded to the "
"development team. Once the development team is satisfied with the new code’s"
" stability in the mainnet environment – and once acceptable network "
"consensus is attained – enforcement of the updated code can be activated "
"remotely by multiple members of the core development team signing a network "
"message together with their respective private keys. Should problems arise, "
"the code can be deactivated in the same manner, without the need for a "
"network-wide rollback or client update. For technical details on individual "
"sporks, see :ref:`here <understanding-sporks>`."
msgstr ""

#: ../../docs/user/introduction/features.rst:284
msgid "X11 Hash Algorithm"
msgstr "X11 해시 알고리즘(X11 Hash Algorithm)"

#: ../../docs/user/introduction/features.rst:286
msgid ""
"X11 is a widely used hashing algorithm created by Dash core developer Evan "
"Duffield. X11’s chained hashing algorithm utilizes a sequence of eleven "
"scientific hashing algorithms for the proof-of-work. This is so that the "
"processing distribution is fair and coins will be distributed in much the "
"same way Bitcoin’s were originally. X11 was intended to make ASICs much more"
" difficult to create, thus giving the currency plenty of time to develop "
"before mining centralization became a threat. This approach was largely "
"successful; as of early 2016, ASICs for X11 now exist and comprise a "
"significant portion of the network hashrate, but have not resulted in the "
"level of centralization present in Bitcoin. Information on mining with X11 "
"can be found in the :ref:`Mining <mining>` section of this documentation."
msgstr ""
"X11은 대시 코어 개발자인 에반 듀필드에 의해 만들어졌으며 널리 사용되는 해싱 알고리즘입니다. X11의 체인 해싱 알고리즘은 작업 "
"증명을 위한 11개의 과학적 해싱 알고리즘 시퀀스를 활용합니다. 이로써 분배 과정을 공정하게 처리하고 코인은 비트코인의 초기 방식에 보다"
" 가깝게 분배됩니다. X11은 대시용 ASIC을 만들기 어렵도록 설계되었으며, 이로써 중앙화된 채굴 방식이 위협적으로 변화할 때까지 "
"개발에 충분한 시간을 제공할 수 있습니다. 이 접근 방식은 크게 성공적이었습니다. 2016년 초 현재 X11용 ASIC이 존재하며 "
"네트워크 해시 레이트의 상당수를 차지하지만 비트코인에 나타나는 바와 같은 수준의 중앙화는 진행되지 않고 있습니다. X11 채굴에 관한 "
"정보는 이 문서의 :ref:`채굴 <mining>` 항목에서 확인하실 수 있습니다."

#: ../../docs/user/introduction/features.rst:299
msgid ""
"X11 is the name of the chained proof-of-work (**PoW**) algorithm that was "
"introduced in Dash (launched January 2014 as \"Xcoin\"). It was partially "
"inspired by the chained-hashing approach of Quark, adding further \"depth\" "
"and complexity by increasing the number of hashes, yet it differs from Quark"
" in that the rounds of hashes are determined *a priori* instead of having "
"some hashes being randomly picked."
msgstr ""

#: ../../docs/user/introduction/features.rst:306
msgid ""
"The X11 algorithm uses multiple rounds of 11 different hashes (blake, bmw, "
"groestl, jh, keccak, skein, luffa, cubehash, shavite, simd, echo), thus "
"making it one of the safest and more sophisticated cryptographic hashes in "
"use by modern cryptocurrencies. The name X11 is not related to the open "
"source X11 windowing system common on UNIX-like operating systems."
msgstr ""
"X11 알고리즘은 11개의 다양한 해시(blake, bmw, groestl, jh, keccak, skein, luffa, "
"cubehash, shavite, simd, echo)의 다중 라운드를 사용하며, 이로써 현대 암호화폐에서 사용되는 가장 안전하고 정교한"
" 암호학 해시 중 하나가 되었습니다. X11라는 이름은 UNIX와 같은 운영 시스템과 공통점을 가진 오픈 소스 X11 윈도우 시스템과는 "
"관련이 없습니다."

#: ../../docs/user/introduction/features.rst:314
msgid "Advantages of X11"
msgstr "X11의 장점"

#: ../../docs/user/introduction/features.rst:316
msgid ""
"The increased complexity and sophistication of the chained algorithm "
"provides enhanced levels of security and less uncertainty for a digital "
"currency, compared to single-hash PoW solutions that are not protected "
"against security risks like SPOF (Single Point Of Failure). For example, a "
"possible but not probable computing breakthrough that \"breaks\" the SHA256 "
"hash could jeopardize the entire Bitcoin network until the network shifts "
"through a hard fork to another cryptographic hash."
msgstr ""
"체인 알고리즘의 증가된 복잡성과 정교함은 SPOF(Single Point Of Failure)와 같은 보안 위험에 대한 보호를 제공하지 "
"않는 단일 해시 PoW와 비교할 때 향상된 보안을 제공하며 디지털 통화의 불확실성을 줄여줍니다. 예컨대, SHA256 해시를 '돌파'할 "
"가능성이 있으나 개연성이 없는 컴퓨팅 돌파구는 해당 네트워크가 또 다른 암호학적 해시로 하드포크 함으로써 전환되기 전 까지는 전체 "
"블록체인 네트워크를 위태롭게 할 수 있습니다."

#: ../../docs/user/introduction/features.rst:324
msgid ""
"In the event of a similar computing breakthrough, a digital currency using "
"the X11 PoW would continue to function securely unless all 11 hashes were "
"broken simultaneously. Even if some of the 11 hashes were to prove "
"unreliable, there would be adequate warning for a currency using X11 to take"
" measures and replace the problematic hashes with other more reliable "
"hashing algorithms."
msgstr ""
"유사한 컴퓨팅 돌파구가 발생하는 경우, 모든 열 한 개의 해시가 동시에 충돌하지 않는 한, X11 PoW를 사용하는 디지털 통화는 "
"계속해서 안전하게 작동합니다. 이들 열 한 개의 해시 중 일부를 신뢰할 수 없는 것으로 입증된 경우에도 X11을 사용하는 통화에 충분한 "
"경고를 제공하여 문제가 되는 해시를 측정하고 더욱 신뢰할 수 있는 해싱 알고리즘으로 교체할 수 있습니다."

#: ../../docs/user/introduction/features.rst:331
msgid ""
"Given the speculative nature of digital currencies and their inherent "
"uncertainties as a new field, the X11 algorithm can provide increased "
"confidence for its users and potential investors that single-hash approaches"
" cannot. Chained hashing solutions, like X11, provide increased safety and "
"longevity for store of wealth purposes, investment diversification and "
"hedging against risks associated with single-hash currencies plagued by SPOF"
" (Single Point Of Failure)."
msgstr ""
"디지털 통화의 투기적 성격 및 새로운 분야로서의 내재된 불확실성을 고려하면, X11 알고리즘은 사용자와 잠재적 투자자에게 단일 해시 "
"접근법이 보장하지 못하는 향상된 신뢰를 부여합니다. X11과 같은 체인 해싱 솔루션은 가치의 저장 및 투자 다양성 측면에서 보다 나은 "
"안전성과 지속성을 제공하며, SPOF(Single Point Of Failure)로 인해 어려움에 직면하는 단일 해시와 관련한 헤지 "
"위험성을 낮추어줍니다."

#: ../../docs/user/introduction/features.rst:339
msgid ""
"Evan Duffield, the creator of Dash and X11 chained-hash, has written on "
"several occasions that X11 was integrated into Dash not with the intention "
"to prevent ASIC manufacturers from creating ASICs for X11 in the future, but"
" rather to provide a similar migratory path that Bitcoin had (CPUs, GPUs, "
"ASICs)."
msgstr ""
"대시 및 X11 체인 해시를 만든 에반 듀필드는 비트코인이 걸었던 것과 유사한 이동로(CPUs, GPUs, ASICs)를 따르는 대신, "
"장래에 ASIC 제조사들이 X11을 위한 ASIC을 제조하는 것을 방해하지 않으면서도 X11을 대시에 통합하는 다양한 상황에 대해 기술한"
" 바 있습니다."

#: ../../docs/user/introduction/features.rst:349
msgid "Dark Gravity Wave"
msgstr "대시 그래비티 웨이브(Dark Gravity Wave)"

#: ../../docs/user/introduction/features.rst:351
msgid ""
"**DGW** or *Dark Gravity Wave* is an open source difficulty-adjusting "
"algorithm for Bitcoin-based cryptocurrencies that was first used in Dash and"
" has since appeared in other digital currencies. DGW was authored by Evan "
"Duffield, the developer and creator of Dash, as a response to a time-warp "
"exploit found in *Kimoto's Gravity Well*. In concept, DGW is similar to the "
"Kimoto Gravity Well, adjusting the difficulty levels every block (instead of"
" every 2016 blocks like Bitcoin) based on statistical data from recently "
"found blocks. This makes it possible to issue blocks with relatively "
"consistent times, even if the hashing power experiences high fluctuations, "
"without suffering from the time-warp exploit."
msgstr ""

#: ../../docs/user/introduction/features.rst:363
msgid ""
"Version 2.0 of DGW was implemented in Dash from block 45,000 onwards in "
"order to completely alleviate the time-warp exploit."
msgstr ""

#: ../../docs/user/introduction/features.rst:366
msgid ""
"Version 3.0 was implemented on May 14 of 2014 to further improve difficulty "
"re-targeting with smoother transitions. It also fixes issues with various "
"architectures that had different levels of floating-point accuracy through "
"the use of integers."
msgstr ""
"버전 3.0은 더 부드러운 전환을 거쳐 난이도 재조정을 향상시키기 위하여 2014년 5월 14일 구현되었습니다. 이는 또한 정수의 사용을"
" 통하여 다양한 레벨의 부동 소수점 정확성과 관련된 이슈를 개선합니다.  "

#: ../../docs/user/introduction/features.rst:375
msgid "Emission Rate"
msgstr "방출 비율"

#: ../../docs/user/introduction/features.rst:377
msgid ""
"Cryptocurrencies such as Dash and Bitcoin are created through a "
"cryptographically difficult process known as mining. Mining involves "
"repeatedly solving :ref:`hash algorithms <x11-hash-algorithm>` until a valid"
" solution for the current :ref:`mining difficulty <dark-gravity-wave>` is "
"discovered. Once discovered, the miner is permitted to create new units of "
"the currency. This is known as the block subsidy. To ensure that the "
"currency is not subject to endless inflation, the block subsidy is reduced "
"at regular intervals, as `shown in this calculation "
"<https://docs.google.com/spreadsheets/d/1HqgEkyfZDAA6pIZ3df2PwFE8Z430SVIzQ-"
"mCQ6wGCh4/edit#gid=523620673>`_. Graphing this data results in a curve "
"showing total coins in circulation, known as the coin emission rate."
msgstr ""

#: ../../docs/user/introduction/features.rst:390
msgid ""
"While Dash is based on Bitcoin, it significantly modifies the coin emission "
"rate to offer a smoother reduction in coin emission over time. While Bitcoin"
" reduces the coin emission rate by 50% every 4 years, Dash reduces the "
"emission by one-fourteenth (approx. 7.14%) every 210240 blocks (approx. "
"383.25 days). It can be seen that reducing the block subsidy by a smaller "
"amount each year offers a smoother transition to a fee-based economy than "
"Bitcoin."
msgstr ""

#: ../../docs/user/introduction/features.rst:401
msgid "Bitcoin vs. Dash coin emission rate"
msgstr "비트코인 vs. 대시 코인 방출 비율"

#: ../../docs/user/introduction/features.rst:405
msgid "Total coin emission"
msgstr "총 코인 방출"

#: ../../docs/user/introduction/features.rst:407
msgid ""
"`Bitcoin's total coin emission <https://docs.google.com/spreadsheets/d/1 "
"2tR_9WrY0Hj4AQLoJYj9EDBzfA38XIVLQSOOOVePNm0/pubhtml?gid=0&single=true>`_ can"
" be calculated as the sum of a geometric series, with the total emission "
"approaching (but never reaching) 21,000,000 BTC. This will continue until "
"2140, but the mining subsidy reduces so quickly that 99% of all bitcoin will"
" be in circulation by 2036, and 99.9% by 2048."
msgstr ""

#: ../../docs/user/introduction/features.rst:414
msgid ""
"`Dash's total coin emission <https://docs.google.com/spreadsheets/d "
"/1JUK4Iy8pjTzQ3Fvc-iV15n2qn19fmiJhnKDDSxebbAA/edit#gid=205877544>`_ is also "
"the sum of a geometric series, but the ultimate total coin emission is "
"uncertain because it cannot be known how much of the 20% block subsidy "
"reserved for budget proposals will actually be allocated, since this depends"
" on future voting behavior. Dash will continue to emit coins for "
"approximately 192 years before a full year of mining creates less than 1 "
"DASH. After 2209 only 14 more DASH will be created. The last DASH will take "
"231 years to be generated, starting in 2246 and ending when emission "
"completely stops in 2477. Based on these numbers, a maximum and minimum "
"possible coin supply in the year 2254 can be calculated to be between:"
msgstr ""

#: ../../docs/user/introduction/features.rst:428
msgid "17,742,696 DASH"
msgstr "17,742,696 대시"

#: ../../docs/user/introduction/features.rst:428
msgid "Assuming zero treasury allocation"
msgstr "재무 시스템 할당을 고려하지 않은 경우"

#: ../../docs/user/introduction/features.rst:430
msgid "18,921,005 DASH"
msgstr "18,921,005 대시"

#: ../../docs/user/introduction/features.rst:430
msgid "Assuming full treasury allocation"
msgstr ""

#: ../../docs/user/introduction/features.rst:434
msgid "Block reward allocation"
msgstr "블록 보상 할당"

#: ../../docs/user/introduction/features.rst:436
msgid ""
"Unlike Bitcoin, which allocates 100% of the block subsidy to miners, Dash "
"holds back part of the block subsidy for use in the decentralized "
":ref:`budget system <decentralized-governance>`. The remainder of the block "
"subsidy, as well as any transaction fees, is split between the :ref:`miner "
"<mining>` and a :ref:`masternode <masternodes>`, which is deterministically "
"selected according to the :ref:`payment logic <payment-logic>`. Dash "
"features superblocks, which appear every 16616 blocks (approx. 30.29 days) "
"and can release the cumulative governance budget held back over that "
":ref:`budget cycle period <budget-cycles>` to the winning proposals in the "
"budget system. Depending on budget utilization, this results in an "
"approximate coin allocation over a budget cycle as follows:"
msgstr ""

#: ../../docs/user/introduction/features.rst:450
msgid "80%"
msgstr ""

#: ../../docs/user/introduction/features.rst:450
msgid "Mining and Masternode Reward"
msgstr ""

#: ../../docs/user/introduction/features.rst:452
#: ../../docs/user/introduction/features.rst:473
#: ../../docs/user/introduction/features.rst:475
msgid "20%"
msgstr ""

#: ../../docs/user/introduction/features.rst:452
#: ../../docs/user/introduction/features.rst:475
msgid "Decentralized Governance Budget"
msgstr "분산화된 거버넌스 예산"

#: ../../docs/user/introduction/features.rst:455
msgid ""
"When the Dash Core v20 hard fork activates, Dash's governance budget will "
"grow to 20% of the block subsidy per the governance proposal approved in "
"September 2023. Additional details can be found in the :ref:`Treasury "
"expansion section <block-subsidy-reallocation-treasury-expansion>`."
msgstr ""

#: ../../docs/user/introduction/features.rst:463
msgid "Treasury expansion"
msgstr ""

#: ../../docs/user/introduction/features.rst:465
msgid ""
"In September of 2023, the Dash network approved a `proposal "
"<https://www.dashcentral.org/p/TREASURY-REALLOCATION-60-20-20>`__ to double "
"the governance budget by modifying the block subsidy allocation. The new "
"allocation designates 20% for miners, 20% for the governance system budget, "
"and 60% for masternodes. The expansion will go into effect upon activation "
"of the Dash Core v20 hard fork."
msgstr ""

#: ../../docs/user/introduction/features.rst:473
msgid "Mining Reward"
msgstr "채굴 보상"

#: ../../docs/user/introduction/features.rst:477
msgid "60%"
msgstr ""

#: ../../docs/user/introduction/features.rst:477
msgid "Masternode Reward"
msgstr ""

#: ../../docs/user/introduction/features.rst:481
msgid "Miner and masternode reallocation"
msgstr ""

#: ../../docs/user/introduction/features.rst:485
msgid ""
"This block reward reallocation process was superseded by the :ref:`treasury "
"expansion <block-subsidy-reallocation-treasury-expansion>` approved by the "
"network in 2023. Upon activation of the Dash Core v20 hard fork this table "
"will be obsolete."
msgstr ""

#: ../../docs/user/introduction/features.rst:490
msgid ""
"On 13 August 2020, the Dash network approved a `proposal "
"<https://www.dashcentral.org/p/decision-proposal-block-reward-reallocat>`__ "
"to modify the block reward allocation from 50/50 between miners and "
"masternodes to 40/60, respectively. The incremental reallocation adjusts the"
" percentage share every three superblock cycles."
msgstr ""

#: ../../docs/user/introduction/features.rst:498
msgid ""
"The following table shows the incremental reallocation process and indicates"
" the current reallocation date. Reward reallocation changes began at the "
"first superblock following activation and now occur every three superblock "
"cycles (approximately once per quarter) until the reallocation is complete."
msgstr ""

#: ../../docs/user/introduction/features.rst:504
msgid "Adjustment"
msgstr ""

#: ../../docs/user/introduction/features.rst:504
msgid "Miner %"
msgstr ""

#: ../../docs/user/introduction/features.rst:504
msgid "Masternode %"
msgstr ""

#: ../../docs/user/introduction/features.rst:504
msgid "Change (%)"
msgstr ""

#: ../../docs/user/introduction/features.rst:504
msgid "Reallocation Dates"
msgstr ""

#: ../../docs/user/introduction/features.rst:506
msgid "0"
msgstr ""

#: ../../docs/user/introduction/features.rst:506
msgid "50.0"
msgstr ""

#: ../../docs/user/introduction/features.rst:506
msgid "0.00%"
msgstr ""

#: ../../docs/user/introduction/features.rst:506
msgid "---"
msgstr ""

#: ../../docs/user/introduction/features.rst:508
msgid "1"
msgstr ""

#: ../../docs/user/introduction/features.rst:508
msgid "48.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:508
msgid "51.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:508
#: ../../docs/user/introduction/features.rst:510
msgid "1.30%"
msgstr ""

#: ../../docs/user/introduction/features.rst:508
msgid "2020-11-28"
msgstr ""

#: ../../docs/user/introduction/features.rst:510
msgid "2"
msgstr ""

#: ../../docs/user/introduction/features.rst:510
msgid "47.4"
msgstr ""

#: ../../docs/user/introduction/features.rst:510
msgid "52.6"
msgstr ""

#: ../../docs/user/introduction/features.rst:510
msgid "2021-02-27"
msgstr ""

#: ../../docs/user/introduction/features.rst:512
msgid "3"
msgstr ""

#: ../../docs/user/introduction/features.rst:512
msgid "46.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:512
msgid "53.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:512
#: ../../docs/user/introduction/features.rst:514
msgid "0.70%"
msgstr ""

#: ../../docs/user/introduction/features.rst:512
msgid "2021-05-29"
msgstr ""

#: ../../docs/user/introduction/features.rst:514
msgid "4"
msgstr ""

#: ../../docs/user/introduction/features.rst:514
msgid "46.0"
msgstr ""

#: ../../docs/user/introduction/features.rst:514
msgid "54.0"
msgstr ""

#: ../../docs/user/introduction/features.rst:514
msgid "2021-08-28"
msgstr ""

#: ../../docs/user/introduction/features.rst:516
msgid "5"
msgstr ""

#: ../../docs/user/introduction/features.rst:516
msgid "45.4"
msgstr ""

#: ../../docs/user/introduction/features.rst:516
msgid "54.6"
msgstr ""

#: ../../docs/user/introduction/features.rst:516
#: ../../docs/user/introduction/features.rst:518
msgid "0.60%"
msgstr ""

#: ../../docs/user/introduction/features.rst:516
msgid "2021-11-27"
msgstr ""

#: ../../docs/user/introduction/features.rst:518
msgid "6"
msgstr ""

#: ../../docs/user/introduction/features.rst:518
msgid "44.8"
msgstr ""

#: ../../docs/user/introduction/features.rst:518
msgid "55.2"
msgstr ""

#: ../../docs/user/introduction/features.rst:518
msgid "2022-02-25"
msgstr ""

#: ../../docs/user/introduction/features.rst:520
msgid "7"
msgstr ""

#: ../../docs/user/introduction/features.rst:520
msgid "44.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:520
msgid "55.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:520
#: ../../docs/user/introduction/features.rst:522
#: ../../docs/user/introduction/features.rst:524
#: ../../docs/user/introduction/features.rst:526
#: ../../docs/user/introduction/features.rst:528
#: ../../docs/user/introduction/features.rst:530
msgid "0.50%"
msgstr ""

#: ../../docs/user/introduction/features.rst:520
msgid "2022-05-27"
msgstr ""

#: ../../docs/user/introduction/features.rst:522
msgid "8"
msgstr ""

#: ../../docs/user/introduction/features.rst:522
msgid "43.8"
msgstr ""

#: ../../docs/user/introduction/features.rst:522
msgid "56.2"
msgstr ""

#: ../../docs/user/introduction/features.rst:522
msgid "2022-08-26"
msgstr ""

#: ../../docs/user/introduction/features.rst:524
msgid "9"
msgstr ""

#: ../../docs/user/introduction/features.rst:524
msgid "43.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:524
msgid "56.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:524
msgid "2022-11-25"
msgstr ""

#: ../../docs/user/introduction/features.rst:526
msgid "10"
msgstr ""

#: ../../docs/user/introduction/features.rst:526
msgid "42.8"
msgstr ""

#: ../../docs/user/introduction/features.rst:526
msgid "57.2"
msgstr ""

#: ../../docs/user/introduction/features.rst:526
msgid "2023-02-24"
msgstr ""

#: ../../docs/user/introduction/features.rst:528
msgid "11"
msgstr ""

#: ../../docs/user/introduction/features.rst:528
msgid "42.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:528
msgid "57.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:528
msgid "2023-05-26"
msgstr ""

#: ../../docs/user/introduction/features.rst:530
msgid "12"
msgstr ""

#: ../../docs/user/introduction/features.rst:530
msgid "41.8"
msgstr ""

#: ../../docs/user/introduction/features.rst:530
msgid "58.2"
msgstr ""

#: ../../docs/user/introduction/features.rst:530
msgid "2023-08-25"
msgstr ""

#: ../../docs/user/introduction/features.rst:532
msgid "13 (Current)"
msgstr ""

#: ../../docs/user/introduction/features.rst:532
msgid "41.5"
msgstr ""

#: ../../docs/user/introduction/features.rst:532
msgid "58.5"
msgstr ""

#: ../../docs/user/introduction/features.rst:532
#: ../../docs/user/introduction/features.rst:534
#: ../../docs/user/introduction/features.rst:536
#: ../../docs/user/introduction/features.rst:538
#: ../../docs/user/introduction/features.rst:540
msgid "0.30%"
msgstr ""

#: ../../docs/user/introduction/features.rst:532
msgid "2023-11-24"
msgstr ""

#: ../../docs/user/introduction/features.rst:534
msgid "14"
msgstr ""

#: ../../docs/user/introduction/features.rst:534
msgid "41.2"
msgstr ""

#: ../../docs/user/introduction/features.rst:534
msgid "58.8"
msgstr ""

#: ../../docs/user/introduction/features.rst:534
msgid "2024-02-23"
msgstr ""

#: ../../docs/user/introduction/features.rst:536
msgid "15"
msgstr ""

#: ../../docs/user/introduction/features.rst:536
msgid "40.9"
msgstr ""

#: ../../docs/user/introduction/features.rst:536
msgid "59.1"
msgstr ""

#: ../../docs/user/introduction/features.rst:536
msgid "2024-05-24"
msgstr ""

#: ../../docs/user/introduction/features.rst:538
msgid "16"
msgstr ""

#: ../../docs/user/introduction/features.rst:538
msgid "40.6"
msgstr ""

#: ../../docs/user/introduction/features.rst:538
msgid "59.4"
msgstr ""

#: ../../docs/user/introduction/features.rst:538
msgid "2024-08-22"
msgstr ""

#: ../../docs/user/introduction/features.rst:540
msgid "17"
msgstr ""

#: ../../docs/user/introduction/features.rst:540
msgid "40.3"
msgstr ""

#: ../../docs/user/introduction/features.rst:540
msgid "59.7"
msgstr ""

#: ../../docs/user/introduction/features.rst:540
msgid "2024-11-21"
msgstr ""

#: ../../docs/user/introduction/features.rst:542
msgid "18"
msgstr ""

#: ../../docs/user/introduction/features.rst:542
msgid "40.1"
msgstr ""

#: ../../docs/user/introduction/features.rst:542
msgid "59.9"
msgstr ""

#: ../../docs/user/introduction/features.rst:542
msgid "0.20%"
msgstr ""

#: ../../docs/user/introduction/features.rst:542
msgid "2025-02-20"
msgstr ""

#: ../../docs/user/introduction/features.rst:544
msgid "19"
msgstr ""

#: ../../docs/user/introduction/features.rst:544
msgid "40.0"
msgstr ""

#: ../../docs/user/introduction/features.rst:544
msgid "60.0"
msgstr ""

#: ../../docs/user/introduction/features.rst:544
msgid "0.10%"
msgstr ""

#: ../../docs/user/introduction/features.rst:544
msgid "2025-05-22"
msgstr ""

#: ../../docs/user/introduction/features.rst:547
msgid ""
"This documentation is based on calculations and posts by moocowmoo. Please "
"see `this reddit post <https://www.reddit.com/r/dashpay/comments/ "
"7fc2on/dash_over_1000_in_a_few_weeks/dqb4pjn/>`_ for more details, or run "
"your own `emission calculations using this tool "
"<https://repl.it/@moocowmoo/dash-minmax-coin-generation>`_. See `this site "
"<https://stats.masternode.me>`_ for live data on current network statistics."
msgstr ""

#: ../../docs/user/introduction/features.rst:558
msgid "Decentralized Governance"
msgstr "분산화된 거버넌스(Decentralized Governance)"

#: ../../docs/user/introduction/features.rst:560
msgid ""
"Decentralized Governance by Blockchain, or DGBB, is Dash's attempt to solve "
"two important problems in cryptocurrency: governance and funding. Governance"
" in a decentralized project is difficult, because by definition there are no"
" central authorities to make decisions for the project. In Dash, such "
"decisions are made by the Decentralized Autonomous Organization (DAO). The "
"DAO allows each masternode to vote once (yes/no/abstain) for each proposal. "
"If a proposal passes, it can then be implemented (or not) by Dash's "
"developers. A key example is early in 2016, when Dash's Core Team submitted "
"a proposal to the network asking whether the blocksize should be increased "
"to 2 MB. Within 24 hours, consensus had been reached to approve this change."
" Compare this to Bitcoin, where debate on the blocksize has been raging for "
"nearly three years."
msgstr ""

#: ../../docs/user/introduction/features.rst:573
msgid ""
"DAO also provides a means for Dash to fund its own development. While other "
"projects have to depend on donations or premined endowments, Dash uses 20% "
"of the block subsidy to fund its own development. Every time a block is "
"mined, 80% of the subsidy is split between the miner and a masternode per "
"the distribution found :ref:`here <block-reward-reallocation>`, while the "
"remaining 20% is not created until the end of the month. During the month, "
"anybody can make a budget proposal to the network. If that proposal receives"
" net approval of at least 10% of the masternode network, then at the end of "
"the month a \"superblock\" will be created. At that time, the block subsidy "
"that was not paid out (20% of each block) will be used to fund approved "
"proposals. The network thus funds itself by reserving 20% of the block "
"subsidy for budget projects."
msgstr ""

#: ../../docs/user/introduction/features.rst:587
msgid ""
"You can read more about Dash governance in the :ref:`governance` section of "
"this documentation."
msgstr "대시 거버넌스에 관한 더 자세한 내용은 이 문서의 :ref:`governance` 에서 확인하실 수 있습니다."

#: ../../docs/user/introduction/features.rst:594
msgid "Sentinel"
msgstr "센티넬(Sentinel)"

#: ../../docs/user/introduction/features.rst:598
msgid ""
"Sentinel was deprecated in Dash Core v20.0 when its functionality was "
"integrated into Dash Core."
msgstr ""

#: ../../docs/user/introduction/features.rst:601
msgid ""
"Introduced in Dash 0.12.1, Sentinel is an autonomous agent for persisting, "
"processing and automating Dash governance objects and tasks. Sentinel is "
"implemented as a Python application that binds to a local version dashd "
"instance on each Dash masternode."
msgstr ""

#: ../../docs/user/introduction/features.rst:606
msgid ""
"A Governance Object (or \"govObject\") is a generic structure introduced in "
"Dash 0.12.1 to allow for the creation of Budget Proposals and Triggers. "
"Class inheritance has been utilized to extend this generic object into a "
"\"Proposal\" object to supplant the current Dash budget system."
msgstr ""

#: ../../docs/user/introduction/features.rst:615
msgid "Diagram highlighting the relationship between Dash Sentinel and Core"
msgstr "대시 센티넬과 코어 사이의 관계를 강조하는 도표"

#: ../../docs/user/introduction/features.rst:621
msgid "Fees"
msgstr "수수료"

#: ../../docs/user/introduction/features.rst:623
msgid ""
"Transactions on the Dash network are recorded in blocks on the blockchain. "
"The size of each transaction is measured in bytes, but there is not "
"necessarily a correlation between high value transactions and the number of "
"bytes required to process the transaction. Instead, transaction size is "
"affected by how many input and output addresses are involved, since more "
"data must be written in the block to store this information. Each new block "
"is generated by a miner, who is paid for completing the work to generate the"
" block with a block reward. In order to prevent the network from being "
"filled with spam transactions, the size of each block is artificially "
"limited. As transaction volume increases, the space in each block becomes a "
"scarce commodity. Because miners are not obliged to include any transaction "
"in the blocks they produce, once blocks are full, a voluntary transaction "
"fee can be included as an incentive to the miner to process the transaction."
" Most wallets include a small fee by default, although some miners will "
"process transactions even if no fee is included."
msgstr ""

#: ../../docs/user/introduction/features.rst:640
msgid ""
"The release of Dash 0.12.2.0 and activation of DIP0001 saw a simultaneous "
"reduction of fees by a factor of 10, while the block size was increased from"
" 1MB to 2MB to promote continued growth of low-cost transactions even as the"
" cost of Dash rises. Dash 0.13.0.0 introduced InstantSend autolocks, which "
"caused masternodes to automatically attempt to lock any transaction with 4 "
"or fewer inputs — which are referred to as “simple” transactions — and "
"removed the additional fee for InstantSend. 0.14.0.0 then removed the "
"limitation on 4 inputs, so the network will attempt to lock all "
"transactions. The current fee schedule for Dash is as follows:"
msgstr ""

#: ../../docs/user/introduction/features.rst:652
msgid "Transaction type"
msgstr "거래 유형"

#: ../../docs/user/introduction/features.rst:652
msgid "Recommended fee"
msgstr "권장 수수료"

#: ../../docs/user/introduction/features.rst:652
msgid "Per unit"
msgstr "단위당"

#: ../../docs/user/introduction/features.rst:654
msgid "0.001 DASH"
msgstr ""

#: ../../docs/user/introduction/features.rst:654
msgid "Per 10 rounds of CoinJoin (average)"
msgstr ""

#: ../../docs/user/introduction/features.rst:656
msgid "All other transactions"
msgstr ""

#: ../../docs/user/introduction/features.rst:656
msgid "0.00001 DASH"
msgstr ""

#: ../../docs/user/introduction/features.rst:656
msgid "Per kB of transaction data"
msgstr "거래 데이터의 kB 당"

#: ../../docs/user/introduction/features.rst:659
msgid ""
"As an example, a standard and relatively simple transaction on the Dash "
"network with one input, one output and a possible change address typically "
"fits in the range of 200 - 400 bytes. Assuming a price of US$100 per DASH, "
"the fee falls in the range of $0.0002 - $0.0004, or 1/50th of a cent. "
"InstantSend locking will be attempted on all transactions without any extra "
"charge."
msgstr ""

#: ../../docs/user/introduction/features.rst:666
msgid ""
":ref:`CoinJoin` works by creating denominations of 10, 1, 0.1, 0.01 and "
"0.001 DASH and then creating CoinJoin transactions with other users using "
"these denominations. Creation of the denominations is charged at the default"
" fee for a standard transaction. Using CoinJoin is free, but to prevent spam"
" attacks, an average of one in ten CoinJoin transactions are charged a fee "
"of 0.0001 DASH. Spending denominated inputs using CoinJoin incurs the usual "
"standard fees, but to avoid creating a potentially identifiable change "
"address, the fee is always rounded up to the lowest possible denomination. "
"This is typically 0.001 DASH, so it is important to deduct the fee from the "
"amount being sent if possible to minimise fees. Combining InstantSend and "
"CoinJoin may be expensive due to this requirement and the fact that a "
"CoinJoin transaction may require several inputs, while InstantSend charges a"
" fee of 0.0001 DASH per input. Always check your fees before sending a "
"transaction."
msgstr ""

#: ../../docs/user/introduction/features.rst:685
msgid "Evolution"
msgstr "에볼루션(Evolution)"

#: ../../docs/user/introduction/features.rst:687
msgid ""
"`Dash Evolution <https://www.dash.org/roadmap/>`_ is the code name for a "
"decentralized platform built on Dash blockchain technology. The goal is to "
"provide simple access to the unique features and benefits of Dash to assist "
"in the creation of decentralized technology. Dash introduces a tiered "
"network design, which allows users to do various jobs for the network, along"
" with decentralized API access and a decentralized file system."
msgstr ""

#: ../../docs/user/introduction/features.rst:695
msgid ""
"Dash Evolution will be released in stages. Dash Core releases 0.12.1 through"
" to 0.12.3 lay the groundwork for the decentralized features behind the "
"scenes. Version 0.13 introduces the foundation of Evolution, specifically "
"`DIP2 Special Transactions "
"<https://github.com/dashpay/dips/blob/master/dip-0002.md>`__ and `DIP3 "
"Deterministic Masternode Lists "
"<https://github.com/dashpay/dips/blob/master/dip-0003.md>`__. Version 0.14 "
"establishes `DIP6 Long Living Masternode Quorums "
"<https://github.com/dashpay/dips/blob/master/dip-0006.md>`__. Expected in "
"late 2019, Dash Core 1.0 will introduce key Evolution features such as "
"username-based payments, the world's first decentralized API (DAPI) and a "
"decentralized data storage system (Drive) based on IPFS."
msgstr ""

#: ../../docs/user/introduction/features.rst:706
msgid ""
"Included below is our current work on Evolution, that adds many components "
"such as:"
msgstr "아래의 내용은 에볼루션에 관한 현재의 작업 상황을 나타냅니다. 여기에는 아래와 같은 많은 구성 요소들이 포함됩니다."

#: ../../docs/user/introduction/features.rst:709
msgid ""
"**Drive:** A decentralized shared file system for user data that lives on "
"the second tier network"
msgstr ""

#: ../../docs/user/introduction/features.rst:711
msgid ""
"**DAPI:** A decentralized API which allows third tier users to access the "
"network securely"
msgstr "**DAPI:** 세 번째 계층 사용자들이 네트워크에 안전하게 액세스 할 수 있도록 도와주는 분산화된 API 입니다."

#: ../../docs/user/introduction/features.rst:713
msgid ""
"**DashPay Decentralized Wallets:** These wallets are light clients connected"
" to the network via DAPI and run on various platforms"
msgstr ""
"**대시페이(DashPay) 분산형 지갑:** 이들 지갑은 라이트 클라이언트로서 DAPI를 통해 네트워크에 연결되며 다양한 플랫폼상에서 "
"작동합니다."

#: ../../docs/user/introduction/features.rst:715
msgid ""
"**Second Tier:** The masternode network, which provides compensated "
"infrastructure for the project"
msgstr "**두 번째 계층:** 마스터노드 네트워크를 일컫는 말로써, 프로젝트를 위한 인프라를 제공하고 보상을 받습니다."

#: ../../docs/user/introduction/features.rst:717
msgid ""
"**Budgets:** The second tier is given voting power to allocate funds for "
"specific projects on the network via the budget system"
msgstr "**예산:** 두 번째 계층은 예산 시스템을 통해 네트워크상의 특정 프로젝트에 자금을 할당하기 위한 투표권을 부여받습니다."

#: ../../docs/user/introduction/features.rst:719
msgid ""
"**Governance:** The second tier is given voting power to govern the currency"
" and chart the course the currency takes"
msgstr "**거버넌스:** 두 번째 계층은 대시를 운영하고, 대시가 나아갈 방향을 위한 투표권을 부여받습니다."

#: ../../docs/user/introduction/features.rst:721
msgid ""
"**Deterministic Masternode Lists:** This feature introduces an on-chain "
"masternode list, which can be used to calculate past and present quorums"
msgstr ""

#: ../../docs/user/introduction/features.rst:724
msgid ""
"**Social Wallet:** We introduce a social wallet, which allows friends lists,"
" grouping of users and shared multisig accounts"
msgstr ""

#: ../../docs/user/introduction/features.rst:728
msgid "Evolution Previews"
msgstr "에볼루션 미리 보기"

#: ../../docs/user/introduction/features.rst:730
msgid ""
"**Dash Dapps - Demoing Community Development on environment**, 17 August "
"2020"
msgstr ""

#: ../../docs/user/introduction/features.rst:740
msgid ""
"The following videos featuring Dash Founder Evan Duffield and Head of UI/UX "
"Development Chuck Williams describe the development process and upcoming "
"features of the Dash Evolution platform."
msgstr ""
"다음의 비디오를 통해 대시의 창립자인 에반 듀필드와 UI/UX 개발의 책임자인 척 윌리엄스가 대시 에볼루션 플랫폼의 개발 진행 상황과 "
"기능에 관해 설명합니다."

#: ../../docs/user/introduction/features.rst:744
msgid "**Evolution Demo #1 - The First Dash DAP**, 16 March 2018"
msgstr "**에볼루션 데모 #1 - 첫 번째 대시 DAP**, 2018년 3월 16일"

#: ../../docs/user/introduction/features.rst:752
msgid "**Evolution Demo #2 - Mobile Evolution**, 25 April 2018"
msgstr "**에볼루션 데모 #2 - 모바일 에볼루션**, 2018년 4월 25일"

#: ../../docs/user/introduction/features.rst:760
msgid "**Evolution Demo #3 - Dashpay User Experience**, 15 May 2018"
msgstr "**에볼루션 데모 #3 - 대시페이 사용자 경험**, 2018년 5월 15일"

#: ../../docs/user/introduction/features.rst:768
msgid ""
"**Chuck Williams on Evolution**, Dash Conference London, 14 September 2017"
msgstr "**에볼루션에 관하여 척 윌리엄스**, 대시 컨퍼런스 런던, 2017년 9월 14일"

#: ../../docs/user/introduction/features.rst:776
msgid ""
"**Evan Duffield on the Evolution Roadmap**, Dash Force News, 28 June 2017"
msgstr "**에볼루션 로드맵에 관하여 에반 듀필드**, 대시 포스 뉴스, 2017년 6월 28일"
